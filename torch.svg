<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>unicode/utf8.DecodeLastRuneInString (1 samples, 0.05%)</title><rect x="345.0" y="389" width="0.6" height="15.0" fill="rgb(241,16,8)" rx="2" ry="2" />
<text  x="348.00" y="399.5" ></text>
</g>
<g >
<title>syscall.syscall6 (1 samples, 0.05%)</title><rect x="403.3" y="357" width="0.6" height="15.0" fill="rgb(244,147,39)" rx="2" ry="2" />
<text  x="406.33" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="98.4" y="405" width="0.5" height="15.0" fill="rgb(205,43,29)" rx="2" ry="2" />
<text  x="101.37" y="415.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func3 (6 samples, 0.29%)</title><rect x="144.0" y="325" width="3.5" height="15.0" fill="rgb(248,27,41)" rx="2" ry="2" />
<text  x="147.00" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (4 samples, 0.20%)</title><rect x="153.2" y="277" width="2.4" height="15.0" fill="rgb(235,16,46)" rx="2" ry="2" />
<text  x="156.24" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.05%)</title><rect x="213.3" y="373" width="0.6" height="15.0" fill="rgb(228,196,45)" rx="2" ry="2" />
<text  x="216.31" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (82 samples, 4.01%)</title><rect x="213.3" y="389" width="47.4" height="15.0" fill="rgb(246,163,11)" rx="2" ry="2" />
<text  x="216.31" y="399.5" >inte..</text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.05%)</title><rect x="174.6" y="181" width="0.6" height="15.0" fill="rgb(214,180,6)" rx="2" ry="2" />
<text  x="177.61" y="191.5" ></text>
</g>
<g >
<title>reflect.Value.FieldByIndex (1 samples, 0.05%)</title><rect x="129.6" y="277" width="0.5" height="15.0" fill="rgb(209,93,24)" rx="2" ry="2" />
<text  x="132.56" y="287.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.05%)</title><rect x="388.3" y="341" width="0.6" height="15.0" fill="rgb(205,183,50)" rx="2" ry="2" />
<text  x="391.32" y="351.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (1 samples, 0.05%)</title><rect x="100.7" y="469" width="0.6" height="15.0" fill="rgb(232,27,38)" rx="2" ry="2" />
<text  x="103.68" y="479.5" ></text>
</g>
<g >
<title>runtime.makemap_small (2 samples, 0.10%)</title><rect x="209.3" y="437" width="1.1" height="15.0" fill="rgb(227,78,2)" rx="2" ry="2" />
<text  x="212.27" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="209.8" y="421" width="0.6" height="15.0" fill="rgb(227,167,49)" rx="2" ry="2" />
<text  x="212.84" y="431.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1147.8" y="341" width="0.6" height="15.0" fill="rgb(217,60,53)" rx="2" ry="2" />
<text  x="1150.84" y="351.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.05%)</title><rect x="265.3" y="325" width="0.6" height="15.0" fill="rgb(239,80,41)" rx="2" ry="2" />
<text  x="268.29" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.05%)</title><rect x="339.8" y="229" width="0.6" height="15.0" fill="rgb(241,42,5)" rx="2" ry="2" />
<text  x="342.80" y="239.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendType (3 samples, 0.15%)</title><rect x="133.6" y="373" width="1.7" height="15.0" fill="rgb(206,64,33)" rx="2" ry="2" />
<text  x="136.60" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="351.4" y="357" width="0.5" height="15.0" fill="rgb(239,186,48)" rx="2" ry="2" />
<text  x="354.35" y="367.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.05%)</title><rect x="62.6" y="501" width="0.5" height="15.0" fill="rgb(247,184,41)" rx="2" ry="2" />
<text  x="65.56" y="511.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (8 samples, 0.39%)</title><rect x="334.6" y="357" width="4.6" height="15.0" fill="rgb(212,127,1)" rx="2" ry="2" />
<text  x="337.60" y="367.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.05%)</title><rect x="355.4" y="485" width="0.6" height="15.0" fill="rgb(210,168,27)" rx="2" ry="2" />
<text  x="358.39" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).newEncoderState (1 samples, 0.05%)</title><rect x="139.4" y="437" width="0.6" height="15.0" fill="rgb(249,43,39)" rx="2" ry="2" />
<text  x="142.38" y="447.5" ></text>
</g>
<g >
<title>EntryTask/internal/controller.GetUserInfoHandler (441 samples, 21.59%)</title><rect x="101.3" y="501" width="254.7" height="15.0" fill="rgb(217,159,52)" rx="2" ry="2" />
<text  x="104.26" y="511.5" >EntryTask/internal/controller.Get..</text>
</g>
<g >
<title>runtime.semrelease1 (2 samples, 0.10%)</title><rect x="293.6" y="325" width="1.1" height="15.0" fill="rgb(240,94,48)" rx="2" ry="2" />
<text  x="296.59" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).writeMessage (6 samples, 0.29%)</title><rect x="116.9" y="309" width="3.4" height="15.0" fill="rgb(234,33,12)" rx="2" ry="2" />
<text  x="119.85" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.05%)</title><rect x="381.4" y="533" width="0.6" height="15.0" fill="rgb(228,170,53)" rx="2" ry="2" />
<text  x="384.39" y="543.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (1 samples, 0.05%)</title><rect x="70.1" y="517" width="0.5" height="15.0" fill="rgb(253,227,48)" rx="2" ry="2" />
<text  x="73.07" y="527.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (1 samples, 0.05%)</title><rect x="202.3" y="261" width="0.6" height="15.0" fill="rgb(213,89,28)" rx="2" ry="2" />
<text  x="205.33" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="412.0" y="437" width="0.6" height="15.0" fill="rgb(215,17,47)" rx="2" ry="2" />
<text  x="415.00" y="447.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (16 samples, 0.78%)</title><rect x="390.6" y="437" width="9.3" height="15.0" fill="rgb(241,227,36)" rx="2" ry="2" />
<text  x="393.63" y="447.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (8 samples, 0.39%)</title><rect x="1137.4" y="453" width="4.7" height="15.0" fill="rgb(229,186,51)" rx="2" ry="2" />
<text  x="1140.44" y="463.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="763.2" y="453" width="0.5" height="15.0" fill="rgb(228,49,40)" rx="2" ry="2" />
<text  x="766.17" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.isExported (1 samples, 0.05%)</title><rect x="175.8" y="293" width="0.5" height="15.0" fill="rgb(254,25,37)" rx="2" ry="2" />
<text  x="178.77" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="300.5" y="341" width="0.6" height="15.0" fill="rgb(216,110,5)" rx="2" ry="2" />
<text  x="303.52" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.10%)</title><rect x="762.0" y="501" width="1.2" height="15.0" fill="rgb(230,4,27)" rx="2" ry="2" />
<text  x="765.01" y="511.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="184.4" y="293" width="0.6" height="15.0" fill="rgb(246,58,37)" rx="2" ry="2" />
<text  x="187.43" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.34%)</title><rect x="335.2" y="293" width="4.0" height="15.0" fill="rgb(221,6,40)" rx="2" ry="2" />
<text  x="338.18" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="339.8" y="277" width="0.6" height="15.0" fill="rgb(228,105,5)" rx="2" ry="2" />
<text  x="342.80" y="287.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.05%)</title><rect x="211.0" y="245" width="0.6" height="15.0" fill="rgb(230,137,31)" rx="2" ry="2" />
<text  x="214.00" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="70.1" y="469" width="0.5" height="15.0" fill="rgb(239,196,28)" rx="2" ry="2" />
<text  x="73.07" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (3 samples, 0.15%)</title><rect x="126.1" y="261" width="1.7" height="15.0" fill="rgb(222,99,25)" rx="2" ry="2" />
<text  x="129.09" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="197.7" y="85" width="0.6" height="15.0" fill="rgb(205,122,7)" rx="2" ry="2" />
<text  x="200.71" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.05%)</title><rect x="300.5" y="53" width="0.6" height="15.0" fill="rgb(205,193,38)" rx="2" ry="2" />
<text  x="303.52" y="63.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.05%)</title><rect x="10.6" y="469" width="0.6" height="15.0" fill="rgb(229,196,46)" rx="2" ry="2" />
<text  x="13.58" y="479.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (1 samples, 0.05%)</title><rect x="291.9" y="341" width="0.5" height="15.0" fill="rgb(225,174,50)" rx="2" ry="2" />
<text  x="294.86" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="762.0" y="469" width="0.6" height="15.0" fill="rgb(235,66,47)" rx="2" ry="2" />
<text  x="765.01" y="479.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="103.0" y="421" width="0.6" height="15.0" fill="rgb(241,214,10)" rx="2" ry="2" />
<text  x="105.99" y="431.5" ></text>
</g>
<g >
<title>reflect.(*rtype).FieldByName (2 samples, 0.10%)</title><rect x="202.9" y="309" width="1.2" height="15.0" fill="rgb(239,210,33)" rx="2" ry="2" />
<text  x="205.91" y="319.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.10%)</title><rect x="70.6" y="501" width="1.2" height="15.0" fill="rgb(216,163,36)" rx="2" ry="2" />
<text  x="73.65" y="511.5" ></text>
</g>
<g >
<title>reflect.(*rtype).FieldByName (5 samples, 0.24%)</title><rect x="188.5" y="341" width="2.9" height="15.0" fill="rgb(210,73,36)" rx="2" ry="2" />
<text  x="191.47" y="351.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.05%)</title><rect x="291.9" y="357" width="0.5" height="15.0" fill="rgb(253,177,0)" rx="2" ry="2" />
<text  x="294.86" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="122.6" y="277" width="0.6" height="15.0" fill="rgb(213,169,15)" rx="2" ry="2" />
<text  x="125.63" y="287.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (2 samples, 0.10%)</title><rect x="298.2" y="277" width="1.2" height="15.0" fill="rgb(213,45,34)" rx="2" ry="2" />
<text  x="301.21" y="287.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.05%)</title><rect x="74.1" y="437" width="0.6" height="15.0" fill="rgb(251,16,26)" rx="2" ry="2" />
<text  x="77.11" y="447.5" ></text>
</g>
<g >
<title>runtime.markroot (41 samples, 2.01%)</title><rect x="1157.1" y="501" width="23.7" height="15.0" fill="rgb(234,105,34)" rx="2" ry="2" />
<text  x="1160.08" y="511.5" >r..</text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.05%)</title><rect x="334.0" y="277" width="0.6" height="15.0" fill="rgb(228,220,9)" rx="2" ry="2" />
<text  x="337.02" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="343.3" y="389" width="0.5" height="15.0" fill="rgb(208,90,42)" rx="2" ry="2" />
<text  x="346.26" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.05%)</title><rect x="205.2" y="245" width="0.6" height="15.0" fill="rgb(240,178,27)" rx="2" ry="2" />
<text  x="208.22" y="255.5" ></text>
</g>
<g >
<title>runtime.deferproc (4 samples, 0.20%)</title><rect x="110.5" y="181" width="2.3" height="15.0" fill="rgb(215,58,19)" rx="2" ry="2" />
<text  x="113.50" y="191.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func4 (2 samples, 0.10%)</title><rect x="144.0" y="277" width="1.2" height="15.0" fill="rgb(220,94,25)" rx="2" ry="2" />
<text  x="147.00" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.05%)</title><rect x="184.4" y="229" width="0.6" height="15.0" fill="rgb(226,176,16)" rx="2" ry="2" />
<text  x="187.43" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (1 samples, 0.05%)</title><rect x="339.8" y="197" width="0.6" height="15.0" fill="rgb(216,116,12)" rx="2" ry="2" />
<text  x="342.80" y="207.5" ></text>
</g>
<g >
<title>runtime.gomcache (1 samples, 0.05%)</title><rect x="212.2" y="421" width="0.5" height="15.0" fill="rgb(238,164,3)" rx="2" ry="2" />
<text  x="215.15" y="431.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.05%)</title><rect x="172.9" y="213" width="0.6" height="15.0" fill="rgb(233,16,10)" rx="2" ry="2" />
<text  x="175.88" y="223.5" ></text>
</g>
<g >
<title>strings.TrimRightFunc (1 samples, 0.05%)</title><rect x="345.0" y="421" width="0.6" height="15.0" fill="rgb(233,9,47)" rx="2" ry="2" />
<text  x="348.00" y="431.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.05%)</title><rect x="371.6" y="325" width="0.5" height="15.0" fill="rgb(210,221,48)" rx="2" ry="2" />
<text  x="374.57" y="335.5" ></text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.05%)</title><rect x="134.2" y="261" width="0.6" height="15.0" fill="rgb(233,44,46)" rx="2" ry="2" />
<text  x="137.18" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (13 samples, 0.64%)</title><rect x="123.8" y="325" width="7.5" height="15.0" fill="rgb(214,138,0)" rx="2" ry="2" />
<text  x="126.78" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (82 samples, 4.01%)</title><rect x="213.3" y="405" width="47.4" height="15.0" fill="rgb(220,194,33)" rx="2" ry="2" />
<text  x="216.31" y="415.5" >net...</text>
</g>
<g >
<title>runtime.rawstring (1 samples, 0.05%)</title><rect x="202.3" y="245" width="0.6" height="15.0" fill="rgb(226,56,45)" rx="2" ry="2" />
<text  x="205.33" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="109.3" y="101" width="0.6" height="15.0" fill="rgb(228,60,9)" rx="2" ry="2" />
<text  x="112.34" y="111.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.05%)</title><rect x="300.5" y="149" width="0.6" height="15.0" fill="rgb(229,165,41)" rx="2" ry="2" />
<text  x="303.52" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="68.3" y="533" width="0.6" height="15.0" fill="rgb(233,181,33)" rx="2" ry="2" />
<text  x="71.34" y="543.5" ></text>
</g>
<g >
<title>encoding/gob.(*decoderState).decodeUint (1 samples, 0.05%)</title><rect x="148.0" y="325" width="0.6" height="15.0" fill="rgb(215,79,40)" rx="2" ry="2" />
<text  x="151.04" y="335.5" ></text>
</g>
<g >
<title>runtime.chansend (6 samples, 0.29%)</title><rect x="103.6" y="437" width="3.4" height="15.0" fill="rgb(234,80,11)" rx="2" ry="2" />
<text  x="106.57" y="447.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="200.6" y="277" width="0.6" height="15.0" fill="rgb(211,93,13)" rx="2" ry="2" />
<text  x="203.60" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (5 samples, 0.24%)</title><rect x="116.9" y="277" width="2.8" height="15.0" fill="rgb(220,177,1)" rx="2" ry="2" />
<text  x="119.85" y="287.5" ></text>
</g>
<g >
<title>runtime.netpoll (29 samples, 1.42%)</title><rect x="415.5" y="501" width="16.7" height="15.0" fill="rgb(208,144,53)" rx="2" ry="2" />
<text  x="418.46" y="511.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.05%)</title><rect x="334.0" y="229" width="0.6" height="15.0" fill="rgb(254,97,34)" rx="2" ry="2" />
<text  x="337.02" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.15%)</title><rect x="111.1" y="165" width="1.7" height="15.0" fill="rgb(252,77,48)" rx="2" ry="2" />
<text  x="114.08" y="175.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.20%)</title><rect x="1186.0" y="517" width="2.3" height="15.0" fill="rgb(241,169,3)" rx="2" ry="2" />
<text  x="1188.96" y="527.5" ></text>
</g>
<g >
<title>runtime.osyield (9 samples, 0.44%)</title><rect x="404.5" y="517" width="5.2" height="15.0" fill="rgb(223,118,16)" rx="2" ry="2" />
<text  x="407.49" y="527.5" ></text>
</g>
<g >
<title>runtime.newproc (1 samples, 0.05%)</title><rect x="403.9" y="485" width="0.6" height="15.0" fill="rgb(236,143,41)" rx="2" ry="2" />
<text  x="406.91" y="495.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.05%)</title><rect x="122.6" y="261" width="0.6" height="15.0" fill="rgb(253,177,8)" rx="2" ry="2" />
<text  x="125.63" y="271.5" ></text>
</g>
<g >
<title>net/http.ListenAndServe (5 samples, 0.24%)</title><rect x="401.6" y="533" width="2.9" height="15.0" fill="rgb(219,5,18)" rx="2" ry="2" />
<text  x="404.60" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="201.8" y="261" width="0.5" height="15.0" fill="rgb(228,152,10)" rx="2" ry="2" />
<text  x="204.76" y="271.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (1 samples, 0.05%)</title><rect x="157.9" y="229" width="0.5" height="15.0" fill="rgb(253,63,37)" rx="2" ry="2" />
<text  x="160.86" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="207.0" y="373" width="0.5" height="15.0" fill="rgb(215,219,12)" rx="2" ry="2" />
<text  x="209.96" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="145.2" y="149" width="0.5" height="15.0" fill="rgb(246,94,53)" rx="2" ry="2" />
<text  x="148.15" y="159.5" ></text>
</g>
<g >
<title>encoding/gob.(*decBuffer).Len (1 samples, 0.05%)</title><rect x="194.8" y="149" width="0.6" height="15.0" fill="rgb(228,26,14)" rx="2" ry="2" />
<text  x="197.83" y="159.5" ></text>
</g>
<g >
<title>runtime.memclrHasPointers (1 samples, 0.05%)</title><rect x="12.3" y="485" width="0.6" height="15.0" fill="rgb(209,182,45)" rx="2" ry="2" />
<text  x="15.31" y="495.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="122.1" y="293" width="0.5" height="15.0" fill="rgb(229,133,22)" rx="2" ry="2" />
<text  x="125.05" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendActualType (26 samples, 1.27%)</title><rect x="123.8" y="389" width="15.0" height="15.0" fill="rgb(208,135,15)" rx="2" ry="2" />
<text  x="126.78" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="172.3" y="229" width="1.2" height="15.0" fill="rgb(211,123,20)" rx="2" ry="2" />
<text  x="175.30" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.10%)</title><rect x="134.2" y="309" width="1.1" height="15.0" fill="rgb(242,71,22)" rx="2" ry="2" />
<text  x="137.18" y="319.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.05%)</title><rect x="62.0" y="325" width="0.6" height="15.0" fill="rgb(228,214,32)" rx="2" ry="2" />
<text  x="64.98" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="140.5" y="389" width="0.6" height="15.0" fill="rgb(205,23,37)" rx="2" ry="2" />
<text  x="143.53" y="399.5" ></text>
</g>
<g >
<title>runtime.clearpools (1 samples, 0.05%)</title><rect x="147.5" y="261" width="0.5" height="15.0" fill="rgb(244,52,16)" rx="2" ry="2" />
<text  x="150.46" y="271.5" ></text>
</g>
<g >
<title>runtime.evacuate (1 samples, 0.05%)</title><rect x="208.1" y="357" width="0.6" height="15.0" fill="rgb(211,128,16)" rx="2" ry="2" />
<text  x="211.11" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="204.6" y="309" width="0.6" height="15.0" fill="rgb(238,27,35)" rx="2" ry="2" />
<text  x="207.65" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (9 samples, 0.44%)</title><rect x="144.0" y="373" width="5.2" height="15.0" fill="rgb(206,164,33)" rx="2" ry="2" />
<text  x="147.00" y="383.5" ></text>
</g>
<g >
<title>EntryTask/rpc/client.RpcClient.getConn (1 samples, 0.05%)</title><rect x="103.0" y="469" width="0.6" height="15.0" fill="rgb(221,56,29)" rx="2" ry="2" />
<text  x="105.99" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func1 (9 samples, 0.44%)</title><rect x="109.3" y="245" width="5.2" height="15.0" fill="rgb(206,37,34)" rx="2" ry="2" />
<text  x="112.34" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.34%)</title><rect x="781.1" y="469" width="4.0" height="15.0" fill="rgb(209,132,19)" rx="2" ry="2" />
<text  x="784.07" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (15 samples, 0.73%)</title><rect x="123.8" y="357" width="8.6" height="15.0" fill="rgb(251,198,49)" rx="2" ry="2" />
<text  x="126.78" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.05%)</title><rect x="77.0" y="453" width="0.6" height="15.0" fill="rgb(220,116,23)" rx="2" ry="2" />
<text  x="80.00" y="463.5" ></text>
</g>
<g >
<title>runtime.netpoll (114 samples, 5.58%)</title><rect x="658.0" y="501" width="65.9" height="15.0" fill="rgb(230,116,38)" rx="2" ry="2" />
<text  x="661.05" y="511.5" >runtime..</text>
</g>
<g >
<title>runtime.lock (5 samples, 0.24%)</title><rect x="647.1" y="517" width="2.9" height="15.0" fill="rgb(249,12,50)" rx="2" ry="2" />
<text  x="650.07" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="14.6" y="485" width="0.6" height="15.0" fill="rgb(223,30,9)" rx="2" ry="2" />
<text  x="17.62" y="495.5" ></text>
</g>
<g >
<title>all (2,043 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(234,9,11)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="130.1" y="277" width="0.6" height="15.0" fill="rgb(227,127,51)" rx="2" ry="2" />
<text  x="133.14" y="287.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.05%)</title><rect x="644.8" y="469" width="0.5" height="15.0" fill="rgb(250,131,21)" rx="2" ry="2" />
<text  x="647.76" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="139.4" y="405" width="0.6" height="15.0" fill="rgb(211,219,45)" rx="2" ry="2" />
<text  x="142.38" y="415.5" ></text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.05%)</title><rect x="154.4" y="245" width="0.6" height="15.0" fill="rgb(231,23,40)" rx="2" ry="2" />
<text  x="157.40" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (7 samples, 0.34%)</title><rect x="781.1" y="517" width="4.0" height="15.0" fill="rgb(214,176,11)" rx="2" ry="2" />
<text  x="784.07" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (10 samples, 0.49%)</title><rect x="261.8" y="389" width="5.8" height="15.0" fill="rgb(251,81,49)" rx="2" ry="2" />
<text  x="264.83" y="399.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (77 samples, 3.77%)</title><rect x="18.1" y="437" width="44.5" height="15.0" fill="rgb(213,79,28)" rx="2" ry="2" />
<text  x="21.09" y="447.5" >net/..</text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (1 samples, 0.05%)</title><rect x="63.7" y="501" width="0.6" height="15.0" fill="rgb(243,209,30)" rx="2" ry="2" />
<text  x="66.72" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="66.0" y="485" width="0.6" height="15.0" fill="rgb(233,112,31)" rx="2" ry="2" />
<text  x="69.03" y="495.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.05%)</title><rect x="375.6" y="549" width="0.6" height="15.0" fill="rgb(218,195,51)" rx="2" ry="2" />
<text  x="378.61" y="559.5" ></text>
</g>
<g >
<title>net/http.readTransfer (1 samples, 0.05%)</title><rect x="16.9" y="517" width="0.6" height="15.0" fill="rgb(247,221,21)" rx="2" ry="2" />
<text  x="19.93" y="527.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func4 (3 samples, 0.15%)</title><rect x="194.8" y="213" width="1.8" height="15.0" fill="rgb(214,145,3)" rx="2" ry="2" />
<text  x="197.83" y="223.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (2 samples, 0.10%)</title><rect x="187.3" y="325" width="1.2" height="15.0" fill="rgb(226,187,38)" rx="2" ry="2" />
<text  x="190.32" y="335.5" ></text>
</g>
<g >
<title>syscall.Accept (1 samples, 0.05%)</title><rect x="401.6" y="389" width="0.6" height="15.0" fill="rgb(254,142,8)" rx="2" ry="2" />
<text  x="404.60" y="399.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (28 samples, 1.37%)</title><rect x="383.7" y="485" width="16.2" height="15.0" fill="rgb(246,25,32)" rx="2" ry="2" />
<text  x="386.70" y="495.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.10%)</title><rect x="341.5" y="357" width="1.2" height="15.0" fill="rgb(210,135,54)" rx="2" ry="2" />
<text  x="344.53" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.allocValue (1 samples, 0.05%)</title><rect x="205.2" y="357" width="0.6" height="15.0" fill="rgb(244,111,47)" rx="2" ry="2" />
<text  x="208.22" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="290.7" y="357" width="0.6" height="15.0" fill="rgb(249,48,41)" rx="2" ry="2" />
<text  x="293.70" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.05%)</title><rect x="300.5" y="293" width="0.6" height="15.0" fill="rgb(249,63,6)" rx="2" ry="2" />
<text  x="303.52" y="303.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="11.7" y="469" width="0.6" height="15.0" fill="rgb(216,84,31)" rx="2" ry="2" />
<text  x="14.73" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="179.2" y="277" width="0.6" height="15.0" fill="rgb(243,8,42)" rx="2" ry="2" />
<text  x="182.23" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="1180.2" y="341" width="0.6" height="15.0" fill="rgb(232,56,14)" rx="2" ry="2" />
<text  x="1183.18" y="351.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (7 samples, 0.34%)</title><rect x="194.8" y="309" width="4.1" height="15.0" fill="rgb(210,221,8)" rx="2" ry="2" />
<text  x="197.83" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.05%)</title><rect x="211.6" y="245" width="0.6" height="15.0" fill="rgb(212,66,28)" rx="2" ry="2" />
<text  x="214.58" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(249,73,8)" rx="2" ry="2" />
<text  x="1192.42" y="527.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (2 samples, 0.10%)</title><rect x="145.2" y="245" width="1.1" height="15.0" fill="rgb(205,79,24)" rx="2" ry="2" />
<text  x="148.15" y="255.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="185.6" y="293" width="0.6" height="15.0" fill="rgb(211,97,26)" rx="2" ry="2" />
<text  x="188.58" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (33 samples, 1.62%)</title><rect x="382.5" y="549" width="19.1" height="15.0" fill="rgb(232,45,47)" rx="2" ry="2" />
<text  x="385.54" y="559.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.34%)</title><rect x="371.6" y="485" width="4.0" height="15.0" fill="rgb(231,48,33)" rx="2" ry="2" />
<text  x="374.57" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compatibleType (4 samples, 0.20%)</title><rect x="150.9" y="293" width="2.3" height="15.0" fill="rgb(254,123,52)" rx="2" ry="2" />
<text  x="153.93" y="303.5" ></text>
</g>
<g >
<title>unicode.IsSpace (1 samples, 0.05%)</title><rect x="344.4" y="389" width="0.6" height="15.0" fill="rgb(228,168,5)" rx="2" ry="2" />
<text  x="347.42" y="399.5" ></text>
</g>
<g >
<title>runtime.lock (14 samples, 0.69%)</title><rect x="1148.4" y="357" width="8.1" height="15.0" fill="rgb(243,192,37)" rx="2" ry="2" />
<text  x="1151.41" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.NumField (1 samples, 0.05%)</title><rect x="115.1" y="277" width="0.6" height="15.0" fill="rgb(240,136,13)" rx="2" ry="2" />
<text  x="118.12" y="287.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.05%)</title><rect x="109.3" y="149" width="0.6" height="15.0" fill="rgb(230,105,14)" rx="2" ry="2" />
<text  x="112.34" y="159.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="385.4" y="421" width="0.6" height="15.0" fill="rgb(205,187,20)" rx="2" ry="2" />
<text  x="388.43" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="155.0" y="229" width="0.6" height="15.0" fill="rgb(221,24,14)" rx="2" ry="2" />
<text  x="157.97" y="239.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="155.6" y="197" width="0.5" height="15.0" fill="rgb(210,61,18)" rx="2" ry="2" />
<text  x="158.55" y="207.5" ></text>
</g>
<g >
<title>runtime.kevent (113 samples, 5.53%)</title><rect x="658.6" y="485" width="65.3" height="15.0" fill="rgb(212,145,34)" rx="2" ry="2" />
<text  x="661.62" y="495.5" >runtime..</text>
</g>
<g >
<title>encoding/gob.encOpFor.func4 (5 samples, 0.24%)</title><rect x="127.8" y="309" width="2.9" height="15.0" fill="rgb(250,35,13)" rx="2" ry="2" />
<text  x="130.83" y="319.5" ></text>
</g>
<g >
<title>reflect.flag.mustBe (1 samples, 0.05%)</title><rect x="108.8" y="309" width="0.5" height="15.0" fill="rgb(245,171,52)" rx="2" ry="2" />
<text  x="111.77" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.overflow (3 samples, 0.15%)</title><rect x="176.3" y="293" width="1.8" height="15.0" fill="rgb(212,229,12)" rx="2" ry="2" />
<text  x="179.34" y="303.5" ></text>
</g>
<g >
<title>runtime.stackalloc (25 samples, 1.22%)</title><rect x="763.7" y="517" width="14.5" height="15.0" fill="rgb(237,125,4)" rx="2" ry="2" />
<text  x="766.74" y="527.5" ></text>
</g>
<g >
<title>net/http.(*Request).Cookie (4 samples, 0.20%)</title><rect x="343.3" y="485" width="2.3" height="15.0" fill="rgb(250,115,41)" rx="2" ry="2" />
<text  x="346.26" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="145.2" y="117" width="0.5" height="15.0" fill="rgb(247,98,9)" rx="2" ry="2" />
<text  x="148.15" y="127.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.05%)</title><rect x="196.6" y="101" width="0.5" height="15.0" fill="rgb(239,6,26)" rx="2" ry="2" />
<text  x="199.56" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="62.0" y="309" width="0.6" height="15.0" fill="rgb(227,90,2)" rx="2" ry="2" />
<text  x="64.98" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.05%)</title><rect x="409.7" y="501" width="0.6" height="15.0" fill="rgb(207,28,54)" rx="2" ry="2" />
<text  x="412.69" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="145.2" y="181" width="0.5" height="15.0" fill="rgb(207,112,50)" rx="2" ry="2" />
<text  x="148.15" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.15%)</title><rect x="776.5" y="485" width="1.7" height="15.0" fill="rgb(253,204,13)" rx="2" ry="2" />
<text  x="779.45" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="179.2" y="213" width="0.6" height="15.0" fill="rgb(240,157,44)" rx="2" ry="2" />
<text  x="182.23" y="223.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (78 samples, 3.82%)</title><rect x="17.5" y="453" width="45.1" height="15.0" fill="rgb(248,25,21)" rx="2" ry="2" />
<text  x="20.51" y="463.5" >bufi..</text>
</g>
<g >
<title>runtime.scang (41 samples, 2.01%)</title><rect x="1157.1" y="469" width="23.7" height="15.0" fill="rgb(209,102,47)" rx="2" ry="2" />
<text  x="1160.08" y="479.5" >r..</text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.05%)</title><rect x="181.5" y="277" width="0.6" height="15.0" fill="rgb(242,201,1)" rx="2" ry="2" />
<text  x="184.54" y="287.5" ></text>
</g>
<g >
<title>runtime.runqgrab (8 samples, 0.39%)</title><rect x="432.8" y="485" width="4.6" height="15.0" fill="rgb(253,192,29)" rx="2" ry="2" />
<text  x="435.79" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendTypeDescriptor (24 samples, 1.17%)</title><rect x="109.3" y="357" width="13.9" height="15.0" fill="rgb(219,208,50)" rx="2" ry="2" />
<text  x="112.34" y="367.5" ></text>
</g>
<g >
<title>runtime.return0 (1 samples, 0.05%)</title><rect x="178.7" y="277" width="0.5" height="15.0" fill="rgb(244,48,23)" rx="2" ry="2" />
<text  x="181.65" y="287.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (5 samples, 0.24%)</title><rect x="164.2" y="85" width="2.9" height="15.0" fill="rgb(217,82,13)" rx="2" ry="2" />
<text  x="167.21" y="95.5" ></text>
</g>
<g >
<title>runtime.schedule (195 samples, 9.54%)</title><rect x="651.1" y="533" width="112.6" height="15.0" fill="rgb(211,68,14)" rx="2" ry="2" />
<text  x="654.12" y="543.5" >runtime.sched..</text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (441 samples, 21.59%)</title><rect x="101.3" y="517" width="254.7" height="15.0" fill="rgb(249,177,37)" rx="2" ry="2" />
<text  x="104.26" y="527.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="179.2" y="293" width="0.6" height="15.0" fill="rgb(253,172,20)" rx="2" ry="2" />
<text  x="182.23" y="303.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.05%)</title><rect x="411.4" y="485" width="0.6" height="15.0" fill="rgb(218,140,6)" rx="2" ry="2" />
<text  x="414.42" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="156.1" y="197" width="0.6" height="15.0" fill="rgb(210,179,47)" rx="2" ry="2" />
<text  x="159.13" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (14 samples, 0.69%)</title><rect x="723.9" y="469" width="8.1" height="15.0" fill="rgb(251,62,51)" rx="2" ry="2" />
<text  x="726.89" y="479.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (1 samples, 0.05%)</title><rect x="177.5" y="245" width="0.6" height="15.0" fill="rgb(218,18,2)" rx="2" ry="2" />
<text  x="180.50" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="142.8" y="325" width="0.6" height="15.0" fill="rgb(214,135,28)" rx="2" ry="2" />
<text  x="145.84" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.05%)</title><rect x="351.4" y="373" width="0.5" height="15.0" fill="rgb(223,41,38)" rx="2" ry="2" />
<text  x="354.35" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.05%)</title><rect x="145.2" y="69" width="0.5" height="15.0" fill="rgb(242,130,4)" rx="2" ry="2" />
<text  x="148.15" y="79.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (4 samples, 0.20%)</title><rect x="72.4" y="469" width="2.3" height="15.0" fill="rgb(237,31,44)" rx="2" ry="2" />
<text  x="75.38" y="479.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (8 samples, 0.39%)</title><rect x="72.4" y="501" width="4.6" height="15.0" fill="rgb(213,166,13)" rx="2" ry="2" />
<text  x="75.38" y="511.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="153.2" y="197" width="0.6" height="15.0" fill="rgb(227,76,15)" rx="2" ry="2" />
<text  x="156.24" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="64.9" y="501" width="0.5" height="15.0" fill="rgb(223,213,13)" rx="2" ry="2" />
<text  x="67.87" y="511.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetsockoptInt (1 samples, 0.05%)</title><rect x="403.3" y="405" width="0.6" height="15.0" fill="rgb(215,146,39)" rx="2" ry="2" />
<text  x="406.33" y="415.5" ></text>
</g>
<g >
<title>net/http.parseRequestLine (1 samples, 0.05%)</title><rect x="16.4" y="517" width="0.5" height="15.0" fill="rgb(223,204,15)" rx="2" ry="2" />
<text  x="19.35" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="202.3" y="181" width="0.6" height="15.0" fill="rgb(209,130,10)" rx="2" ry="2" />
<text  x="205.33" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.10%)</title><rect x="374.5" y="405" width="1.1" height="15.0" fill="rgb(220,68,11)" rx="2" ry="2" />
<text  x="377.45" y="415.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (3 samples, 0.15%)</title><rect x="135.3" y="357" width="1.8" height="15.0" fill="rgb(243,222,11)" rx="2" ry="2" />
<text  x="138.34" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="64.3" y="485" width="0.6" height="15.0" fill="rgb(228,200,15)" rx="2" ry="2" />
<text  x="67.29" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="208.7" y="325" width="0.6" height="15.0" fill="rgb(215,178,3)" rx="2" ry="2" />
<text  x="211.69" y="335.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="63.7" y="485" width="0.6" height="15.0" fill="rgb(224,145,16)" rx="2" ry="2" />
<text  x="66.72" y="495.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.05%)</title><rect x="300.5" y="133" width="0.6" height="15.0" fill="rgb(252,141,42)" rx="2" ry="2" />
<text  x="303.52" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="154.4" y="181" width="0.6" height="15.0" fill="rgb(205,48,49)" rx="2" ry="2" />
<text  x="157.40" y="191.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.05%)</title><rect x="204.1" y="213" width="0.5" height="15.0" fill="rgb(232,210,10)" rx="2" ry="2" />
<text  x="207.07" y="223.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (9 samples, 0.44%)</title><rect x="200.0" y="341" width="5.2" height="15.0" fill="rgb(227,133,11)" rx="2" ry="2" />
<text  x="203.02" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.15%)</title><rect x="350.2" y="405" width="1.7" height="15.0" fill="rgb(220,88,46)" rx="2" ry="2" />
<text  x="353.20" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.05%)</title><rect x="351.4" y="341" width="0.5" height="15.0" fill="rgb(225,4,18)" rx="2" ry="2" />
<text  x="354.35" y="351.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.05%)</title><rect x="412.0" y="485" width="0.6" height="15.0" fill="rgb(220,204,52)" rx="2" ry="2" />
<text  x="415.00" y="495.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (1 samples, 0.05%)</title><rect x="157.9" y="197" width="0.5" height="15.0" fill="rgb(208,35,12)" rx="2" ry="2" />
<text  x="160.86" y="207.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (3 samples, 0.15%)</title><rect x="63.1" y="517" width="1.8" height="15.0" fill="rgb(234,24,12)" rx="2" ry="2" />
<text  x="66.14" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="157.3" y="181" width="0.6" height="15.0" fill="rgb(252,145,34)" rx="2" ry="2" />
<text  x="160.28" y="191.5" ></text>
</g>
<g >
<title>net/http.fixLength (1 samples, 0.05%)</title><rect x="16.9" y="501" width="0.6" height="15.0" fill="rgb(207,43,7)" rx="2" ry="2" />
<text  x="19.93" y="511.5" ></text>
</g>
<g >
<title>strings.HasSuffix (1 samples, 0.05%)</title><rect x="299.4" y="325" width="0.5" height="15.0" fill="rgb(246,168,52)" rx="2" ry="2" />
<text  x="302.37" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func4 (13 samples, 0.64%)</title><rect x="123.8" y="341" width="7.5" height="15.0" fill="rgb(205,24,5)" rx="2" ry="2" />
<text  x="126.78" y="351.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.05%)</title><rect x="267.0" y="309" width="0.6" height="15.0" fill="rgb(208,57,27)" rx="2" ry="2" />
<text  x="270.02" y="319.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.05%)</title><rect x="134.8" y="293" width="0.5" height="15.0" fill="rgb(236,125,53)" rx="2" ry="2" />
<text  x="137.76" y="303.5" ></text>
</g>
<g >
<title>runtime.stopm (14 samples, 0.69%)</title><rect x="437.4" y="501" width="8.1" height="15.0" fill="rgb(247,186,16)" rx="2" ry="2" />
<text  x="440.41" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.RegisterName (2 samples, 0.10%)</title><rect x="141.1" y="437" width="1.2" height="15.0" fill="rgb(224,51,42)" rx="2" ry="2" />
<text  x="144.11" y="447.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (7 samples, 0.34%)</title><rect x="371.6" y="453" width="4.0" height="15.0" fill="rgb(217,123,22)" rx="2" ry="2" />
<text  x="374.57" y="463.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.05%)</title><rect x="339.8" y="325" width="0.6" height="15.0" fill="rgb(220,174,22)" rx="2" ry="2" />
<text  x="342.80" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).recvMessage (2 samples, 0.10%)</title><rect x="142.8" y="405" width="1.2" height="15.0" fill="rgb(209,197,14)" rx="2" ry="2" />
<text  x="145.84" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="261.2" y="405" width="0.6" height="15.0" fill="rgb(218,63,43)" rx="2" ry="2" />
<text  x="264.25" y="415.5" ></text>
</g>
<g >
<title>runtime.pollWork (4 samples, 0.20%)</title><rect x="1180.8" y="501" width="2.3" height="15.0" fill="rgb(208,220,30)" rx="2" ry="2" />
<text  x="1183.76" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="208.7" y="309" width="0.6" height="15.0" fill="rgb(228,107,47)" rx="2" ry="2" />
<text  x="211.69" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (61 samples, 2.99%)</title><rect x="411.4" y="517" width="35.3" height="15.0" fill="rgb(253,107,31)" rx="2" ry="2" />
<text  x="414.42" y="527.5" >ru..</text>
</g>
<g >
<title>runtime.handoffp (616 samples, 30.15%)</title><rect x="786.3" y="517" width="355.8" height="15.0" fill="rgb(209,211,25)" rx="2" ry="2" />
<text  x="789.27" y="527.5" >runtime.handoffp</text>
</g>
<g >
<title>runtime.lock (10 samples, 0.49%)</title><rect x="404.5" y="533" width="5.8" height="15.0" fill="rgb(240,199,49)" rx="2" ry="2" />
<text  x="407.49" y="543.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.10%)</title><rect x="286.7" y="357" width="1.1" height="15.0" fill="rgb(219,125,21)" rx="2" ry="2" />
<text  x="289.66" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (1 samples, 0.05%)</title><rect x="70.1" y="533" width="0.5" height="15.0" fill="rgb(253,48,24)" rx="2" ry="2" />
<text  x="73.07" y="543.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.05%)</title><rect x="293.0" y="357" width="0.6" height="15.0" fill="rgb(238,58,39)" rx="2" ry="2" />
<text  x="296.02" y="367.5" ></text>
</g>
<g >
<title>runtime.usleep (24 samples, 1.17%)</title><rect x="1166.3" y="341" width="13.9" height="15.0" fill="rgb(235,110,13)" rx="2" ry="2" />
<text  x="1169.32" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="646.5" y="533" width="0.6" height="15.0" fill="rgb(242,115,15)" rx="2" ry="2" />
<text  x="649.50" y="543.5" ></text>
</g>
<g >
<title>syscall.setsockopt (1 samples, 0.05%)</title><rect x="403.3" y="373" width="0.6" height="15.0" fill="rgb(247,200,9)" rx="2" ry="2" />
<text  x="406.33" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.05%)</title><rect x="260.1" y="325" width="0.6" height="15.0" fill="rgb(244,66,43)" rx="2" ry="2" />
<text  x="263.09" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="126.7" y="181" width="0.5" height="15.0" fill="rgb(246,16,21)" rx="2" ry="2" />
<text  x="129.67" y="191.5" ></text>
</g>
<g >
<title>syscall.write (34 samples, 1.66%)</title><rect x="268.2" y="389" width="19.6" height="15.0" fill="rgb(245,49,31)" rx="2" ry="2" />
<text  x="271.18" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="207.0" y="277" width="0.5" height="15.0" fill="rgb(250,87,1)" rx="2" ry="2" />
<text  x="209.96" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.24%)</title><rect x="412.6" y="469" width="2.9" height="15.0" fill="rgb(213,48,38)" rx="2" ry="2" />
<text  x="415.57" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (613 samples, 30.00%)</title><rect x="788.0" y="501" width="354.1" height="15.0" fill="rgb(246,228,30)" rx="2" ry="2" />
<text  x="791.00" y="511.5" >runtime.startm</text>
</g>
<g >
<title>encoding/gob.(*encoderState).update (1 samples, 0.05%)</title><rect x="127.2" y="229" width="0.6" height="15.0" fill="rgb(252,142,13)" rx="2" ry="2" />
<text  x="130.25" y="239.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (1 samples, 0.05%)</title><rect x="153.8" y="229" width="0.6" height="15.0" fill="rgb(230,192,15)" rx="2" ry="2" />
<text  x="156.82" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (3 samples, 0.15%)</title><rect x="297.6" y="309" width="1.8" height="15.0" fill="rgb(236,33,44)" rx="2" ry="2" />
<text  x="300.64" y="319.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="70.6" y="453" width="0.6" height="15.0" fill="rgb(214,188,33)" rx="2" ry="2" />
<text  x="73.65" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="147.5" y="293" width="0.5" height="15.0" fill="rgb(223,99,11)" rx="2" ry="2" />
<text  x="150.46" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="145.2" y="165" width="0.5" height="15.0" fill="rgb(235,8,30)" rx="2" ry="2" />
<text  x="148.15" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (2 samples, 0.10%)</title><rect x="1183.1" y="533" width="1.1" height="15.0" fill="rgb(231,5,26)" rx="2" ry="2" />
<text  x="1186.07" y="543.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.05%)</title><rect x="370.4" y="437" width="0.6" height="15.0" fill="rgb(240,161,8)" rx="2" ry="2" />
<text  x="373.41" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="343.3" y="421" width="0.5" height="15.0" fill="rgb(240,198,25)" rx="2" ry="2" />
<text  x="346.26" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.05%)</title><rect x="300.5" y="101" width="0.6" height="15.0" fill="rgb(235,41,45)" rx="2" ry="2" />
<text  x="303.52" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.05%)</title><rect x="202.3" y="165" width="0.6" height="15.0" fill="rgb(237,152,11)" rx="2" ry="2" />
<text  x="205.33" y="175.5" ></text>
</g>
<g >
<title>internal/poll.accept (3 samples, 0.15%)</title><rect x="401.6" y="405" width="1.7" height="15.0" fill="rgb(241,206,20)" rx="2" ry="2" />
<text  x="404.60" y="415.5" ></text>
</g>
<g >
<title>runtime.kevent (28 samples, 1.37%)</title><rect x="416.0" y="485" width="16.2" height="15.0" fill="rgb(210,223,54)" rx="2" ry="2" />
<text  x="419.04" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="289.0" y="373" width="0.5" height="15.0" fill="rgb(231,150,12)" rx="2" ry="2" />
<text  x="291.97" y="383.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.05%)</title><rect x="292.4" y="309" width="0.6" height="15.0" fill="rgb(207,19,4)" rx="2" ry="2" />
<text  x="295.44" y="319.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (25 samples, 1.22%)</title><rect x="763.7" y="501" width="14.5" height="15.0" fill="rgb(254,7,32)" rx="2" ry="2" />
<text  x="766.74" y="511.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.05%)</title><rect x="349.6" y="421" width="0.6" height="15.0" fill="rgb(235,39,18)" rx="2" ry="2" />
<text  x="352.62" y="431.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (2 samples, 0.10%)</title><rect x="293.6" y="341" width="1.1" height="15.0" fill="rgb(226,92,48)" rx="2" ry="2" />
<text  x="296.59" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (8 samples, 0.39%)</title><rect x="653.4" y="501" width="4.6" height="15.0" fill="rgb(206,112,51)" rx="2" ry="2" />
<text  x="656.43" y="511.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.05%)</title><rect x="261.2" y="341" width="0.6" height="15.0" fill="rgb(246,218,11)" rx="2" ry="2" />
<text  x="264.25" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="177.5" y="213" width="0.6" height="15.0" fill="rgb(226,104,50)" rx="2" ry="2" />
<text  x="180.50" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.10%)</title><rect x="293.6" y="293" width="1.1" height="15.0" fill="rgb(228,120,8)" rx="2" ry="2" />
<text  x="296.59" y="303.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.10%)</title><rect x="394.1" y="357" width="1.1" height="15.0" fill="rgb(242,107,19)" rx="2" ry="2" />
<text  x="397.09" y="367.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (443 samples, 21.68%)</title><rect x="100.1" y="533" width="255.9" height="15.0" fill="rgb(236,188,28)" rx="2" ry="2" />
<text  x="103.10" y="543.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>encoding/gob.(*Decoder).readMessage (2 samples, 0.10%)</title><rect x="142.8" y="389" width="1.2" height="15.0" fill="rgb(241,122,31)" rx="2" ry="2" />
<text  x="145.84" y="399.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.05%)</title><rect x="70.6" y="469" width="0.6" height="15.0" fill="rgb(231,213,35)" rx="2" ry="2" />
<text  x="73.65" y="479.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.05%)</title><rect x="67.2" y="533" width="0.6" height="15.0" fill="rgb(209,209,47)" rx="2" ry="2" />
<text  x="70.18" y="543.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="114.5" y="245" width="0.6" height="15.0" fill="rgb(242,20,8)" rx="2" ry="2" />
<text  x="117.54" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (7 samples, 0.34%)</title><rect x="781.1" y="501" width="4.0" height="15.0" fill="rgb(224,202,18)" rx="2" ry="2" />
<text  x="784.07" y="511.5" ></text>
</g>
<g >
<title>net.(*conn).Read (77 samples, 3.77%)</title><rect x="18.1" y="421" width="44.5" height="15.0" fill="rgb(212,61,6)" rx="2" ry="2" />
<text  x="21.09" y="431.5" >net...</text>
</g>
<g >
<title>runtime.newproc1 (2 samples, 0.10%)</title><rect x="1188.3" y="517" width="1.1" height="15.0" fill="rgb(253,50,46)" rx="2" ry="2" />
<text  x="1191.27" y="527.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (35 samples, 1.71%)</title><rect x="77.0" y="485" width="20.2" height="15.0" fill="rgb(208,216,13)" rx="2" ry="2" />
<text  x="80.00" y="495.5" ></text>
</g>
<g >
<title>runtime.gcDrain (33 samples, 1.62%)</title><rect x="382.5" y="517" width="19.1" height="15.0" fill="rgb(212,95,25)" rx="2" ry="2" />
<text  x="385.54" y="527.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (3 samples, 0.15%)</title><rect x="133.6" y="325" width="1.7" height="15.0" fill="rgb(249,58,48)" rx="2" ry="2" />
<text  x="136.60" y="335.5" ></text>
</g>
<g >
<title>runtime.lock (7 samples, 0.34%)</title><rect x="335.2" y="325" width="4.0" height="15.0" fill="rgb(248,109,45)" rx="2" ry="2" />
<text  x="338.18" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.10%)</title><rect x="211.0" y="325" width="1.2" height="15.0" fill="rgb(225,133,40)" rx="2" ry="2" />
<text  x="214.00" y="335.5" ></text>
</g>
<g >
<title>runtime.kevent (4 samples, 0.20%)</title><rect x="1180.8" y="469" width="2.3" height="15.0" fill="rgb(246,183,26)" rx="2" ry="2" />
<text  x="1183.76" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="176.9" y="245" width="0.6" height="15.0" fill="rgb(242,121,12)" rx="2" ry="2" />
<text  x="179.92" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="153.2" y="181" width="0.6" height="15.0" fill="rgb(221,129,22)" rx="2" ry="2" />
<text  x="156.24" y="191.5" ></text>
</g>
<g >
<title>runtime.pcvalue (3 samples, 0.15%)</title><rect x="167.7" y="101" width="1.7" height="15.0" fill="rgb(245,28,53)" rx="2" ry="2" />
<text  x="170.68" y="111.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.24%)</title><rect x="412.6" y="501" width="2.9" height="15.0" fill="rgb(234,152,42)" rx="2" ry="2" />
<text  x="415.57" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.encInt (1 samples, 0.05%)</title><rect x="128.4" y="277" width="0.6" height="15.0" fill="rgb(250,146,24)" rx="2" ry="2" />
<text  x="131.40" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="201.2" y="277" width="0.6" height="15.0" fill="rgb(239,179,36)" rx="2" ry="2" />
<text  x="204.18" y="287.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (53 samples, 2.59%)</title><rect x="150.4" y="309" width="30.6" height="15.0" fill="rgb(223,15,2)" rx="2" ry="2" />
<text  x="153.35" y="319.5" >en..</text>
</g>
<g >
<title>reflect.Value.Set (1 samples, 0.05%)</title><rect x="148.6" y="341" width="0.6" height="15.0" fill="rgb(240,40,13)" rx="2" ry="2" />
<text  x="151.62" y="351.5" ></text>
</g>
<g >
<title>runtime.tooManyOverflowBuckets (1 samples, 0.05%)</title><rect x="138.2" y="357" width="0.6" height="15.0" fill="rgb(220,191,44)" rx="2" ry="2" />
<text  x="141.22" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).Read (82 samples, 4.01%)</title><rect x="213.3" y="421" width="47.4" height="15.0" fill="rgb(210,58,21)" rx="2" ry="2" />
<text  x="216.31" y="431.5" >net...</text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.10%)</title><rect x="189.1" y="293" width="1.1" height="15.0" fill="rgb(221,29,32)" rx="2" ry="2" />
<text  x="192.05" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (76 samples, 3.72%)</title><rect x="149.2" y="357" width="43.9" height="15.0" fill="rgb(207,30,27)" rx="2" ry="2" />
<text  x="152.20" y="367.5" >enco..</text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).log (90 samples, 4.41%)</title><rect x="290.7" y="405" width="52.0" height="15.0" fill="rgb(206,197,48)" rx="2" ry="2" />
<text  x="293.70" y="415.5" >githu..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.05%)</title><rect x="207.0" y="213" width="0.5" height="15.0" fill="rgb(241,62,43)" rx="2" ry="2" />
<text  x="209.96" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (52 samples, 2.55%)</title><rect x="732.0" y="485" width="30.0" height="15.0" fill="rgb(239,211,29)" rx="2" ry="2" />
<text  x="734.98" y="495.5" >ru..</text>
</g>
<g >
<title>encoding/gob.decAlloc (2 samples, 0.10%)</title><rect x="196.6" y="213" width="1.1" height="15.0" fill="rgb(234,37,36)" rx="2" ry="2" />
<text  x="199.56" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.10%)</title><rect x="394.1" y="373" width="1.1" height="15.0" fill="rgb(225,101,23)" rx="2" ry="2" />
<text  x="397.09" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.05%)</title><rect x="126.7" y="197" width="0.5" height="15.0" fill="rgb(213,145,43)" rx="2" ry="2" />
<text  x="129.67" y="207.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (6 samples, 0.29%)</title><rect x="205.8" y="405" width="3.5" height="15.0" fill="rgb(240,131,24)" rx="2" ry="2" />
<text  x="208.80" y="415.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.05%)</title><rect x="124.4" y="245" width="0.5" height="15.0" fill="rgb(213,75,23)" rx="2" ry="2" />
<text  x="127.36" y="255.5" ></text>
</g>
<g >
<title>reflect.(*rtype).FieldByName (23 samples, 1.13%)</title><rect x="158.4" y="245" width="13.3" height="15.0" fill="rgb(243,82,29)" rx="2" ry="2" />
<text  x="161.44" y="255.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).Logln (90 samples, 4.41%)</title><rect x="290.7" y="437" width="52.0" height="15.0" fill="rgb(232,57,28)" rx="2" ry="2" />
<text  x="293.70" y="447.5" >githu..</text>
</g>
<g >
<title>runtime.lock (3 samples, 0.15%)</title><rect x="774.7" y="453" width="1.8" height="15.0" fill="rgb(215,132,13)" rx="2" ry="2" />
<text  x="777.72" y="463.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (1 samples, 0.05%)</title><rect x="208.7" y="357" width="0.6" height="15.0" fill="rgb(242,0,50)" rx="2" ry="2" />
<text  x="211.69" y="367.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (3 samples, 0.15%)</title><rect x="160.2" y="117" width="1.7" height="15.0" fill="rgb(239,193,49)" rx="2" ry="2" />
<text  x="163.17" y="127.5" ></text>
</g>
<g >
<title>net/http.writeStatusLine (4 samples, 0.20%)</title><rect x="74.7" y="485" width="2.3" height="15.0" fill="rgb(215,111,51)" rx="2" ry="2" />
<text  x="77.69" y="495.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="339.8" y="373" width="0.6" height="15.0" fill="rgb(231,42,54)" rx="2" ry="2" />
<text  x="342.80" y="383.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.05%)</title><rect x="382.0" y="501" width="0.5" height="15.0" fill="rgb(220,26,43)" rx="2" ry="2" />
<text  x="384.96" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="109.3" y="133" width="0.6" height="15.0" fill="rgb(224,103,3)" rx="2" ry="2" />
<text  x="112.34" y="143.5" ></text>
</g>
<g >
<title>encoding/gob.Register (1 samples, 0.05%)</title><rect x="210.4" y="453" width="0.6" height="15.0" fill="rgb(242,153,20)" rx="2" ry="2" />
<text  x="213.42" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="207.0" y="293" width="0.5" height="15.0" fill="rgb(225,160,1)" rx="2" ry="2" />
<text  x="209.96" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="180.4" y="277" width="0.6" height="15.0" fill="rgb(233,42,45)" rx="2" ry="2" />
<text  x="183.39" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="261.2" y="421" width="0.6" height="15.0" fill="rgb(229,180,30)" rx="2" ry="2" />
<text  x="264.25" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="155.6" y="181" width="0.5" height="15.0" fill="rgb(248,69,23)" rx="2" ry="2" />
<text  x="158.55" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).write (14 samples, 0.69%)</title><rect x="346.2" y="469" width="8.0" height="15.0" fill="rgb(212,68,30)" rx="2" ry="2" />
<text  x="349.15" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.userType (3 samples, 0.15%)</title><rect x="133.6" y="357" width="1.7" height="15.0" fill="rgb(207,27,40)" rx="2" ry="2" />
<text  x="136.60" y="367.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.10%)</title><rect x="293.6" y="245" width="1.1" height="15.0" fill="rgb(243,80,50)" rx="2" ry="2" />
<text  x="296.59" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="300.5" y="357" width="0.6" height="15.0" fill="rgb(254,203,8)" rx="2" ry="2" />
<text  x="303.52" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).recvMessage (1 samples, 0.05%)</title><rect x="194.2" y="341" width="0.6" height="15.0" fill="rgb(242,41,45)" rx="2" ry="2" />
<text  x="197.25" y="351.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="64.9" y="517" width="0.5" height="15.0" fill="rgb(232,128,27)" rx="2" ry="2" />
<text  x="67.87" y="527.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Logger).newEntry (1 samples, 0.05%)</title><rect x="342.7" y="437" width="0.6" height="15.0" fill="rgb(226,9,37)" rx="2" ry="2" />
<text  x="345.69" y="447.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.05%)</title><rect x="192.5" y="341" width="0.6" height="15.0" fill="rgb(235,88,46)" rx="2" ry="2" />
<text  x="195.52" y="351.5" ></text>
</g>
<g >
<title>EntryTask/rpc/network.Send (35 samples, 1.71%)</title><rect x="267.6" y="469" width="20.2" height="15.0" fill="rgb(232,165,47)" rx="2" ry="2" />
<text  x="270.60" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="298.8" y="229" width="0.6" height="15.0" fill="rgb(246,20,36)" rx="2" ry="2" />
<text  x="301.79" y="239.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.10%)</title><rect x="394.1" y="389" width="1.1" height="15.0" fill="rgb(244,185,25)" rx="2" ry="2" />
<text  x="397.09" y="399.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="150.9" y="261" width="0.6" height="15.0" fill="rgb(254,6,48)" rx="2" ry="2" />
<text  x="153.93" y="271.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.10%)</title><rect x="293.6" y="229" width="1.1" height="15.0" fill="rgb(249,10,54)" rx="2" ry="2" />
<text  x="296.59" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (1 samples, 0.05%)</title><rect x="297.6" y="293" width="0.6" height="15.0" fill="rgb(246,171,14)" rx="2" ry="2" />
<text  x="300.64" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="141.1" y="405" width="0.6" height="15.0" fill="rgb(242,150,23)" rx="2" ry="2" />
<text  x="144.11" y="415.5" ></text>
</g>
<g >
<title>EntryTask/rpc/client.RpcClient.releaseConn (6 samples, 0.29%)</title><rect x="103.6" y="469" width="3.4" height="15.0" fill="rgb(226,183,15)" rx="2" ry="2" />
<text  x="106.57" y="479.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollReset (1 samples, 0.05%)</title><rect x="267.6" y="373" width="0.6" height="15.0" fill="rgb(217,43,9)" rx="2" ry="2" />
<text  x="270.60" y="383.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.15%)</title><rect x="786.3" y="485" width="1.7" height="15.0" fill="rgb(220,147,16)" rx="2" ry="2" />
<text  x="789.27" y="495.5" ></text>
</g>
<g >
<title>runtime.stackfree (15 samples, 0.73%)</title><rect x="1148.4" y="389" width="8.7" height="15.0" fill="rgb(211,92,28)" rx="2" ry="2" />
<text  x="1151.41" y="399.5" ></text>
</g>
<g >
<title>runtime.convI2I (1 samples, 0.05%)</title><rect x="260.7" y="453" width="0.5" height="15.0" fill="rgb(213,95,16)" rx="2" ry="2" />
<text  x="263.67" y="463.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.05%)</title><rect x="200.6" y="213" width="0.6" height="15.0" fill="rgb(234,87,51)" rx="2" ry="2" />
<text  x="203.60" y="223.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (5 samples, 0.24%)</title><rect x="401.6" y="517" width="2.9" height="15.0" fill="rgb(249,112,34)" rx="2" ry="2" />
<text  x="404.60" y="527.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.10%)</title><rect x="386.0" y="405" width="1.2" height="15.0" fill="rgb(232,76,45)" rx="2" ry="2" />
<text  x="389.01" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="189.1" y="277" width="1.1" height="15.0" fill="rgb(216,61,43)" rx="2" ry="2" />
<text  x="192.05" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="157.9" y="117" width="0.5" height="15.0" fill="rgb(245,213,0)" rx="2" ry="2" />
<text  x="160.86" y="127.5" ></text>
</g>
<g >
<title>math/bits.LeadingZeros64 (1 samples, 0.05%)</title><rect x="119.7" y="277" width="0.6" height="15.0" fill="rgb(221,27,46)" rx="2" ry="2" />
<text  x="122.74" y="287.5" ></text>
</g>
<g >
<title>runtime.copystack (16 samples, 0.78%)</title><rect x="390.6" y="421" width="9.3" height="15.0" fill="rgb(234,48,54)" rx="2" ry="2" />
<text  x="393.63" y="431.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="167.1" y="117" width="0.6" height="15.0" fill="rgb(245,55,44)" rx="2" ry="2" />
<text  x="170.10" y="127.5" ></text>
</g>
<g >
<title>runtime.adjustdefers (3 samples, 0.15%)</title><rect x="160.2" y="133" width="1.7" height="15.0" fill="rgb(252,60,17)" rx="2" ry="2" />
<text  x="163.17" y="143.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Del (1 samples, 0.05%)</title><rect x="16.9" y="469" width="0.6" height="15.0" fill="rgb(213,198,6)" rx="2" ry="2" />
<text  x="19.93" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.49%)</title><rect x="261.8" y="405" width="5.8" height="15.0" fill="rgb(222,130,18)" rx="2" ry="2" />
<text  x="264.83" y="415.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="122.6" y="293" width="0.6" height="15.0" fill="rgb(240,189,46)" rx="2" ry="2" />
<text  x="125.63" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (4 samples, 0.20%)</title><rect x="778.2" y="485" width="2.3" height="15.0" fill="rgb(222,142,38)" rx="2" ry="2" />
<text  x="781.18" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (3 samples, 0.15%)</title><rect x="182.7" y="309" width="1.7" height="15.0" fill="rgb(207,50,53)" rx="2" ry="2" />
<text  x="185.70" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="261.2" y="373" width="0.6" height="15.0" fill="rgb(226,41,12)" rx="2" ry="2" />
<text  x="264.25" y="383.5" ></text>
</g>
<g >
<title>runtime.getStackMap (6 samples, 0.29%)</title><rect x="163.6" y="101" width="3.5" height="15.0" fill="rgb(253,141,8)" rx="2" ry="2" />
<text  x="166.64" y="111.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.05%)</title><rect x="300.5" y="165" width="0.6" height="15.0" fill="rgb(206,197,47)" rx="2" ry="2" />
<text  x="303.52" y="175.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (7 samples, 0.34%)</title><rect x="194.8" y="277" width="4.1" height="15.0" fill="rgb(225,62,48)" rx="2" ry="2" />
<text  x="197.83" y="287.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).DecodeValue (115 samples, 5.63%)</title><rect x="142.8" y="437" width="66.5" height="15.0" fill="rgb(210,70,23)" rx="2" ry="2" />
<text  x="145.84" y="447.5" >encodin..</text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*TextFormatter).isColored (1 samples, 0.05%)</title><rect x="295.9" y="357" width="0.6" height="15.0" fill="rgb(229,85,52)" rx="2" ry="2" />
<text  x="298.90" y="367.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.05%)</title><rect x="260.7" y="437" width="0.5" height="15.0" fill="rgb(213,137,43)" rx="2" ry="2" />
<text  x="263.67" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="289.0" y="453" width="0.5" height="15.0" fill="rgb(242,221,26)" rx="2" ry="2" />
<text  x="291.97" y="463.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (3 samples, 0.15%)</title><rect x="774.7" y="485" width="1.8" height="15.0" fill="rgb(211,135,0)" rx="2" ry="2" />
<text  x="777.72" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="141.1" y="389" width="0.6" height="15.0" fill="rgb(222,224,31)" rx="2" ry="2" />
<text  x="144.11" y="399.5" ></text>
</g>
<g >
<title>runtime.osyield (7 samples, 0.34%)</title><rect x="654.0" y="485" width="4.0" height="15.0" fill="rgb(206,139,50)" rx="2" ry="2" />
<text  x="657.00" y="495.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.05%)</title><rect x="211.6" y="261" width="0.6" height="15.0" fill="rgb(251,26,25)" rx="2" ry="2" />
<text  x="214.58" y="271.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="134.8" y="277" width="0.5" height="15.0" fill="rgb(227,130,46)" rx="2" ry="2" />
<text  x="137.76" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.10%)</title><rect x="1184.2" y="501" width="1.2" height="15.0" fill="rgb(211,42,47)" rx="2" ry="2" />
<text  x="1187.22" y="511.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.10%)</title><rect x="112.8" y="181" width="1.2" height="15.0" fill="rgb(239,157,22)" rx="2" ry="2" />
<text  x="115.81" y="191.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Lock (1 samples, 0.05%)</title><rect x="291.9" y="373" width="0.5" height="15.0" fill="rgb(229,61,53)" rx="2" ry="2" />
<text  x="294.86" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="645.9" y="485" width="0.6" height="15.0" fill="rgb(239,45,6)" rx="2" ry="2" />
<text  x="648.92" y="495.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (3 samples, 0.15%)</title><rect x="97.8" y="469" width="1.7" height="15.0" fill="rgb(239,14,49)" rx="2" ry="2" />
<text  x="100.79" y="479.5" ></text>
</g>
<g >
<title>strings.Index (1 samples, 0.05%)</title><rect x="16.4" y="501" width="0.5" height="15.0" fill="rgb(251,85,26)" rx="2" ry="2" />
<text  x="19.35" y="511.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (35 samples, 1.71%)</title><rect x="267.6" y="437" width="20.2" height="15.0" fill="rgb(233,168,27)" rx="2" ry="2" />
<text  x="270.60" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="103.0" y="405" width="0.6" height="15.0" fill="rgb(218,206,42)" rx="2" ry="2" />
<text  x="105.99" y="415.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (52 samples, 2.55%)</title><rect x="732.0" y="453" width="30.0" height="15.0" fill="rgb(234,180,24)" rx="2" ry="2" />
<text  x="734.98" y="463.5" >ru..</text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendActualType (23 samples, 1.13%)</title><rect x="109.3" y="325" width="13.3" height="15.0" fill="rgb(252,108,46)" rx="2" ry="2" />
<text  x="112.34" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (7 samples, 0.34%)</title><rect x="200.6" y="325" width="4.0" height="15.0" fill="rgb(231,208,44)" rx="2" ry="2" />
<text  x="203.60" y="335.5" ></text>
</g>
<g >
<title>reflect.New (2 samples, 0.10%)</title><rect x="196.6" y="197" width="1.1" height="15.0" fill="rgb(213,1,3)" rx="2" ry="2" />
<text  x="199.56" y="207.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.05%)</title><rect x="196.6" y="53" width="0.5" height="15.0" fill="rgb(243,174,16)" rx="2" ry="2" />
<text  x="199.56" y="63.5" ></text>
</g>
<g >
<title>runtime.rawstring (1 samples, 0.05%)</title><rect x="177.5" y="229" width="0.6" height="15.0" fill="rgb(232,81,14)" rx="2" ry="2" />
<text  x="180.50" y="239.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (5 samples, 0.24%)</title><rect x="97.2" y="533" width="2.9" height="15.0" fill="rgb(235,189,21)" rx="2" ry="2" />
<text  x="100.21" y="543.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (33 samples, 1.62%)</title><rect x="357.1" y="565" width="19.1" height="15.0" fill="rgb(246,142,36)" rx="2" ry="2" />
<text  x="360.13" y="575.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="646.5" y="501" width="0.6" height="15.0" fill="rgb(206,217,40)" rx="2" ry="2" />
<text  x="649.50" y="511.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.05%)</title><rect x="339.8" y="181" width="0.6" height="15.0" fill="rgb(241,122,43)" rx="2" ry="2" />
<text  x="342.80" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.05%)</title><rect x="371.6" y="405" width="0.5" height="15.0" fill="rgb(219,22,4)" rx="2" ry="2" />
<text  x="374.57" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="176.3" y="261" width="0.6" height="15.0" fill="rgb(250,61,10)" rx="2" ry="2" />
<text  x="179.34" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeArray (3 samples, 0.15%)</title><rect x="126.1" y="293" width="1.7" height="15.0" fill="rgb(248,63,6)" rx="2" ry="2" />
<text  x="129.09" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).FieldByName (1 samples, 0.05%)</title><rect x="178.1" y="293" width="0.6" height="15.0" fill="rgb(218,75,54)" rx="2" ry="2" />
<text  x="181.08" y="303.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.05%)</title><rect x="15.8" y="389" width="0.6" height="15.0" fill="rgb(223,229,23)" rx="2" ry="2" />
<text  x="18.78" y="399.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compatibleType (2 samples, 0.10%)</title><rect x="155.6" y="245" width="1.1" height="15.0" fill="rgb(224,195,19)" rx="2" ry="2" />
<text  x="158.55" y="255.5" ></text>
</g>
<g >
<title>runtime.gentraceback (12 samples, 0.59%)</title><rect x="162.5" y="133" width="6.9" height="15.0" fill="rgb(251,222,44)" rx="2" ry="2" />
<text  x="165.48" y="143.5" ></text>
</g>
<g >
<title>net.(*TCPListener).accept (4 samples, 0.20%)</title><rect x="401.6" y="453" width="2.3" height="15.0" fill="rgb(239,54,1)" rx="2" ry="2" />
<text  x="404.60" y="463.5" ></text>
</g>
<g >
<title>syscall.Read (21 samples, 1.03%)</title><rect x="358.9" y="501" width="12.1" height="15.0" fill="rgb(233,18,14)" rx="2" ry="2" />
<text  x="361.86" y="511.5" ></text>
</g>
<g >
<title>syscall.Write (34 samples, 1.66%)</title><rect x="268.2" y="405" width="19.6" height="15.0" fill="rgb(223,31,14)" rx="2" ry="2" />
<text  x="271.18" y="415.5" ></text>
</g>
<g >
<title>runtime.topofstack (1 samples, 0.05%)</title><rect x="390.0" y="421" width="0.6" height="15.0" fill="rgb(251,164,25)" rx="2" ry="2" />
<text  x="393.05" y="431.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).Decode (115 samples, 5.63%)</title><rect x="142.8" y="453" width="66.5" height="15.0" fill="rgb(206,143,45)" rx="2" ry="2" />
<text  x="145.84" y="463.5" >encodin..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="142.8" y="277" width="0.6" height="15.0" fill="rgb(245,91,42)" rx="2" ry="2" />
<text  x="145.84" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.05%)</title><rect x="133.0" y="357" width="0.6" height="15.0" fill="rgb(210,136,48)" rx="2" ry="2" />
<text  x="136.02" y="367.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (1 samples, 0.05%)</title><rect x="382.0" y="533" width="0.5" height="15.0" fill="rgb(238,198,22)" rx="2" ry="2" />
<text  x="384.96" y="543.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.05%)</title><rect x="387.7" y="389" width="0.6" height="15.0" fill="rgb(213,138,40)" rx="2" ry="2" />
<text  x="390.74" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="120.9" y="277" width="0.6" height="15.0" fill="rgb(244,59,22)" rx="2" ry="2" />
<text  x="123.90" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="140.5" y="373" width="0.6" height="15.0" fill="rgb(211,137,22)" rx="2" ry="2" />
<text  x="143.53" y="383.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.05%)</title><rect x="184.4" y="277" width="0.6" height="15.0" fill="rgb(226,60,45)" rx="2" ry="2" />
<text  x="187.43" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.10%)</title><rect x="211.0" y="421" width="1.2" height="15.0" fill="rgb(234,17,44)" rx="2" ry="2" />
<text  x="214.00" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="141.1" y="373" width="0.6" height="15.0" fill="rgb(217,97,25)" rx="2" ry="2" />
<text  x="144.11" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="343.8" y="421" width="0.6" height="15.0" fill="rgb(245,197,45)" rx="2" ry="2" />
<text  x="346.84" y="431.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.05%)</title><rect x="12.3" y="469" width="0.6" height="15.0" fill="rgb(238,202,11)" rx="2" ry="2" />
<text  x="15.31" y="479.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.05%)</title><rect x="446.7" y="437" width="0.5" height="15.0" fill="rgb(254,131,14)" rx="2" ry="2" />
<text  x="449.65" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="196.6" y="165" width="1.1" height="15.0" fill="rgb(223,73,53)" rx="2" ry="2" />
<text  x="199.56" y="175.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (1 samples, 0.05%)</title><rect x="339.8" y="357" width="0.6" height="15.0" fill="rgb(217,74,2)" rx="2" ry="2" />
<text  x="342.80" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.(*encBuffer).WriteString (2 samples, 0.10%)</title><rect x="109.3" y="165" width="1.2" height="15.0" fill="rgb(233,222,38)" rx="2" ry="2" />
<text  x="112.34" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.20%)</title><rect x="778.2" y="453" width="2.3" height="15.0" fill="rgb(226,179,24)" rx="2" ry="2" />
<text  x="781.18" y="463.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.15%)</title><rect x="776.5" y="469" width="1.7" height="15.0" fill="rgb(228,138,11)" rx="2" ry="2" />
<text  x="779.45" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.05%)</title><rect x="763.2" y="485" width="0.5" height="15.0" fill="rgb(246,89,52)" rx="2" ry="2" />
<text  x="766.17" y="495.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.05%)</title><rect x="212.7" y="453" width="0.6" height="15.0" fill="rgb(245,49,45)" rx="2" ry="2" />
<text  x="215.73" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.(*encBuffer).WriteString (1 samples, 0.05%)</title><rect x="129.0" y="261" width="0.6" height="15.0" fill="rgb(230,213,18)" rx="2" ry="2" />
<text  x="131.98" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="340.4" y="341" width="0.6" height="15.0" fill="rgb(213,118,4)" rx="2" ry="2" />
<text  x="343.38" y="351.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.05%)</title><rect x="295.3" y="357" width="0.6" height="15.0" fill="rgb(232,205,47)" rx="2" ry="2" />
<text  x="298.33" y="367.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.05%)</title><rect x="351.4" y="277" width="0.5" height="15.0" fill="rgb(208,142,0)" rx="2" ry="2" />
<text  x="354.35" y="287.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func1 (5 samples, 0.24%)</title><rect x="124.9" y="309" width="2.9" height="15.0" fill="rgb(229,97,20)" rx="2" ry="2" />
<text  x="127.94" y="319.5" ></text>
</g>
<g >
<title>runtime.newstack (22 samples, 1.08%)</title><rect x="159.0" y="165" width="12.7" height="15.0" fill="rgb(222,94,19)" rx="2" ry="2" />
<text  x="162.02" y="175.5" ></text>
</g>
<g >
<title>runtime.concatstrings (2 samples, 0.10%)</title><rect x="176.9" y="261" width="1.2" height="15.0" fill="rgb(211,154,49)" rx="2" ry="2" />
<text  x="179.92" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encode (1 samples, 0.05%)</title><rect x="108.8" y="357" width="0.5" height="15.0" fill="rgb(231,207,39)" rx="2" ry="2" />
<text  x="111.77" y="367.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.05%)</title><rect x="259.5" y="309" width="0.6" height="15.0" fill="rgb(205,224,8)" rx="2" ry="2" />
<text  x="262.52" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.RegisterName (1 samples, 0.05%)</title><rect x="210.4" y="437" width="0.6" height="15.0" fill="rgb(247,221,33)" rx="2" ry="2" />
<text  x="213.42" y="447.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (7 samples, 0.34%)</title><rect x="371.6" y="469" width="4.0" height="15.0" fill="rgb(251,75,26)" rx="2" ry="2" />
<text  x="374.57" y="479.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.05%)</title><rect x="401.6" y="357" width="0.6" height="15.0" fill="rgb(210,229,9)" rx="2" ry="2" />
<text  x="404.60" y="367.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (1 samples, 0.05%)</title><rect x="403.3" y="389" width="0.6" height="15.0" fill="rgb(236,98,7)" rx="2" ry="2" />
<text  x="406.33" y="399.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (78 samples, 3.82%)</title><rect x="17.5" y="501" width="45.1" height="15.0" fill="rgb(241,142,23)" rx="2" ry="2" />
<text  x="20.51" y="511.5" >net/..</text>
</g>
<g >
<title>runtime.scang (2 samples, 0.10%)</title><rect x="211.0" y="309" width="1.2" height="15.0" fill="rgb(251,19,48)" rx="2" ry="2" />
<text  x="214.00" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (3 samples, 0.15%)</title><rect x="774.7" y="469" width="1.8" height="15.0" fill="rgb(222,102,0)" rx="2" ry="2" />
<text  x="777.72" y="479.5" ></text>
</g>
<g >
<title>syscall.CloseOnExec (1 samples, 0.05%)</title><rect x="402.2" y="389" width="0.6" height="15.0" fill="rgb(216,167,52)" rx="2" ry="2" />
<text  x="405.18" y="399.5" ></text>
</g>
<g >
<title>runtime.scanstack (26 samples, 1.27%)</title><rect x="1142.1" y="437" width="15.0" height="15.0" fill="rgb(239,31,38)" rx="2" ry="2" />
<text  x="1145.06" y="447.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.05%)</title><rect x="124.4" y="213" width="0.5" height="15.0" fill="rgb(221,2,25)" rx="2" ry="2" />
<text  x="127.36" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.05%)</title><rect x="382.0" y="453" width="0.5" height="15.0" fill="rgb(221,128,36)" rx="2" ry="2" />
<text  x="384.96" y="463.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).Dup (1 samples, 0.05%)</title><rect x="290.7" y="389" width="0.6" height="15.0" fill="rgb(239,216,8)" rx="2" ry="2" />
<text  x="293.70" y="399.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.05%)</title><rect x="351.4" y="245" width="0.5" height="15.0" fill="rgb(233,11,35)" rx="2" ry="2" />
<text  x="354.35" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.05%)</title><rect x="152.7" y="277" width="0.5" height="15.0" fill="rgb(239,109,30)" rx="2" ry="2" />
<text  x="155.66" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (18 samples, 0.88%)</title><rect x="763.7" y="469" width="10.4" height="15.0" fill="rgb(215,12,44)" rx="2" ry="2" />
<text  x="766.74" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="122.6" y="309" width="0.6" height="15.0" fill="rgb(242,79,25)" rx="2" ry="2" />
<text  x="125.63" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).Write (35 samples, 1.71%)</title><rect x="267.6" y="453" width="20.2" height="15.0" fill="rgb(246,60,12)" rx="2" ry="2" />
<text  x="270.60" y="463.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.05%)</title><rect x="371.6" y="421" width="0.5" height="15.0" fill="rgb(207,220,25)" rx="2" ry="2" />
<text  x="374.57" y="431.5" ></text>
</g>
<g >
<title>strings.Split (1 samples, 0.05%)</title><rect x="343.8" y="453" width="0.6" height="15.0" fill="rgb(249,125,6)" rx="2" ry="2" />
<text  x="346.84" y="463.5" ></text>
</g>
<g >
<title>runtime.globrunqget (1 samples, 0.05%)</title><rect x="411.4" y="501" width="0.6" height="15.0" fill="rgb(214,65,7)" rx="2" ry="2" />
<text  x="414.42" y="511.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Logger).Logln (91 samples, 4.45%)</title><rect x="290.7" y="453" width="52.6" height="15.0" fill="rgb(234,42,51)" rx="2" ry="2" />
<text  x="293.70" y="463.5" >githu..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="288.4" y="389" width="0.6" height="15.0" fill="rgb(206,9,40)" rx="2" ry="2" />
<text  x="291.39" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="289.0" y="421" width="0.5" height="15.0" fill="rgb(220,32,26)" rx="2" ry="2" />
<text  x="291.97" y="431.5" ></text>
</g>
<g >
<title>runtime.convT2E (2 samples, 0.10%)</title><rect x="354.2" y="485" width="1.2" height="15.0" fill="rgb(210,4,28)" rx="2" ry="2" />
<text  x="357.24" y="495.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.05%)</title><rect x="263.6" y="277" width="0.5" height="15.0" fill="rgb(236,32,35)" rx="2" ry="2" />
<text  x="266.56" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="176.3" y="245" width="0.6" height="15.0" fill="rgb(220,42,16)" rx="2" ry="2" />
<text  x="179.34" y="255.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (2 samples, 0.10%)</title><rect x="298.2" y="293" width="1.2" height="15.0" fill="rgb(213,133,26)" rx="2" ry="2" />
<text  x="301.21" y="303.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.05%)</title><rect x="171.1" y="117" width="0.6" height="15.0" fill="rgb(223,3,47)" rx="2" ry="2" />
<text  x="174.15" y="127.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (26 samples, 1.27%)</title><rect x="1142.1" y="469" width="15.0" height="15.0" fill="rgb(237,15,6)" rx="2" ry="2" />
<text  x="1145.06" y="479.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.05%)</title><rect x="446.7" y="469" width="0.5" height="15.0" fill="rgb(210,81,51)" rx="2" ry="2" />
<text  x="449.65" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.overflow (3 samples, 0.15%)</title><rect x="201.2" y="309" width="1.7" height="15.0" fill="rgb(223,48,48)" rx="2" ry="2" />
<text  x="204.18" y="319.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (1 samples, 0.05%)</title><rect x="99.5" y="517" width="0.6" height="15.0" fill="rgb(228,121,52)" rx="2" ry="2" />
<text  x="102.53" y="527.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.05%)</title><rect x="351.4" y="229" width="0.5" height="15.0" fill="rgb(212,57,31)" rx="2" ry="2" />
<text  x="354.35" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.10%)</title><rect x="1184.2" y="485" width="1.2" height="15.0" fill="rgb(215,14,11)" rx="2" ry="2" />
<text  x="1187.22" y="495.5" ></text>
</g>
<g >
<title>runtime.semasleep (52 samples, 2.55%)</title><rect x="732.0" y="469" width="30.0" height="15.0" fill="rgb(215,178,33)" rx="2" ry="2" />
<text  x="734.98" y="479.5" >ru..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="205.2" y="309" width="0.6" height="15.0" fill="rgb(248,101,11)" rx="2" ry="2" />
<text  x="208.22" y="319.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.05%)</title><rect x="260.7" y="421" width="0.5" height="15.0" fill="rgb(208,39,47)" rx="2" ry="2" />
<text  x="263.67" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="141.7" y="389" width="0.6" height="15.0" fill="rgb(234,88,25)" rx="2" ry="2" />
<text  x="144.69" y="399.5" ></text>
</g>
<g >
<title>encoding/gob.overflow (2 samples, 0.10%)</title><rect x="157.3" y="245" width="1.1" height="15.0" fill="rgb(226,58,27)" rx="2" ry="2" />
<text  x="160.28" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.05%)</title><rect x="196.6" y="117" width="0.5" height="15.0" fill="rgb(227,223,54)" rx="2" ry="2" />
<text  x="199.56" y="127.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.05%)</title><rect x="208.7" y="341" width="0.6" height="15.0" fill="rgb(225,127,21)" rx="2" ry="2" />
<text  x="211.69" y="351.5" ></text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="155.6" y="229" width="0.5" height="15.0" fill="rgb(228,180,40)" rx="2" ry="2" />
<text  x="158.55" y="239.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (5 samples, 0.24%)</title><rect x="10.0" y="549" width="2.9" height="15.0" fill="rgb(231,163,2)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>errors.New (1 samples, 0.05%)</title><rect x="201.2" y="293" width="0.6" height="15.0" fill="rgb(245,179,45)" rx="2" ry="2" />
<text  x="204.18" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="179.2" y="245" width="0.6" height="15.0" fill="rgb(227,120,50)" rx="2" ry="2" />
<text  x="182.23" y="255.5" ></text>
</g>
<g >
<title>syscall.Write (58 samples, 2.84%)</title><rect x="301.1" y="325" width="33.5" height="15.0" fill="rgb(245,155,47)" rx="2" ry="2" />
<text  x="304.10" y="335.5" >sy..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="175.2" y="277" width="0.6" height="15.0" fill="rgb(250,87,28)" rx="2" ry="2" />
<text  x="178.19" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait_trampoline (1 samples, 0.05%)</title><rect x="379.7" y="549" width="0.5" height="15.0" fill="rgb(223,61,15)" rx="2" ry="2" />
<text  x="382.65" y="559.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).shouldRedirectRLocked (1 samples, 0.05%)</title><rect x="100.7" y="485" width="0.6" height="15.0" fill="rgb(246,50,46)" rx="2" ry="2" />
<text  x="103.68" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.NewDecoder (2 samples, 0.10%)</title><rect x="209.3" y="453" width="1.1" height="15.0" fill="rgb(210,165,10)" rx="2" ry="2" />
<text  x="212.27" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="153.8" y="213" width="0.6" height="15.0" fill="rgb(236,197,35)" rx="2" ry="2" />
<text  x="156.82" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (343 samples, 16.79%)</title><rect x="448.4" y="517" width="198.1" height="15.0" fill="rgb(216,187,8)" rx="2" ry="2" />
<text  x="451.38" y="527.5" >runtime.notesleep</text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.05%)</title><rect x="157.9" y="69" width="0.5" height="15.0" fill="rgb(210,92,14)" rx="2" ry="2" />
<text  x="160.86" y="79.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="139.4" y="389" width="0.6" height="15.0" fill="rgb(209,87,23)" rx="2" ry="2" />
<text  x="142.38" y="399.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="64.3" y="453" width="0.6" height="15.0" fill="rgb(254,158,22)" rx="2" ry="2" />
<text  x="67.29" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="350.8" y="357" width="0.6" height="15.0" fill="rgb(249,33,54)" rx="2" ry="2" />
<text  x="353.77" y="367.5" ></text>
</g>
<g >
<title>sort.quickSort (1 samples, 0.05%)</title><rect x="72.4" y="421" width="0.6" height="15.0" fill="rgb(221,226,29)" rx="2" ry="2" />
<text  x="75.38" y="431.5" ></text>
</g>
<g >
<title>runtime.newstack (29 samples, 1.42%)</title><rect x="763.7" y="549" width="16.8" height="15.0" fill="rgb(250,21,50)" rx="2" ry="2" />
<text  x="766.74" y="559.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(231,96,6)" rx="2" ry="2" />
<text  x="1192.42" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.05%)</title><rect x="213.3" y="357" width="0.6" height="15.0" fill="rgb(239,71,7)" rx="2" ry="2" />
<text  x="216.31" y="367.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (1 samples, 0.05%)</title><rect x="103.0" y="453" width="0.6" height="15.0" fill="rgb(210,40,29)" rx="2" ry="2" />
<text  x="105.99" y="463.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.10%)</title><rect x="144.0" y="245" width="1.2" height="15.0" fill="rgb(238,141,37)" rx="2" ry="2" />
<text  x="147.00" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="142.8" y="245" width="0.6" height="15.0" fill="rgb(245,30,39)" rx="2" ry="2" />
<text  x="145.84" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (45 samples, 2.20%)</title><rect x="1157.1" y="533" width="26.0" height="15.0" fill="rgb(227,78,48)" rx="2" ry="2" />
<text  x="1160.08" y="543.5" >r..</text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.05%)</title><rect x="99.5" y="501" width="0.6" height="15.0" fill="rgb(252,48,2)" rx="2" ry="2" />
<text  x="102.53" y="511.5" ></text>
</g>
<g >
<title>io.ReadFull (82 samples, 4.01%)</title><rect x="213.3" y="453" width="47.4" height="15.0" fill="rgb(211,109,7)" rx="2" ry="2" />
<text  x="216.31" y="463.5" >io.R..</text>
</g>
<g >
<title>runtime.pthread_cond_wait (14 samples, 0.69%)</title><rect x="437.4" y="453" width="8.1" height="15.0" fill="rgb(214,22,6)" rx="2" ry="2" />
<text  x="440.41" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="207.0" y="309" width="0.5" height="15.0" fill="rgb(233,180,25)" rx="2" ry="2" />
<text  x="209.96" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="154.4" y="149" width="0.6" height="15.0" fill="rgb(247,128,12)" rx="2" ry="2" />
<text  x="157.40" y="159.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Unlock (2 samples, 0.10%)</title><rect x="293.6" y="373" width="1.1" height="15.0" fill="rgb(230,109,22)" rx="2" ry="2" />
<text  x="296.59" y="383.5" ></text>
</g>
<g >
<title>runtime.stackcacherelease (4 samples, 0.20%)</title><rect x="778.2" y="501" width="2.3" height="15.0" fill="rgb(229,118,8)" rx="2" ry="2" />
<text  x="781.18" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeValue (26 samples, 1.27%)</title><rect x="194.2" y="421" width="15.1" height="15.0" fill="rgb(218,224,51)" rx="2" ry="2" />
<text  x="197.25" y="431.5" ></text>
</g>
<g >
<title>strings.lastIndexFunc (1 samples, 0.05%)</title><rect x="345.0" y="405" width="0.6" height="15.0" fill="rgb(225,212,0)" rx="2" ry="2" />
<text  x="348.00" y="415.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (2 samples, 0.10%)</title><rect x="293.6" y="357" width="1.1" height="15.0" fill="rgb(247,152,54)" rx="2" ry="2" />
<text  x="296.59" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.10%)</title><rect x="174.0" y="229" width="1.2" height="15.0" fill="rgb(211,157,10)" rx="2" ry="2" />
<text  x="177.03" y="239.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (26 samples, 1.27%)</title><rect x="1142.1" y="421" width="15.0" height="15.0" fill="rgb(214,186,49)" rx="2" ry="2" />
<text  x="1145.06" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="141.7" y="405" width="0.6" height="15.0" fill="rgb(235,117,32)" rx="2" ry="2" />
<text  x="144.69" y="415.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="1180.2" y="373" width="0.6" height="15.0" fill="rgb(241,66,6)" rx="2" ry="2" />
<text  x="1183.18" y="383.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.05%)</title><rect x="763.2" y="517" width="0.5" height="15.0" fill="rgb(207,186,25)" rx="2" ry="2" />
<text  x="766.17" y="527.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (3 samples, 0.15%)</title><rect x="173.5" y="245" width="1.7" height="15.0" fill="rgb(242,174,43)" rx="2" ry="2" />
<text  x="176.46" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="289.0" y="389" width="0.5" height="15.0" fill="rgb(254,28,15)" rx="2" ry="2" />
<text  x="291.97" y="399.5" ></text>
</g>
<g >
<title>runtime.newproc (2 samples, 0.10%)</title><rect x="70.6" y="533" width="1.2" height="15.0" fill="rgb(250,12,53)" rx="2" ry="2" />
<text  x="73.65" y="543.5" ></text>
</g>
<g >
<title>syscall.write (34 samples, 1.66%)</title><rect x="77.6" y="437" width="19.6" height="15.0" fill="rgb(250,77,0)" rx="2" ry="2" />
<text  x="80.58" y="447.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1156.5" y="341" width="0.6" height="15.0" fill="rgb(254,70,19)" rx="2" ry="2" />
<text  x="1159.50" y="351.5" ></text>
</g>
<g >
<title>net.(*TCPListener).AcceptTCP (4 samples, 0.20%)</title><rect x="401.6" y="469" width="2.3" height="15.0" fill="rgb(214,97,36)" rx="2" ry="2" />
<text  x="404.60" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="154.4" y="229" width="0.6" height="15.0" fill="rgb(251,31,40)" rx="2" ry="2" />
<text  x="157.40" y="239.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.05%)</title><rect x="353.7" y="421" width="0.5" height="15.0" fill="rgb(240,125,24)" rx="2" ry="2" />
<text  x="356.66" y="431.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1 samples, 0.05%)</title><rect x="103.0" y="437" width="0.6" height="15.0" fill="rgb(244,7,21)" rx="2" ry="2" />
<text  x="105.99" y="447.5" ></text>
</g>
<g >
<title>runtime.usleep (18 samples, 0.88%)</title><rect x="763.7" y="453" width="10.4" height="15.0" fill="rgb(245,144,51)" rx="2" ry="2" />
<text  x="766.74" y="463.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.10%)</title><rect x="446.7" y="485" width="1.1" height="15.0" fill="rgb(248,37,24)" rx="2" ry="2" />
<text  x="449.65" y="495.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.20%)</title><rect x="778.2" y="469" width="2.3" height="15.0" fill="rgb(231,196,23)" rx="2" ry="2" />
<text  x="781.18" y="479.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.05%)</title><rect x="171.7" y="245" width="0.6" height="15.0" fill="rgb(217,126,37)" rx="2" ry="2" />
<text  x="174.72" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (10 samples, 0.49%)</title><rect x="1142.1" y="341" width="5.7" height="15.0" fill="rgb(219,188,42)" rx="2" ry="2" />
<text  x="1145.06" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.05%)</title><rect x="204.1" y="245" width="0.5" height="15.0" fill="rgb(216,21,19)" rx="2" ry="2" />
<text  x="207.07" y="255.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.05%)</title><rect x="174.6" y="213" width="0.6" height="15.0" fill="rgb(209,35,6)" rx="2" ry="2" />
<text  x="177.61" y="223.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (11 samples, 0.54%)</title><rect x="109.3" y="293" width="6.4" height="15.0" fill="rgb(242,67,8)" rx="2" ry="2" />
<text  x="112.34" y="303.5" ></text>
</g>
<g >
<title>runtime.adjustsudogs (1 samples, 0.05%)</title><rect x="161.9" y="133" width="0.6" height="15.0" fill="rgb(244,79,40)" rx="2" ry="2" />
<text  x="164.90" y="143.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="149.8" y="277" width="0.6" height="15.0" fill="rgb(231,195,37)" rx="2" ry="2" />
<text  x="152.77" y="287.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*defaultPool).Get (1 samples, 0.05%)</title><rect x="340.4" y="389" width="0.6" height="15.0" fill="rgb(220,67,17)" rx="2" ry="2" />
<text  x="343.38" y="399.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (5 samples, 0.24%)</title><rect x="401.6" y="501" width="2.9" height="15.0" fill="rgb(209,18,37)" rx="2" ry="2" />
<text  x="404.60" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="350.8" y="373" width="0.6" height="15.0" fill="rgb(251,215,31)" rx="2" ry="2" />
<text  x="353.77" y="383.5" ></text>
</g>
<g >
<title>runtime.stackalloc (11 samples, 0.54%)</title><rect x="1142.1" y="389" width="6.3" height="15.0" fill="rgb(205,169,52)" rx="2" ry="2" />
<text  x="1145.06" y="399.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.05%)</title><rect x="193.7" y="341" width="0.5" height="15.0" fill="rgb(245,7,27)" rx="2" ry="2" />
<text  x="196.67" y="351.5" ></text>
</g>
<g >
<title>runtime.adjustpointers (2 samples, 0.10%)</title><rect x="391.8" y="373" width="1.1" height="15.0" fill="rgb(224,216,36)" rx="2" ry="2" />
<text  x="394.78" y="383.5" ></text>
</g>
<g >
<title>runtime.greyobject (3 samples, 0.15%)</title><rect x="265.9" y="325" width="1.7" height="15.0" fill="rgb(226,126,51)" rx="2" ry="2" />
<text  x="268.87" y="335.5" ></text>
</g>
<g >
<title>net.setNoDelay (1 samples, 0.05%)</title><rect x="403.3" y="421" width="0.6" height="15.0" fill="rgb(217,179,18)" rx="2" ry="2" />
<text  x="406.33" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.05%)</title><rect x="115.7" y="245" width="0.6" height="15.0" fill="rgb(226,54,51)" rx="2" ry="2" />
<text  x="118.70" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (7 samples, 0.34%)</title><rect x="371.6" y="501" width="4.0" height="15.0" fill="rgb(216,203,50)" rx="2" ry="2" />
<text  x="374.57" y="511.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.05%)</title><rect x="650.0" y="501" width="0.5" height="15.0" fill="rgb(247,201,28)" rx="2" ry="2" />
<text  x="652.96" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).newEncoderState (1 samples, 0.05%)</title><rect x="124.4" y="309" width="0.5" height="15.0" fill="rgb(229,63,0)" rx="2" ry="2" />
<text  x="127.36" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.10%)</title><rect x="263.0" y="325" width="1.1" height="15.0" fill="rgb(217,78,42)" rx="2" ry="2" />
<text  x="265.98" y="335.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1 samples, 0.05%)</title><rect x="63.1" y="485" width="0.6" height="15.0" fill="rgb(237,190,46)" rx="2" ry="2" />
<text  x="66.14" y="495.5" ></text>
</g>
<g >
<title>runtime.return0 (1 samples, 0.05%)</title><rect x="123.2" y="373" width="0.6" height="15.0" fill="rgb(231,14,12)" rx="2" ry="2" />
<text  x="126.21" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="153.8" y="197" width="0.6" height="15.0" fill="rgb(252,25,27)" rx="2" ry="2" />
<text  x="156.82" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (11 samples, 0.54%)</title><rect x="261.2" y="453" width="6.4" height="15.0" fill="rgb(254,206,13)" rx="2" ry="2" />
<text  x="264.25" y="463.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.05%)</title><rect x="358.3" y="485" width="0.6" height="15.0" fill="rgb(207,102,18)" rx="2" ry="2" />
<text  x="361.28" y="495.5" ></text>
</g>
<g >
<title>runtime.mstart1 (1 samples, 0.05%)</title><rect x="780.5" y="549" width="0.6" height="15.0" fill="rgb(243,162,6)" rx="2" ry="2" />
<text  x="783.49" y="559.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeTypeSequence (9 samples, 0.44%)</title><rect x="194.2" y="357" width="5.2" height="15.0" fill="rgb(237,19,8)" rx="2" ry="2" />
<text  x="197.25" y="367.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (3 samples, 0.15%)</title><rect x="398.1" y="373" width="1.8" height="15.0" fill="rgb(240,140,6)" rx="2" ry="2" />
<text  x="401.14" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.05%)</title><rect x="774.1" y="453" width="0.6" height="15.0" fill="rgb(239,10,15)" rx="2" ry="2" />
<text  x="777.14" y="463.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (1 samples, 0.05%)</title><rect x="292.4" y="341" width="0.6" height="15.0" fill="rgb(247,137,49)" rx="2" ry="2" />
<text  x="295.44" y="351.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Logger).Infoln (91 samples, 4.45%)</title><rect x="290.7" y="469" width="52.6" height="15.0" fill="rgb(216,145,16)" rx="2" ry="2" />
<text  x="293.70" y="479.5" >githu..</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.05%)</title><rect x="763.2" y="469" width="0.5" height="15.0" fill="rgb(216,131,38)" rx="2" ry="2" />
<text  x="766.17" y="479.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (3 samples, 0.15%)</title><rect x="398.1" y="389" width="1.8" height="15.0" fill="rgb(247,137,14)" rx="2" ry="2" />
<text  x="401.14" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="142.8" y="293" width="0.6" height="15.0" fill="rgb(221,8,21)" rx="2" ry="2" />
<text  x="145.84" y="303.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.05%)</title><rect x="370.4" y="453" width="0.6" height="15.0" fill="rgb(228,198,29)" rx="2" ry="2" />
<text  x="373.41" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.05%)</title><rect x="201.2" y="213" width="0.6" height="15.0" fill="rgb(241,161,18)" rx="2" ry="2" />
<text  x="204.18" y="223.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (3 samples, 0.15%)</title><rect x="133.6" y="341" width="1.7" height="15.0" fill="rgb(223,39,13)" rx="2" ry="2" />
<text  x="136.60" y="351.5" ></text>
</g>
<g >
<title>runtime.runqsteal (14 samples, 0.69%)</title><rect x="723.9" y="501" width="8.1" height="15.0" fill="rgb(215,133,17)" rx="2" ry="2" />
<text  x="726.89" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compatibleType (1 samples, 0.05%)</title><rect x="153.2" y="229" width="0.6" height="15.0" fill="rgb(206,159,46)" rx="2" ry="2" />
<text  x="156.24" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="349.6" y="405" width="0.6" height="15.0" fill="rgb(237,2,38)" rx="2" ry="2" />
<text  x="352.62" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.10%)</title><rect x="187.3" y="293" width="1.2" height="15.0" fill="rgb(240,26,18)" rx="2" ry="2" />
<text  x="190.32" y="303.5" ></text>
</g>
<g >
<title>runtime.stackcache_clear (1 samples, 0.05%)</title><rect x="382.0" y="437" width="0.5" height="15.0" fill="rgb(253,216,0)" rx="2" ry="2" />
<text  x="384.96" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="15.8" y="453" width="0.6" height="15.0" fill="rgb(251,80,47)" rx="2" ry="2" />
<text  x="18.78" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendTypeDescriptor (26 samples, 1.27%)</title><rect x="123.8" y="421" width="15.0" height="15.0" fill="rgb(209,206,27)" rx="2" ry="2" />
<text  x="126.78" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="150.9" y="229" width="0.6" height="15.0" fill="rgb(239,31,16)" rx="2" ry="2" />
<text  x="153.93" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (14 samples, 0.69%)</title><rect x="1148.4" y="325" width="8.1" height="15.0" fill="rgb(240,162,25)" rx="2" ry="2" />
<text  x="1151.41" y="335.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.05%)</title><rect x="205.2" y="341" width="0.6" height="15.0" fill="rgb(238,164,35)" rx="2" ry="2" />
<text  x="208.22" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="155.0" y="245" width="0.6" height="15.0" fill="rgb(224,180,36)" rx="2" ry="2" />
<text  x="157.97" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (5 samples, 0.24%)</title><rect x="116.9" y="293" width="2.8" height="15.0" fill="rgb(235,76,33)" rx="2" ry="2" />
<text  x="119.85" y="303.5" ></text>
</g>
<g >
<title>runtime.forEachP (3 samples, 0.15%)</title><rect x="1184.2" y="517" width="1.8" height="15.0" fill="rgb(241,190,1)" rx="2" ry="2" />
<text  x="1187.22" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.05%)</title><rect x="152.1" y="277" width="0.6" height="15.0" fill="rgb(250,93,31)" rx="2" ry="2" />
<text  x="155.09" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (595 samples, 29.12%)</title><rect x="793.8" y="453" width="343.6" height="15.0" fill="rgb(207,129,3)" rx="2" ry="2" />
<text  x="796.78" y="463.5" >runtime.pthread_cond_signal</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="350.8" y="341" width="0.6" height="15.0" fill="rgb(206,79,10)" rx="2" ry="2" />
<text  x="353.77" y="351.5" ></text>
</g>
<g >
<title>runtime.osyield (7 samples, 0.34%)</title><rect x="335.2" y="309" width="4.0" height="15.0" fill="rgb(237,81,38)" rx="2" ry="2" />
<text  x="338.18" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.10%)</title><rect x="211.0" y="373" width="1.2" height="15.0" fill="rgb(218,164,10)" rx="2" ry="2" />
<text  x="214.00" y="383.5" ></text>
</g>
<g >
<title>fmt.(*buffer).WriteString (1 samples, 0.05%)</title><rect x="297.1" y="309" width="0.5" height="15.0" fill="rgb(239,211,14)" rx="2" ry="2" />
<text  x="300.06" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="193.7" y="357" width="0.5" height="15.0" fill="rgb(251,2,33)" rx="2" ry="2" />
<text  x="196.67" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.10%)</title><rect x="183.3" y="277" width="1.1" height="15.0" fill="rgb(220,11,36)" rx="2" ry="2" />
<text  x="186.27" y="287.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.05%)</title><rect x="204.1" y="293" width="0.5" height="15.0" fill="rgb(232,126,4)" rx="2" ry="2" />
<text  x="207.07" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="1147.8" y="325" width="0.6" height="15.0" fill="rgb(226,58,18)" rx="2" ry="2" />
<text  x="1150.84" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(227,196,48)" rx="2" ry="2" />
<text  x="1192.42" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.10%)</title><rect x="137.6" y="373" width="1.2" height="15.0" fill="rgb(251,121,39)" rx="2" ry="2" />
<text  x="140.65" y="383.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.15%)</title><rect x="774.7" y="437" width="1.8" height="15.0" fill="rgb(218,73,33)" rx="2" ry="2" />
<text  x="777.72" y="447.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.10%)</title><rect x="357.7" y="501" width="1.2" height="15.0" fill="rgb(250,173,44)" rx="2" ry="2" />
<text  x="360.70" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (1 samples, 0.05%)</title><rect x="156.7" y="245" width="0.6" height="15.0" fill="rgb(226,217,29)" rx="2" ry="2" />
<text  x="159.71" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="120.9" y="261" width="0.6" height="15.0" fill="rgb(238,84,11)" rx="2" ry="2" />
<text  x="123.90" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.05%)</title><rect x="340.4" y="373" width="0.6" height="15.0" fill="rgb(230,48,22)" rx="2" ry="2" />
<text  x="343.38" y="383.5" ></text>
</g>
<g >
<title>net.(*conn).Write (35 samples, 1.71%)</title><rect x="77.0" y="501" width="20.2" height="15.0" fill="rgb(232,215,50)" rx="2" ry="2" />
<text  x="80.00" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.05%)</title><rect x="145.2" y="101" width="0.5" height="15.0" fill="rgb(207,129,41)" rx="2" ry="2" />
<text  x="148.15" y="111.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (1 samples, 0.05%)</title><rect x="261.2" y="357" width="0.6" height="15.0" fill="rgb(251,132,10)" rx="2" ry="2" />
<text  x="264.25" y="367.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.05%)</title><rect x="98.4" y="421" width="0.5" height="15.0" fill="rgb(252,118,24)" rx="2" ry="2" />
<text  x="101.37" y="431.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Unlock (1 samples, 0.05%)</title><rect x="292.4" y="373" width="0.6" height="15.0" fill="rgb(244,124,51)" rx="2" ry="2" />
<text  x="295.44" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="403.9" y="469" width="0.6" height="15.0" fill="rgb(234,158,6)" rx="2" ry="2" />
<text  x="406.91" y="479.5" ></text>
</g>
<g >
<title>reflect.(*structType).FieldByName (1 samples, 0.05%)</title><rect x="178.1" y="277" width="0.6" height="15.0" fill="rgb(253,62,29)" rx="2" ry="2" />
<text  x="181.08" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (10 samples, 0.49%)</title><rect x="1142.1" y="325" width="5.7" height="15.0" fill="rgb(252,176,51)" rx="2" ry="2" />
<text  x="1145.06" y="335.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.05%)</title><rect x="205.2" y="325" width="0.6" height="15.0" fill="rgb(210,155,34)" rx="2" ry="2" />
<text  x="208.22" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="290.7" y="373" width="0.6" height="15.0" fill="rgb(237,141,32)" rx="2" ry="2" />
<text  x="293.70" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.05%)</title><rect x="201.2" y="229" width="0.6" height="15.0" fill="rgb(249,46,8)" rx="2" ry="2" />
<text  x="204.18" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="155.0" y="261" width="0.6" height="15.0" fill="rgb(211,14,11)" rx="2" ry="2" />
<text  x="157.97" y="271.5" ></text>
</g>
<g >
<title>errors.New (1 samples, 0.05%)</title><rect x="157.3" y="229" width="0.6" height="15.0" fill="rgb(232,210,25)" rx="2" ry="2" />
<text  x="160.28" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="138.8" y="421" width="0.6" height="15.0" fill="rgb(236,222,31)" rx="2" ry="2" />
<text  x="141.80" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="261.2" y="389" width="0.6" height="15.0" fill="rgb(250,42,27)" rx="2" ry="2" />
<text  x="264.25" y="399.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (41 samples, 2.01%)</title><rect x="1157.1" y="437" width="23.7" height="15.0" fill="rgb(229,227,52)" rx="2" ry="2" />
<text  x="1160.08" y="447.5" >r..</text>
</g>
<g >
<title>syscall.syscall (58 samples, 2.84%)</title><rect x="301.1" y="293" width="33.5" height="15.0" fill="rgb(241,22,37)" rx="2" ry="2" />
<text  x="304.10" y="303.5" >sy..</text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.05%)</title><rect x="179.8" y="293" width="0.6" height="15.0" fill="rgb(249,79,16)" rx="2" ry="2" />
<text  x="182.81" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (5 samples, 0.24%)</title><rect x="395.2" y="405" width="2.9" height="15.0" fill="rgb(246,105,23)" rx="2" ry="2" />
<text  x="398.25" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="182.1" y="261" width="0.6" height="15.0" fill="rgb(232,179,31)" rx="2" ry="2" />
<text  x="185.12" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (35 samples, 1.71%)</title><rect x="77.0" y="469" width="20.2" height="15.0" fill="rgb(241,67,33)" rx="2" ry="2" />
<text  x="80.00" y="479.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.29%)</title><rect x="264.1" y="341" width="3.5" height="15.0" fill="rgb(245,43,0)" rx="2" ry="2" />
<text  x="267.14" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="109.3" y="69" width="0.6" height="15.0" fill="rgb(221,32,18)" rx="2" ry="2" />
<text  x="112.34" y="79.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (3 samples, 0.15%)</title><rect x="351.9" y="421" width="1.8" height="15.0" fill="rgb(251,178,1)" rx="2" ry="2" />
<text  x="354.93" y="431.5" ></text>
</g>
<g >
<title>main.main (5 samples, 0.24%)</title><rect x="401.6" y="549" width="2.9" height="15.0" fill="rgb(223,189,41)" rx="2" ry="2" />
<text  x="404.60" y="559.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (16 samples, 0.78%)</title><rect x="1157.1" y="389" width="9.2" height="15.0" fill="rgb(241,21,10)" rx="2" ry="2" />
<text  x="1160.08" y="399.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (616 samples, 30.15%)</title><rect x="786.3" y="533" width="355.8" height="15.0" fill="rgb(248,116,22)" rx="2" ry="2" />
<text  x="789.27" y="543.5" >runtime.entersyscallblock_handoff</text>
</g>
<g >
<title>runtime.newproc1 (1 samples, 0.05%)</title><rect x="403.9" y="437" width="0.6" height="15.0" fill="rgb(251,182,37)" rx="2" ry="2" />
<text  x="406.91" y="447.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (79 samples, 3.87%)</title><rect x="17.5" y="517" width="45.6" height="15.0" fill="rgb(253,226,43)" rx="2" ry="2" />
<text  x="20.51" y="527.5" >net/..</text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.05%)</title><rect x="149.8" y="261" width="0.6" height="15.0" fill="rgb(224,133,3)" rx="2" ry="2" />
<text  x="152.77" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compatibleType (1 samples, 0.05%)</title><rect x="205.8" y="373" width="0.6" height="15.0" fill="rgb(235,59,19)" rx="2" ry="2" />
<text  x="208.80" y="383.5" ></text>
</g>
<g >
<title>errors.New (1 samples, 0.05%)</title><rect x="176.3" y="277" width="0.6" height="15.0" fill="rgb(231,29,20)" rx="2" ry="2" />
<text  x="179.34" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.15%)</title><rect x="169.4" y="133" width="1.7" height="15.0" fill="rgb(248,43,5)" rx="2" ry="2" />
<text  x="172.41" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (341 samples, 16.69%)</title><rect x="448.4" y="485" width="196.9" height="15.0" fill="rgb(224,115,44)" rx="2" ry="2" />
<text  x="451.38" y="495.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeTypeSequence (89 samples, 4.36%)</title><rect x="142.8" y="421" width="51.4" height="15.0" fill="rgb(241,145,23)" rx="2" ry="2" />
<text  x="145.84" y="431.5" >encod..</text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.05%)</title><rect x="184.4" y="325" width="0.6" height="15.0" fill="rgb(230,167,43)" rx="2" ry="2" />
<text  x="187.43" y="335.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="287.8" y="469" width="0.6" height="15.0" fill="rgb(221,220,52)" rx="2" ry="2" />
<text  x="290.82" y="479.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="151.5" y="261" width="0.6" height="15.0" fill="rgb(221,65,33)" rx="2" ry="2" />
<text  x="154.51" y="271.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (82 samples, 4.01%)</title><rect x="213.3" y="437" width="47.4" height="15.0" fill="rgb(234,139,53)" rx="2" ry="2" />
<text  x="216.31" y="447.5" >io.R..</text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.05%)</title><rect x="62.0" y="277" width="0.6" height="15.0" fill="rgb(235,190,18)" rx="2" ry="2" />
<text  x="64.98" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="202.3" y="213" width="0.6" height="15.0" fill="rgb(246,140,21)" rx="2" ry="2" />
<text  x="205.33" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.05%)</title><rect x="300.5" y="325" width="0.6" height="15.0" fill="rgb(210,156,4)" rx="2" ry="2" />
<text  x="303.52" y="335.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.15%)</title><rect x="786.3" y="501" width="1.7" height="15.0" fill="rgb(250,206,30)" rx="2" ry="2" />
<text  x="789.27" y="511.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.05%)</title><rect x="210.4" y="421" width="0.6" height="15.0" fill="rgb(227,29,40)" rx="2" ry="2" />
<text  x="213.42" y="431.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.05%)</title><rect x="211.0" y="229" width="0.6" height="15.0" fill="rgb(218,21,17)" rx="2" ry="2" />
<text  x="214.00" y="239.5" ></text>
</g>
<g >
<title>runtime.copystack (26 samples, 1.27%)</title><rect x="1142.1" y="405" width="15.0" height="15.0" fill="rgb(215,166,4)" rx="2" ry="2" />
<text  x="1145.06" y="415.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.05%)</title><rect x="263.0" y="277" width="0.6" height="15.0" fill="rgb(254,79,43)" rx="2" ry="2" />
<text  x="265.98" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (26 samples, 1.27%)</title><rect x="1142.1" y="517" width="15.0" height="15.0" fill="rgb(241,3,28)" rx="2" ry="2" />
<text  x="1145.06" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="157.3" y="197" width="0.6" height="15.0" fill="rgb(209,95,10)" rx="2" ry="2" />
<text  x="160.28" y="207.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="208.1" y="341" width="0.6" height="15.0" fill="rgb(214,215,43)" rx="2" ry="2" />
<text  x="211.11" y="351.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.10%)</title><rect x="1188.3" y="501" width="1.1" height="15.0" fill="rgb(244,53,10)" rx="2" ry="2" />
<text  x="1191.27" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.10%)</title><rect x="118.6" y="245" width="1.1" height="15.0" fill="rgb(228,148,21)" rx="2" ry="2" />
<text  x="121.59" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="157.9" y="149" width="0.5" height="15.0" fill="rgb(236,14,53)" rx="2" ry="2" />
<text  x="160.86" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="201.2" y="245" width="0.6" height="15.0" fill="rgb(252,99,44)" rx="2" ry="2" />
<text  x="204.18" y="255.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeValue (8 samples, 0.39%)</title><rect x="194.8" y="325" width="4.6" height="15.0" fill="rgb(205,36,45)" rx="2" ry="2" />
<text  x="197.83" y="335.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.05%)</title><rect x="124.4" y="229" width="0.5" height="15.0" fill="rgb(250,150,21)" rx="2" ry="2" />
<text  x="127.36" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (2 samples, 0.10%)</title><rect x="380.8" y="549" width="1.2" height="15.0" fill="rgb(243,212,20)" rx="2" ry="2" />
<text  x="383.81" y="559.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (5 samples, 0.24%)</title><rect x="127.8" y="293" width="2.9" height="15.0" fill="rgb(235,102,36)" rx="2" ry="2" />
<text  x="130.83" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="157.9" y="165" width="0.5" height="15.0" fill="rgb(229,36,6)" rx="2" ry="2" />
<text  x="160.86" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="343.3" y="373" width="0.5" height="15.0" fill="rgb(216,86,1)" rx="2" ry="2" />
<text  x="346.26" y="383.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (8 samples, 0.39%)</title><rect x="144.0" y="341" width="4.6" height="15.0" fill="rgb(231,28,15)" rx="2" ry="2" />
<text  x="147.00" y="351.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.05%)</title><rect x="157.9" y="101" width="0.5" height="15.0" fill="rgb(215,64,16)" rx="2" ry="2" />
<text  x="160.86" y="111.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.05%)</title><rect x="174.6" y="197" width="0.6" height="15.0" fill="rgb(234,213,52)" rx="2" ry="2" />
<text  x="177.61" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (10 samples, 0.49%)</title><rect x="1142.1" y="357" width="5.7" height="15.0" fill="rgb(228,13,46)" rx="2" ry="2" />
<text  x="1145.06" y="367.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.prefixFieldClashes (1 samples, 0.05%)</title><rect x="299.9" y="357" width="0.6" height="15.0" fill="rgb(254,118,24)" rx="2" ry="2" />
<text  x="302.95" y="367.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (78 samples, 3.82%)</title><rect x="17.5" y="485" width="45.1" height="15.0" fill="rgb(233,112,43)" rx="2" ry="2" />
<text  x="20.51" y="495.5" >bufi..</text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.15%)</title><rect x="211.0" y="437" width="1.7" height="15.0" fill="rgb(241,152,20)" rx="2" ry="2" />
<text  x="214.00" y="447.5" ></text>
</g>
<g >
<title>runtime.adjustctxt (2 samples, 0.10%)</title><rect x="159.0" y="133" width="1.2" height="15.0" fill="rgb(210,65,47)" rx="2" ry="2" />
<text  x="162.02" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="350.8" y="309" width="0.6" height="15.0" fill="rgb(225,137,39)" rx="2" ry="2" />
<text  x="353.77" y="319.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.05%)</title><rect x="1183.1" y="485" width="0.5" height="15.0" fill="rgb(248,225,2)" rx="2" ry="2" />
<text  x="1186.07" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.userType (2 samples, 0.10%)</title><rect x="149.2" y="325" width="1.2" height="15.0" fill="rgb(207,60,14)" rx="2" ry="2" />
<text  x="152.20" y="335.5" ></text>
</g>
<g >
<title>strings.TrimSuffix (1 samples, 0.05%)</title><rect x="299.4" y="341" width="0.5" height="15.0" fill="rgb(251,229,7)" rx="2" ry="2" />
<text  x="302.37" y="351.5" ></text>
</g>
<g >
<title>fmt.(*fmt).padString (1 samples, 0.05%)</title><rect x="298.8" y="261" width="0.6" height="15.0" fill="rgb(220,77,42)" rx="2" ry="2" />
<text  x="301.79" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot (26 samples, 1.27%)</title><rect x="1142.1" y="485" width="15.0" height="15.0" fill="rgb(246,112,53)" rx="2" ry="2" />
<text  x="1145.06" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (3 samples, 0.15%)</title><rect x="182.7" y="293" width="1.7" height="15.0" fill="rgb(241,169,54)" rx="2" ry="2" />
<text  x="185.70" y="303.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.05%)</title><rect x="206.4" y="373" width="0.6" height="15.0" fill="rgb(209,18,29)" rx="2" ry="2" />
<text  x="209.38" y="383.5" ></text>
</g>
<g >
<title>encoding/gob.(*encBuffer).WriteByte (1 samples, 0.05%)</title><rect x="126.7" y="213" width="0.5" height="15.0" fill="rgb(216,16,30)" rx="2" ry="2" />
<text  x="129.67" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (26 samples, 1.27%)</title><rect x="1142.1" y="533" width="15.0" height="15.0" fill="rgb(207,103,40)" rx="2" ry="2" />
<text  x="1145.06" y="543.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).Encode (54 samples, 2.64%)</title><rect x="108.2" y="453" width="31.2" height="15.0" fill="rgb(208,84,6)" rx="2" ry="2" />
<text  x="111.19" y="463.5" >en..</text>
</g>
<g >
<title>time.Now (2 samples, 0.10%)</title><rect x="341.5" y="389" width="1.2" height="15.0" fill="rgb(207,86,25)" rx="2" ry="2" />
<text  x="344.53" y="399.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.05%)</title><rect x="62.0" y="293" width="0.6" height="15.0" fill="rgb(216,117,47)" rx="2" ry="2" />
<text  x="64.98" y="303.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.10%)</title><rect x="211.0" y="293" width="1.2" height="15.0" fill="rgb(232,68,43)" rx="2" ry="2" />
<text  x="214.00" y="303.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Set (3 samples, 0.15%)</title><rect x="101.3" y="453" width="1.7" height="15.0" fill="rgb(219,9,26)" rx="2" ry="2" />
<text  x="104.26" y="463.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="393.5" y="389" width="0.6" height="15.0" fill="rgb(238,190,15)" rx="2" ry="2" />
<text  x="396.51" y="399.5" ></text>
</g>
<g >
<title>runtime.osyield (7 samples, 0.34%)</title><rect x="781.1" y="485" width="4.0" height="15.0" fill="rgb(232,21,45)" rx="2" ry="2" />
<text  x="784.07" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (3 samples, 0.15%)</title><rect x="194.8" y="197" width="1.8" height="15.0" fill="rgb(252,76,40)" rx="2" ry="2" />
<text  x="197.83" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.05%)</title><rect x="15.8" y="405" width="0.6" height="15.0" fill="rgb(242,208,35)" rx="2" ry="2" />
<text  x="18.78" y="415.5" ></text>
</g>
<g >
<title>runtime.semasleep (343 samples, 16.79%)</title><rect x="448.4" y="501" width="198.1" height="15.0" fill="rgb(249,67,20)" rx="2" ry="2" />
<text  x="451.38" y="511.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="127.8" y="245" width="0.6" height="15.0" fill="rgb(216,214,36)" rx="2" ry="2" />
<text  x="130.83" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.05%)</title><rect x="205.2" y="213" width="0.6" height="15.0" fill="rgb(241,163,32)" rx="2" ry="2" />
<text  x="208.22" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.10%)</title><rect x="1188.3" y="453" width="1.1" height="15.0" fill="rgb(230,220,37)" rx="2" ry="2" />
<text  x="1191.27" y="463.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.05%)</title><rect x="129.0" y="245" width="0.6" height="15.0" fill="rgb(217,96,54)" rx="2" ry="2" />
<text  x="131.98" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.05%)</title><rect x="267.6" y="405" width="0.6" height="15.0" fill="rgb(234,145,53)" rx="2" ry="2" />
<text  x="270.60" y="415.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (2 samples, 0.10%)</title><rect x="153.2" y="245" width="1.2" height="15.0" fill="rgb(254,176,9)" rx="2" ry="2" />
<text  x="156.24" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend1 (6 samples, 0.29%)</title><rect x="103.6" y="453" width="3.4" height="15.0" fill="rgb(227,18,5)" rx="2" ry="2" />
<text  x="106.57" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.15%)</title><rect x="350.2" y="389" width="1.7" height="15.0" fill="rgb(220,82,17)" rx="2" ry="2" />
<text  x="353.20" y="399.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="289.0" y="357" width="0.5" height="15.0" fill="rgb(249,211,44)" rx="2" ry="2" />
<text  x="291.97" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="151.5" y="277" width="0.6" height="15.0" fill="rgb(235,79,38)" rx="2" ry="2" />
<text  x="154.51" y="287.5" ></text>
</g>
<g >
<title>sort.Sort (1 samples, 0.05%)</title><rect x="72.4" y="437" width="0.6" height="15.0" fill="rgb(216,189,15)" rx="2" ry="2" />
<text  x="75.38" y="447.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.05%)</title><rect x="402.8" y="373" width="0.5" height="15.0" fill="rgb(208,102,39)" rx="2" ry="2" />
<text  x="405.76" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.05%)</title><rect x="300.5" y="69" width="0.6" height="15.0" fill="rgb(215,77,42)" rx="2" ry="2" />
<text  x="303.52" y="79.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.15%)</title><rect x="786.3" y="469" width="1.7" height="15.0" fill="rgb(218,38,7)" rx="2" ry="2" />
<text  x="789.27" y="479.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.10%)</title><rect x="785.1" y="517" width="1.2" height="15.0" fill="rgb(252,36,13)" rx="2" ry="2" />
<text  x="788.12" y="527.5" ></text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="200.6" y="293" width="0.6" height="15.0" fill="rgb(233,39,54)" rx="2" ry="2" />
<text  x="203.60" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="15.8" y="485" width="0.6" height="15.0" fill="rgb(212,131,9)" rx="2" ry="2" />
<text  x="18.78" y="495.5" ></text>
</g>
<g >
<title>runtime.copystack (29 samples, 1.42%)</title><rect x="763.7" y="533" width="16.8" height="15.0" fill="rgb(207,98,53)" rx="2" ry="2" />
<text  x="766.74" y="543.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.05%)</title><rect x="183.9" y="261" width="0.5" height="15.0" fill="rgb(251,160,46)" rx="2" ry="2" />
<text  x="186.85" y="271.5" ></text>
</g>
<g >
<title>syscall.accept (1 samples, 0.05%)</title><rect x="401.6" y="373" width="0.6" height="15.0" fill="rgb(223,53,7)" rx="2" ry="2" />
<text  x="404.60" y="383.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="341.0" y="389" width="0.5" height="15.0" fill="rgb(225,110,6)" rx="2" ry="2" />
<text  x="343.95" y="399.5" ></text>
</g>
<g >
<title>net/http.tcpKeepAliveListener.Accept (4 samples, 0.20%)</title><rect x="401.6" y="485" width="2.3" height="15.0" fill="rgb(225,77,12)" rx="2" ry="2" />
<text  x="404.60" y="495.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.05%)</title><rect x="98.9" y="453" width="0.6" height="15.0" fill="rgb(232,176,53)" rx="2" ry="2" />
<text  x="101.95" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compatibleType (2 samples, 0.10%)</title><rect x="149.2" y="341" width="1.2" height="15.0" fill="rgb(212,108,45)" rx="2" ry="2" />
<text  x="152.20" y="351.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.05%)</title><rect x="194.2" y="293" width="0.6" height="15.0" fill="rgb(225,227,10)" rx="2" ry="2" />
<text  x="197.25" y="303.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.05%)</title><rect x="392.9" y="373" width="0.6" height="15.0" fill="rgb(246,56,40)" rx="2" ry="2" />
<text  x="395.94" y="383.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).fireHooks (3 samples, 0.15%)</title><rect x="291.3" y="389" width="1.7" height="15.0" fill="rgb(230,46,9)" rx="2" ry="2" />
<text  x="294.28" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="202.3" y="197" width="0.6" height="15.0" fill="rgb(211,162,16)" rx="2" ry="2" />
<text  x="205.33" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.05%)</title><rect x="645.3" y="469" width="0.6" height="15.0" fill="rgb(232,76,1)" rx="2" ry="2" />
<text  x="648.34" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendType (24 samples, 1.17%)</title><rect x="109.3" y="341" width="13.9" height="15.0" fill="rgb(244,228,44)" rx="2" ry="2" />
<text  x="112.34" y="351.5" ></text>
</g>
<g >
<title>context.WithCancel (1 samples, 0.05%)</title><rect x="14.6" y="533" width="0.6" height="15.0" fill="rgb(231,222,52)" rx="2" ry="2" />
<text  x="17.62" y="543.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.05%)</title><rect x="293.0" y="325" width="0.6" height="15.0" fill="rgb(217,0,23)" rx="2" ry="2" />
<text  x="296.02" y="335.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (35 samples, 1.71%)</title><rect x="77.0" y="517" width="20.2" height="15.0" fill="rgb(217,57,4)" rx="2" ry="2" />
<text  x="80.00" y="527.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (1 samples, 0.05%)</title><rect x="98.4" y="453" width="0.5" height="15.0" fill="rgb(231,73,53)" rx="2" ry="2" />
<text  x="101.37" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (24 samples, 1.17%)</title><rect x="357.1" y="517" width="13.9" height="15.0" fill="rgb(232,52,0)" rx="2" ry="2" />
<text  x="360.13" y="527.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.10%)</title><rect x="289.0" y="469" width="1.1" height="15.0" fill="rgb(216,93,44)" rx="2" ry="2" />
<text  x="291.97" y="479.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.20%)</title><rect x="1186.0" y="469" width="2.3" height="15.0" fill="rgb(249,184,36)" rx="2" ry="2" />
<text  x="1188.96" y="479.5" ></text>
</g>
<g >
<title>runtime.syscall (1 samples, 0.05%)</title><rect x="380.2" y="549" width="0.6" height="15.0" fill="rgb(229,66,33)" rx="2" ry="2" />
<text  x="383.23" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (7 samples, 0.34%)</title><rect x="371.6" y="437" width="4.0" height="15.0" fill="rgb(223,24,30)" rx="2" ry="2" />
<text  x="374.57" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="343.8" y="405" width="0.6" height="15.0" fill="rgb(214,9,28)" rx="2" ry="2" />
<text  x="346.84" y="415.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (23 samples, 1.13%)</title><rect x="158.4" y="213" width="13.3" height="15.0" fill="rgb(226,143,25)" rx="2" ry="2" />
<text  x="161.44" y="223.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.10%)</title><rect x="213.9" y="357" width="1.1" height="15.0" fill="rgb(228,86,38)" rx="2" ry="2" />
<text  x="216.89" y="367.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.05%)</title><rect x="371.6" y="341" width="0.5" height="15.0" fill="rgb(251,37,43)" rx="2" ry="2" />
<text  x="374.57" y="351.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="178.7" y="293" width="0.5" height="15.0" fill="rgb(219,58,24)" rx="2" ry="2" />
<text  x="181.65" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="139.4" y="421" width="0.6" height="15.0" fill="rgb(230,43,30)" rx="2" ry="2" />
<text  x="142.38" y="431.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encode (17 samples, 0.83%)</title><rect x="123.8" y="373" width="9.8" height="15.0" fill="rgb(239,111,14)" rx="2" ry="2" />
<text  x="126.78" y="383.5" ></text>
</g>
<g >
<title>encoding/gob.userType (3 samples, 0.15%)</title><rect x="173.5" y="277" width="1.7" height="15.0" fill="rgb(227,133,30)" rx="2" ry="2" />
<text  x="176.46" y="287.5" ></text>
</g>
<g >
<title>net.newTCPConn (1 samples, 0.05%)</title><rect x="403.3" y="437" width="0.6" height="15.0" fill="rgb(249,148,45)" rx="2" ry="2" />
<text  x="406.33" y="447.5" ></text>
</g>
<g >
<title>runtime.scang (28 samples, 1.37%)</title><rect x="383.7" y="469" width="16.2" height="15.0" fill="rgb(240,77,4)" rx="2" ry="2" />
<text  x="386.70" y="479.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (2 samples, 0.10%)</title><rect x="73.5" y="453" width="1.2" height="15.0" fill="rgb(212,150,45)" rx="2" ry="2" />
<text  x="76.53" y="463.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (1 samples, 0.05%)</title><rect x="403.9" y="453" width="0.6" height="15.0" fill="rgb(214,58,51)" rx="2" ry="2" />
<text  x="406.91" y="463.5" ></text>
</g>
<g >
<title>bytes.makeSlice (5 samples, 0.24%)</title><rect x="116.9" y="261" width="2.8" height="15.0" fill="rgb(218,192,53)" rx="2" ry="2" />
<text  x="119.85" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="145.7" y="213" width="0.6" height="15.0" fill="rgb(224,28,17)" rx="2" ry="2" />
<text  x="148.73" y="223.5" ></text>
</g>
<g >
<title>encoding/gob.(*encoderState).update (1 samples, 0.05%)</title><rect x="128.4" y="261" width="0.6" height="15.0" fill="rgb(217,114,1)" rx="2" ry="2" />
<text  x="131.40" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.05%)</title><rect x="198.3" y="165" width="0.6" height="15.0" fill="rgb(205,94,18)" rx="2" ry="2" />
<text  x="201.29" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.10%)</title><rect x="172.3" y="245" width="1.2" height="15.0" fill="rgb(208,208,10)" rx="2" ry="2" />
<text  x="175.30" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="102.4" y="437" width="0.6" height="15.0" fill="rgb(252,229,23)" rx="2" ry="2" />
<text  x="105.41" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.20%)</title><rect x="74.7" y="453" width="2.3" height="15.0" fill="rgb(232,206,54)" rx="2" ry="2" />
<text  x="77.69" y="463.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (5 samples, 0.24%)</title><rect x="387.2" y="405" width="2.8" height="15.0" fill="rgb(228,71,22)" rx="2" ry="2" />
<text  x="390.16" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="142.8" y="341" width="1.2" height="15.0" fill="rgb(254,147,44)" rx="2" ry="2" />
<text  x="145.84" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="290.7" y="341" width="0.6" height="15.0" fill="rgb(250,28,24)" rx="2" ry="2" />
<text  x="293.70" y="351.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (2 samples, 0.10%)</title><rect x="293.6" y="309" width="1.1" height="15.0" fill="rgb(244,109,16)" rx="2" ry="2" />
<text  x="296.59" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).Read (32 samples, 1.57%)</title><rect x="357.1" y="549" width="18.5" height="15.0" fill="rgb(226,95,45)" rx="2" ry="2" />
<text  x="360.13" y="559.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.05%)</title><rect x="15.8" y="421" width="0.6" height="15.0" fill="rgb(237,19,49)" rx="2" ry="2" />
<text  x="18.78" y="431.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.05%)</title><rect x="389.5" y="373" width="0.5" height="15.0" fill="rgb(236,198,4)" rx="2" ry="2" />
<text  x="392.47" y="383.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1180.2" y="357" width="0.6" height="15.0" fill="rgb(246,181,44)" rx="2" ry="2" />
<text  x="1183.18" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="343.3" y="341" width="0.5" height="15.0" fill="rgb(215,98,41)" rx="2" ry="2" />
<text  x="346.26" y="351.5" ></text>
</g>
<g >
<title>EntryTask/rpc/codec.Encode (62 samples, 3.03%)</title><rect x="107.0" y="469" width="35.8" height="15.0" fill="rgb(221,74,15)" rx="2" ry="2" />
<text  x="110.03" y="479.5" >Ent..</text>
</g>
<g >
<title>runtime.hashGrow (1 samples, 0.05%)</title><rect x="208.7" y="373" width="0.6" height="15.0" fill="rgb(213,110,26)" rx="2" ry="2" />
<text  x="211.69" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="68.3" y="517" width="0.6" height="15.0" fill="rgb(254,17,35)" rx="2" ry="2" />
<text  x="71.34" y="527.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="1183.6" y="501" width="0.6" height="15.0" fill="rgb(236,27,27)" rx="2" ry="2" />
<text  x="1186.65" y="511.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (8 samples, 0.39%)</title><rect x="72.4" y="517" width="4.6" height="15.0" fill="rgb(218,45,1)" rx="2" ry="2" />
<text  x="75.38" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="179.2" y="261" width="0.6" height="15.0" fill="rgb(229,16,45)" rx="2" ry="2" />
<text  x="182.23" y="271.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.05%)</title><rect x="211.0" y="213" width="0.6" height="15.0" fill="rgb(229,86,17)" rx="2" ry="2" />
<text  x="214.00" y="223.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (1 samples, 0.05%)</title><rect x="371.6" y="357" width="0.5" height="15.0" fill="rgb(252,215,18)" rx="2" ry="2" />
<text  x="374.57" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.05%)</title><rect x="207.0" y="165" width="0.5" height="15.0" fill="rgb(221,36,28)" rx="2" ry="2" />
<text  x="209.96" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="140.0" y="421" width="1.1" height="15.0" fill="rgb(252,165,20)" rx="2" ry="2" />
<text  x="142.96" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.05%)</title><rect x="207.0" y="229" width="0.5" height="15.0" fill="rgb(214,130,24)" rx="2" ry="2" />
<text  x="209.96" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.10%)</title><rect x="68.9" y="501" width="1.2" height="15.0" fill="rgb(229,41,54)" rx="2" ry="2" />
<text  x="71.91" y="511.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (2 samples, 0.10%)</title><rect x="176.9" y="277" width="1.2" height="15.0" fill="rgb(223,151,35)" rx="2" ry="2" />
<text  x="179.92" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="209.8" y="389" width="0.6" height="15.0" fill="rgb(252,41,27)" rx="2" ry="2" />
<text  x="212.84" y="399.5" ></text>
</g>
<g >
<title>reflect.unsafe_NewArray (2 samples, 0.10%)</title><rect x="197.7" y="213" width="1.2" height="15.0" fill="rgb(214,82,45)" rx="2" ry="2" />
<text  x="200.71" y="223.5" ></text>
</g>
<g >
<title>sort.insertionSort (1 samples, 0.05%)</title><rect x="72.4" y="405" width="0.6" height="15.0" fill="rgb(237,185,12)" rx="2" ry="2" />
<text  x="75.38" y="415.5" ></text>
</g>
<g >
<title>encoding/gob.decString (1 samples, 0.05%)</title><rect x="199.4" y="325" width="0.6" height="15.0" fill="rgb(244,215,35)" rx="2" ry="2" />
<text  x="202.45" y="335.5" ></text>
</g>
<g >
<title>runtime.lock (10 samples, 0.49%)</title><rect x="788.0" y="485" width="5.8" height="15.0" fill="rgb(244,104,22)" rx="2" ry="2" />
<text  x="791.00" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="66.0" y="501" width="0.6" height="15.0" fill="rgb(245,44,12)" rx="2" ry="2" />
<text  x="69.03" y="511.5" ></text>
</g>
<g >
<title>runtime.convT2E (3 samples, 0.15%)</title><rect x="211.0" y="453" width="1.7" height="15.0" fill="rgb(207,31,6)" rx="2" ry="2" />
<text  x="214.00" y="463.5" ></text>
</g>
<g >
<title>runtime.markBits.setMarked (1 samples, 0.05%)</title><rect x="266.4" y="309" width="0.6" height="15.0" fill="rgb(225,134,27)" rx="2" ry="2" />
<text  x="269.45" y="319.5" ></text>
</g>
<g >
<title>syscall.Read (76 samples, 3.72%)</title><rect x="18.7" y="373" width="43.9" height="15.0" fill="rgb(211,128,17)" rx="2" ry="2" />
<text  x="21.66" y="383.5" >sysc..</text>
</g>
<g >
<title>runtime.rawstring (1 samples, 0.05%)</title><rect x="157.9" y="181" width="0.5" height="15.0" fill="rgb(219,205,4)" rx="2" ry="2" />
<text  x="160.86" y="191.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.05%)</title><rect x="134.2" y="277" width="0.6" height="15.0" fill="rgb(250,198,36)" rx="2" ry="2" />
<text  x="137.18" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.29%)</title><rect x="372.1" y="421" width="3.5" height="15.0" fill="rgb(247,3,21)" rx="2" ry="2" />
<text  x="375.14" y="431.5" ></text>
</g>
<g >
<title>net.(*netFD).accept (3 samples, 0.15%)</title><rect x="401.6" y="437" width="1.7" height="15.0" fill="rgb(244,23,21)" rx="2" ry="2" />
<text  x="404.60" y="447.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (443 samples, 21.68%)</title><rect x="100.1" y="549" width="255.9" height="15.0" fill="rgb(208,158,8)" rx="2" ry="2" />
<text  x="103.10" y="559.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="1156.5" y="357" width="0.6" height="15.0" fill="rgb(243,127,14)" rx="2" ry="2" />
<text  x="1159.50" y="367.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1183.6" y="485" width="0.6" height="15.0" fill="rgb(225,5,11)" rx="2" ry="2" />
<text  x="1186.65" y="495.5" ></text>
</g>
<g >
<title>EntryTask/rpc/codec.ResDecode (122 samples, 5.97%)</title><rect x="142.8" y="469" width="70.5" height="15.0" fill="rgb(250,138,21)" rx="2" ry="2" />
<text  x="145.84" y="479.5" >EntryTa..</text>
</g>
<g >
<title>syscall.syscall (75 samples, 3.67%)</title><rect x="19.2" y="341" width="43.4" height="15.0" fill="rgb(227,156,18)" rx="2" ry="2" />
<text  x="22.24" y="351.5" >sysc..</text>
</g>
<g >
<title>encoding/gob.NewEncoder (3 samples, 0.15%)</title><rect x="139.4" y="453" width="1.7" height="15.0" fill="rgb(222,20,35)" rx="2" ry="2" />
<text  x="142.38" y="463.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.05%)</title><rect x="184.4" y="261" width="0.6" height="15.0" fill="rgb(219,199,52)" rx="2" ry="2" />
<text  x="187.43" y="271.5" ></text>
</g>
<g >
<title>runtime.stopm (52 samples, 2.55%)</title><rect x="732.0" y="501" width="30.0" height="15.0" fill="rgb(217,156,34)" rx="2" ry="2" />
<text  x="734.98" y="511.5" >ru..</text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="150.9" y="277" width="0.6" height="15.0" fill="rgb(239,46,20)" rx="2" ry="2" />
<text  x="153.93" y="287.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.05%)</title><rect x="357.7" y="485" width="0.6" height="15.0" fill="rgb(219,103,10)" rx="2" ry="2" />
<text  x="360.70" y="495.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (1 samples, 0.05%)</title><rect x="288.4" y="469" width="0.6" height="15.0" fill="rgb(223,167,45)" rx="2" ry="2" />
<text  x="291.39" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="147.5" y="309" width="0.5" height="15.0" fill="rgb(244,222,8)" rx="2" ry="2" />
<text  x="150.46" y="319.5" ></text>
</g>
<g >
<title>reflect.MakeSlice (2 samples, 0.10%)</title><rect x="197.7" y="229" width="1.2" height="15.0" fill="rgb(235,225,0)" rx="2" ry="2" />
<text  x="200.71" y="239.5" ></text>
</g>
<g >
<title>encoding/gob.(*decoderState).getLength (2 samples, 0.10%)</title><rect x="194.8" y="165" width="1.2" height="15.0" fill="rgb(248,229,17)" rx="2" ry="2" />
<text  x="197.83" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="109.3" y="85" width="0.6" height="15.0" fill="rgb(232,76,27)" rx="2" ry="2" />
<text  x="112.34" y="95.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Lock (1 samples, 0.05%)</title><rect x="293.0" y="373" width="0.6" height="15.0" fill="rgb(239,178,6)" rx="2" ry="2" />
<text  x="296.02" y="383.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.05%)</title><rect x="73.0" y="437" width="0.5" height="15.0" fill="rgb(252,10,43)" rx="2" ry="2" />
<text  x="75.96" y="447.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*TextFormatter).printColored (6 samples, 0.29%)</title><rect x="296.5" y="357" width="3.4" height="15.0" fill="rgb(221,188,13)" rx="2" ry="2" />
<text  x="299.48" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="300.5" y="309" width="0.6" height="15.0" fill="rgb(251,20,31)" rx="2" ry="2" />
<text  x="303.52" y="319.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.05%)</title><rect x="349.6" y="373" width="0.6" height="15.0" fill="rgb(249,203,47)" rx="2" ry="2" />
<text  x="352.62" y="383.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="198.9" y="277" width="0.5" height="15.0" fill="rgb(227,58,49)" rx="2" ry="2" />
<text  x="201.87" y="287.5" ></text>
</g>
<g >
<title>syscall.Write (34 samples, 1.66%)</title><rect x="77.6" y="453" width="19.6" height="15.0" fill="rgb(216,128,49)" rx="2" ry="2" />
<text  x="80.58" y="463.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.05%)</title><rect x="196.6" y="149" width="0.5" height="15.0" fill="rgb(210,173,6)" rx="2" ry="2" />
<text  x="199.56" y="159.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (1 samples, 0.05%)</title><rect x="288.4" y="437" width="0.6" height="15.0" fill="rgb(228,171,25)" rx="2" ry="2" />
<text  x="291.39" y="447.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.15%)</title><rect x="399.9" y="501" width="1.7" height="15.0" fill="rgb(232,41,8)" rx="2" ry="2" />
<text  x="402.87" y="511.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.05%)</title><rect x="339.8" y="309" width="0.6" height="15.0" fill="rgb(214,109,37)" rx="2" ry="2" />
<text  x="342.80" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.FieldByIndex (1 samples, 0.05%)</title><rect x="196.0" y="181" width="0.6" height="15.0" fill="rgb(232,199,40)" rx="2" ry="2" />
<text  x="198.98" y="191.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.05%)</title><rect x="134.2" y="293" width="0.6" height="15.0" fill="rgb(211,180,37)" rx="2" ry="2" />
<text  x="137.18" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="136.5" y="325" width="0.6" height="15.0" fill="rgb(239,166,41)" rx="2" ry="2" />
<text  x="139.49" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="14.6" y="517" width="0.6" height="15.0" fill="rgb(211,176,47)" rx="2" ry="2" />
<text  x="17.62" y="527.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (3 samples, 0.15%)</title><rect x="350.2" y="421" width="1.7" height="15.0" fill="rgb(231,155,54)" rx="2" ry="2" />
<text  x="353.20" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.15%)</title><rect x="347.3" y="437" width="1.7" height="15.0" fill="rgb(210,32,20)" rx="2" ry="2" />
<text  x="350.31" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="118.6" y="229" width="1.1" height="15.0" fill="rgb(218,83,41)" rx="2" ry="2" />
<text  x="121.59" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Field (2 samples, 0.10%)</title><rect x="120.3" y="309" width="1.2" height="15.0" fill="rgb(236,41,37)" rx="2" ry="2" />
<text  x="123.32" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (194 samples, 9.50%)</title><rect x="651.1" y="517" width="112.1" height="15.0" fill="rgb(237,124,4)" rx="2" ry="2" />
<text  x="654.12" y="527.5" >runtime.findr..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.05%)</title><rect x="196.6" y="69" width="0.5" height="15.0" fill="rgb(230,154,50)" rx="2" ry="2" />
<text  x="199.56" y="79.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).Log (90 samples, 4.41%)</title><rect x="290.7" y="421" width="52.0" height="15.0" fill="rgb(225,103,20)" rx="2" ry="2" />
<text  x="293.70" y="431.5" >githu..</text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.05%)</title><rect x="401.0" y="485" width="0.6" height="15.0" fill="rgb(226,8,15)" rx="2" ry="2" />
<text  x="404.02" y="495.5" ></text>
</g>
<g >
<title>runtime.stackalloc (16 samples, 0.78%)</title><rect x="1157.1" y="405" width="9.2" height="15.0" fill="rgb(247,214,44)" rx="2" ry="2" />
<text  x="1160.08" y="415.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.05%)</title><rect x="211.0" y="261" width="0.6" height="15.0" fill="rgb(231,156,19)" rx="2" ry="2" />
<text  x="214.00" y="271.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.05%)</title><rect x="300.5" y="181" width="0.6" height="15.0" fill="rgb(253,73,30)" rx="2" ry="2" />
<text  x="303.52" y="191.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.05%)</title><rect x="287.8" y="453" width="0.6" height="15.0" fill="rgb(235,10,39)" rx="2" ry="2" />
<text  x="290.82" y="463.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="351.4" y="213" width="0.5" height="15.0" fill="rgb(226,167,19)" rx="2" ry="2" />
<text  x="354.35" y="223.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.15%)</title><rect x="167.7" y="117" width="1.7" height="15.0" fill="rgb(236,0,41)" rx="2" ry="2" />
<text  x="170.68" y="127.5" ></text>
</g>
<g >
<title>reflect.Value.Index (2 samples, 0.10%)</title><rect x="146.3" y="277" width="1.2" height="15.0" fill="rgb(210,191,8)" rx="2" ry="2" />
<text  x="149.31" y="287.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (95 samples, 4.65%)</title><rect x="14.0" y="549" width="54.9" height="15.0" fill="rgb(249,174,26)" rx="2" ry="2" />
<text  x="17.04" y="559.5" >net/h..</text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="650.5" y="533" width="0.6" height="15.0" fill="rgb(235,36,9)" rx="2" ry="2" />
<text  x="653.54" y="543.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.10%)</title><rect x="1188.3" y="437" width="1.1" height="15.0" fill="rgb(234,11,48)" rx="2" ry="2" />
<text  x="1191.27" y="447.5" ></text>
</g>
<g >
<title>reflect.(*structType).FieldByName (1 samples, 0.05%)</title><rect x="203.5" y="293" width="0.6" height="15.0" fill="rgb(207,72,44)" rx="2" ry="2" />
<text  x="206.49" y="303.5" ></text>
</g>
<g >
<title>net/http.readCookies (4 samples, 0.20%)</title><rect x="343.3" y="469" width="2.3" height="15.0" fill="rgb(217,152,42)" rx="2" ry="2" />
<text  x="346.26" y="479.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1183.1" y="469" width="0.5" height="15.0" fill="rgb(235,166,37)" rx="2" ry="2" />
<text  x="1186.07" y="479.5" ></text>
</g>
<g >
<title>runtime.acquirem (2 samples, 0.10%)</title><rect x="189.1" y="261" width="1.1" height="15.0" fill="rgb(241,46,45)" rx="2" ry="2" />
<text  x="192.05" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="1187.7" y="437" width="0.6" height="15.0" fill="rgb(207,163,40)" rx="2" ry="2" />
<text  x="1190.69" y="447.5" ></text>
</g>
<g >
<title>reflect.(*structType).FieldByName (3 samples, 0.15%)</title><rect x="188.5" y="325" width="1.7" height="15.0" fill="rgb(238,91,27)" rx="2" ry="2" />
<text  x="191.47" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="343.3" y="405" width="0.5" height="15.0" fill="rgb(251,40,32)" rx="2" ry="2" />
<text  x="346.26" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="145.2" y="133" width="0.5" height="15.0" fill="rgb(237,100,9)" rx="2" ry="2" />
<text  x="148.15" y="143.5" ></text>
</g>
<g >
<title>syscall.syscall (34 samples, 1.66%)</title><rect x="77.6" y="421" width="19.6" height="15.0" fill="rgb(238,173,11)" rx="2" ry="2" />
<text  x="80.58" y="431.5" ></text>
</g>
<g >
<title>runtime.adjustframe (7 samples, 0.34%)</title><rect x="163.1" y="117" width="4.0" height="15.0" fill="rgb(211,17,41)" rx="2" ry="2" />
<text  x="166.06" y="127.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encode (26 samples, 1.27%)</title><rect x="108.8" y="421" width="15.0" height="15.0" fill="rgb(251,36,42)" rx="2" ry="2" />
<text  x="111.77" y="431.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeValue (10 samples, 0.49%)</title><rect x="199.4" y="357" width="5.8" height="15.0" fill="rgb(207,103,11)" rx="2" ry="2" />
<text  x="202.45" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (31 samples, 1.52%)</title><rect x="155.6" y="277" width="17.9" height="15.0" fill="rgb(239,143,29)" rx="2" ry="2" />
<text  x="158.55" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.10%)</title><rect x="785.1" y="501" width="1.2" height="15.0" fill="rgb(227,47,34)" rx="2" ry="2" />
<text  x="788.12" y="511.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.05%)</title><rect x="339.8" y="213" width="0.6" height="15.0" fill="rgb(213,77,12)" rx="2" ry="2" />
<text  x="342.80" y="223.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.05%)</title><rect x="141.7" y="421" width="0.6" height="15.0" fill="rgb(231,199,25)" rx="2" ry="2" />
<text  x="144.69" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="343.3" y="453" width="0.5" height="15.0" fill="rgb(233,119,7)" rx="2" ry="2" />
<text  x="346.26" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (8 samples, 0.39%)</title><rect x="371.0" y="533" width="4.6" height="15.0" fill="rgb(247,204,0)" rx="2" ry="2" />
<text  x="373.99" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="182.1" y="245" width="0.6" height="15.0" fill="rgb(229,223,27)" rx="2" ry="2" />
<text  x="185.12" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.10%)</title><rect x="181.0" y="309" width="1.1" height="15.0" fill="rgb(205,220,48)" rx="2" ry="2" />
<text  x="183.96" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).recvType (8 samples, 0.39%)</title><rect x="194.8" y="341" width="4.6" height="15.0" fill="rgb(251,189,34)" rx="2" ry="2" />
<text  x="197.83" y="351.5" ></text>
</g>
<g >
<title>syscall.read (21 samples, 1.03%)</title><rect x="358.9" y="485" width="12.1" height="15.0" fill="rgb(206,66,26)" rx="2" ry="2" />
<text  x="361.86" y="495.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.10%)</title><rect x="263.0" y="293" width="1.1" height="15.0" fill="rgb(210,204,29)" rx="2" ry="2" />
<text  x="265.98" y="303.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.20%)</title><rect x="647.7" y="501" width="2.3" height="15.0" fill="rgb(214,6,27)" rx="2" ry="2" />
<text  x="650.65" y="511.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="156.1" y="213" width="0.6" height="15.0" fill="rgb(207,191,13)" rx="2" ry="2" />
<text  x="159.13" y="223.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.05%)</title><rect x="66.6" y="533" width="0.6" height="15.0" fill="rgb(218,56,25)" rx="2" ry="2" />
<text  x="69.60" y="543.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1185.4" y="485" width="0.6" height="15.0" fill="rgb(235,45,27)" rx="2" ry="2" />
<text  x="1188.38" y="495.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (10 samples, 0.49%)</title><rect x="261.8" y="421" width="5.8" height="15.0" fill="rgb(216,158,21)" rx="2" ry="2" />
<text  x="264.83" y="431.5" ></text>
</g>
<g >
<title>runtime.scang (2 samples, 0.10%)</title><rect x="263.0" y="309" width="1.1" height="15.0" fill="rgb(211,18,24)" rx="2" ry="2" />
<text  x="265.98" y="319.5" ></text>
</g>
<g >
<title>runtime.interhash (2 samples, 0.10%)</title><rect x="11.2" y="485" width="1.1" height="15.0" fill="rgb(245,66,38)" rx="2" ry="2" />
<text  x="14.16" y="495.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.15%)</title><rect x="651.7" y="437" width="1.7" height="15.0" fill="rgb(252,91,8)" rx="2" ry="2" />
<text  x="654.69" y="447.5" ></text>
</g>
<g >
<title>EntryTask/internal/controller.setHttpHeader (3 samples, 0.15%)</title><rect x="101.3" y="485" width="1.7" height="15.0" fill="rgb(242,209,1)" rx="2" ry="2" />
<text  x="104.26" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (2 samples, 0.10%)</title><rect x="144.0" y="261" width="1.2" height="15.0" fill="rgb(246,131,1)" rx="2" ry="2" />
<text  x="147.00" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (5 samples, 0.24%)</title><rect x="387.2" y="421" width="2.8" height="15.0" fill="rgb(225,13,13)" rx="2" ry="2" />
<text  x="390.16" y="431.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.05%)</title><rect x="171.1" y="133" width="0.6" height="15.0" fill="rgb(218,152,16)" rx="2" ry="2" />
<text  x="174.15" y="143.5" ></text>
</g>
<g >
<title>encoding/gob.overflow (2 samples, 0.10%)</title><rect x="187.3" y="341" width="1.2" height="15.0" fill="rgb(244,16,35)" rx="2" ry="2" />
<text  x="190.32" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="1185.4" y="469" width="0.6" height="15.0" fill="rgb(223,42,31)" rx="2" ry="2" />
<text  x="1188.38" y="479.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.05%)</title><rect x="300.5" y="213" width="0.6" height="15.0" fill="rgb(231,53,29)" rx="2" ry="2" />
<text  x="303.52" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.10%)</title><rect x="1188.3" y="469" width="1.1" height="15.0" fill="rgb(248,167,15)" rx="2" ry="2" />
<text  x="1191.27" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="157.3" y="213" width="0.6" height="15.0" fill="rgb(238,49,0)" rx="2" ry="2" />
<text  x="160.28" y="223.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.05%)</title><rect x="300.5" y="197" width="0.6" height="15.0" fill="rgb(248,201,31)" rx="2" ry="2" />
<text  x="303.52" y="207.5" ></text>
</g>
<g >
<title>encoding/gob.encString (2 samples, 0.10%)</title><rect x="109.3" y="181" width="1.2" height="15.0" fill="rgb(230,58,22)" rx="2" ry="2" />
<text  x="112.34" y="191.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (2 samples, 0.10%)</title><rect x="72.4" y="453" width="1.1" height="15.0" fill="rgb(215,120,48)" rx="2" ry="2" />
<text  x="75.38" y="463.5" ></text>
</g>
<g >
<title>runtime.concatstrings (2 samples, 0.10%)</title><rect x="201.8" y="277" width="1.1" height="15.0" fill="rgb(251,103,10)" rx="2" ry="2" />
<text  x="204.76" y="287.5" ></text>
</g>
<g >
<title>bytes.makeSlice (1 samples, 0.05%)</title><rect x="295.3" y="325" width="0.6" height="15.0" fill="rgb(216,127,13)" rx="2" ry="2" />
<text  x="298.33" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*decoderState).decodeUint (1 samples, 0.05%)</title><rect x="195.4" y="149" width="0.6" height="15.0" fill="rgb(231,66,49)" rx="2" ry="2" />
<text  x="198.40" y="159.5" ></text>
</g>
<g >
<title>syscall.syscall (78 samples, 3.82%)</title><rect x="215.6" y="341" width="45.1" height="15.0" fill="rgb(211,91,43)" rx="2" ry="2" />
<text  x="218.62" y="351.5" >sysc..</text>
</g>
<g >
<title>reflect.Value.NumField (1 samples, 0.05%)</title><rect x="131.3" y="341" width="0.6" height="15.0" fill="rgb(246,56,0)" rx="2" ry="2" />
<text  x="134.29" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="145.2" y="229" width="1.1" height="15.0" fill="rgb(253,215,28)" rx="2" ry="2" />
<text  x="148.15" y="239.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).newEncoderState (1 samples, 0.05%)</title><rect x="127.8" y="277" width="0.6" height="15.0" fill="rgb(220,215,20)" rx="2" ry="2" />
<text  x="130.83" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.10%)</title><rect x="1188.3" y="485" width="1.1" height="15.0" fill="rgb(248,130,36)" rx="2" ry="2" />
<text  x="1191.27" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="154.4" y="213" width="0.6" height="15.0" fill="rgb(210,130,31)" rx="2" ry="2" />
<text  x="157.40" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (7 samples, 0.34%)</title><rect x="781.1" y="533" width="4.0" height="15.0" fill="rgb(211,16,13)" rx="2" ry="2" />
<text  x="784.07" y="543.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.10%)</title><rect x="762.0" y="485" width="1.2" height="15.0" fill="rgb(231,46,4)" rx="2" ry="2" />
<text  x="765.01" y="495.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.15%)</title><rect x="651.7" y="469" width="1.7" height="15.0" fill="rgb(236,43,17)" rx="2" ry="2" />
<text  x="654.69" y="479.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.05%)</title><rect x="371.6" y="373" width="0.5" height="15.0" fill="rgb(252,1,2)" rx="2" ry="2" />
<text  x="374.57" y="383.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (3 samples, 0.15%)</title><rect x="173.5" y="261" width="1.7" height="15.0" fill="rgb(237,208,38)" rx="2" ry="2" />
<text  x="176.46" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast32 (1 samples, 0.05%)</title><rect x="182.1" y="309" width="0.6" height="15.0" fill="rgb(227,116,44)" rx="2" ry="2" />
<text  x="185.12" y="319.5" ></text>
</g>
<g >
<title>runtime.morestack (29 samples, 1.42%)</title><rect x="763.7" y="565" width="16.8" height="15.0" fill="rgb(222,97,6)" rx="2" ry="2" />
<text  x="766.74" y="575.5" ></text>
</g>
<g >
<title>runtime.stackcacherelease (15 samples, 0.73%)</title><rect x="1148.4" y="373" width="8.7" height="15.0" fill="rgb(209,188,6)" rx="2" ry="2" />
<text  x="1151.41" y="383.5" ></text>
</g>
<g >
<title>runtime.save (2 samples, 0.10%)</title><rect x="286.7" y="341" width="1.1" height="15.0" fill="rgb(233,164,50)" rx="2" ry="2" />
<text  x="289.66" y="351.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.05%)</title><rect x="288.4" y="421" width="0.6" height="15.0" fill="rgb(213,0,12)" rx="2" ry="2" />
<text  x="291.39" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="157.9" y="133" width="0.5" height="15.0" fill="rgb(243,121,42)" rx="2" ry="2" />
<text  x="160.86" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.05%)</title><rect x="447.2" y="469" width="0.6" height="15.0" fill="rgb(238,29,17)" rx="2" ry="2" />
<text  x="450.23" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="204.6" y="293" width="0.6" height="15.0" fill="rgb(248,147,30)" rx="2" ry="2" />
<text  x="207.65" y="303.5" ></text>
</g>
<g >
<title>runtime.copystack (22 samples, 1.08%)</title><rect x="159.0" y="149" width="12.7" height="15.0" fill="rgb(247,166,5)" rx="2" ry="2" />
<text  x="162.02" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (1 samples, 0.05%)</title><rect x="202.3" y="149" width="0.6" height="15.0" fill="rgb(228,77,5)" rx="2" ry="2" />
<text  x="205.33" y="159.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.05%)</title><rect x="263.6" y="261" width="0.5" height="15.0" fill="rgb(244,199,8)" rx="2" ry="2" />
<text  x="266.56" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.15%)</title><rect x="776.5" y="453" width="1.7" height="15.0" fill="rgb(243,65,0)" rx="2" ry="2" />
<text  x="779.45" y="463.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.05%)</title><rect x="184.4" y="309" width="0.6" height="15.0" fill="rgb(214,72,10)" rx="2" ry="2" />
<text  x="187.43" y="319.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="152.7" y="261" width="0.5" height="15.0" fill="rgb(254,147,43)" rx="2" ry="2" />
<text  x="155.66" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="350.8" y="293" width="0.6" height="15.0" fill="rgb(251,54,11)" rx="2" ry="2" />
<text  x="353.77" y="303.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.05%)</title><rect x="351.4" y="261" width="0.5" height="15.0" fill="rgb(238,224,52)" rx="2" ry="2" />
<text  x="354.35" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.05%)</title><rect x="300.5" y="229" width="0.6" height="15.0" fill="rgb(223,56,11)" rx="2" ry="2" />
<text  x="303.52" y="239.5" ></text>
</g>
<g >
<title>os.(*File).Write (58 samples, 2.84%)</title><rect x="301.1" y="373" width="33.5" height="15.0" fill="rgb(237,177,31)" rx="2" ry="2" />
<text  x="304.10" y="383.5" >os..</text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.05%)</title><rect x="100.7" y="453" width="0.6" height="15.0" fill="rgb(244,153,24)" rx="2" ry="2" />
<text  x="103.68" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeSlice (6 samples, 0.29%)</title><rect x="144.0" y="309" width="3.5" height="15.0" fill="rgb(214,179,46)" rx="2" ry="2" />
<text  x="147.00" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Accept (3 samples, 0.15%)</title><rect x="401.6" y="421" width="1.7" height="15.0" fill="rgb(223,30,17)" rx="2" ry="2" />
<text  x="404.60" y="431.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.05%)</title><rect x="339.8" y="261" width="0.6" height="15.0" fill="rgb(244,155,6)" rx="2" ry="2" />
<text  x="342.80" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="154.4" y="133" width="0.6" height="15.0" fill="rgb(224,169,51)" rx="2" ry="2" />
<text  x="157.40" y="143.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (601 samples, 29.42%)</title><rect x="10.0" y="565" width="347.1" height="15.0" fill="rgb(250,41,11)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.findsghi (1 samples, 0.05%)</title><rect x="390.6" y="405" width="0.6" height="15.0" fill="rgb(254,19,22)" rx="2" ry="2" />
<text  x="393.63" y="415.5" ></text>
</g>
<g >
<title>runtime.notesleep (14 samples, 0.69%)</title><rect x="437.4" y="485" width="8.1" height="15.0" fill="rgb(240,24,28)" rx="2" ry="2" />
<text  x="440.41" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="207.0" y="341" width="0.5" height="15.0" fill="rgb(242,23,18)" rx="2" ry="2" />
<text  x="209.96" y="351.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (15 samples, 0.73%)</title><rect x="345.6" y="485" width="8.6" height="15.0" fill="rgb(231,177,11)" rx="2" ry="2" />
<text  x="348.58" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="207.0" y="357" width="0.5" height="15.0" fill="rgb(240,76,20)" rx="2" ry="2" />
<text  x="209.96" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (10 samples, 0.49%)</title><rect x="261.8" y="373" width="5.8" height="15.0" fill="rgb(226,175,7)" rx="2" ry="2" />
<text  x="264.83" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="207.0" y="245" width="0.5" height="15.0" fill="rgb(227,11,26)" rx="2" ry="2" />
<text  x="209.96" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.05%)</title><rect x="15.8" y="469" width="0.6" height="15.0" fill="rgb(206,214,32)" rx="2" ry="2" />
<text  x="18.78" y="479.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.05%)</title><rect x="1189.4" y="533" width="0.6" height="15.0" fill="rgb(242,121,27)" rx="2" ry="2" />
<text  x="1192.42" y="543.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (34 samples, 1.66%)</title><rect x="382.0" y="565" width="19.6" height="15.0" fill="rgb(206,147,26)" rx="2" ry="2" />
<text  x="384.96" y="575.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (2 samples, 0.10%)</title><rect x="68.9" y="549" width="1.2" height="15.0" fill="rgb(246,15,12)" rx="2" ry="2" />
<text  x="71.91" y="559.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (1 samples, 0.05%)</title><rect x="108.8" y="341" width="0.5" height="15.0" fill="rgb(242,54,7)" rx="2" ry="2" />
<text  x="111.77" y="351.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.05%)</title><rect x="147.5" y="277" width="0.5" height="15.0" fill="rgb(224,94,17)" rx="2" ry="2" />
<text  x="150.46" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.10%)</title><rect x="446.7" y="501" width="1.1" height="15.0" fill="rgb(254,172,32)" rx="2" ry="2" />
<text  x="449.65" y="511.5" ></text>
</g>
<g >
<title>strings.TrimFunc (2 samples, 0.10%)</title><rect x="344.4" y="437" width="1.2" height="15.0" fill="rgb(242,191,26)" rx="2" ry="2" />
<text  x="347.42" y="447.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.05%)</title><rect x="211.0" y="277" width="0.6" height="15.0" fill="rgb(217,7,3)" rx="2" ry="2" />
<text  x="214.00" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="64.3" y="469" width="0.6" height="15.0" fill="rgb(248,157,38)" rx="2" ry="2" />
<text  x="67.29" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (64 samples, 3.13%)</title><rect x="150.4" y="341" width="36.9" height="15.0" fill="rgb(227,145,26)" rx="2" ry="2" />
<text  x="153.35" y="351.5" >enc..</text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.05%)</title><rect x="200.6" y="229" width="0.6" height="15.0" fill="rgb(215,26,34)" rx="2" ry="2" />
<text  x="203.60" y="239.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (49 samples, 2.40%)</title><rect x="71.8" y="549" width="28.3" height="15.0" fill="rgb(248,13,15)" rx="2" ry="2" />
<text  x="74.80" y="559.5" >n..</text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.05%)</title><rect x="299.9" y="325" width="0.6" height="15.0" fill="rgb(228,1,27)" rx="2" ry="2" />
<text  x="302.95" y="335.5" ></text>
</g>
<g >
<title>runtime.mstart (709 samples, 34.70%)</title><rect x="780.5" y="565" width="409.5" height="15.0" fill="rgb(218,107,29)" rx="2" ry="2" />
<text  x="783.49" y="575.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.runqsteal (8 samples, 0.39%)</title><rect x="432.8" y="501" width="4.6" height="15.0" fill="rgb(219,16,10)" rx="2" ry="2" />
<text  x="435.79" y="511.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (1 samples, 0.05%)</title><rect x="100.7" y="437" width="0.6" height="15.0" fill="rgb(208,210,21)" rx="2" ry="2" />
<text  x="103.68" y="447.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.05%)</title><rect x="288.4" y="405" width="0.6" height="15.0" fill="rgb(216,131,45)" rx="2" ry="2" />
<text  x="291.39" y="415.5" ></text>
</g>
<g >
<title>net/http.(*response).WriteHeader (9 samples, 0.44%)</title><rect x="349.0" y="453" width="5.2" height="15.0" fill="rgb(220,122,5)" rx="2" ry="2" />
<text  x="352.04" y="463.5" ></text>
</g>
<g >
<title>runtime.osyield (14 samples, 0.69%)</title><rect x="1148.4" y="341" width="8.1" height="15.0" fill="rgb(241,153,3)" rx="2" ry="2" />
<text  x="1151.41" y="351.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.05%)</title><rect x="67.8" y="533" width="0.5" height="15.0" fill="rgb(246,113,17)" rx="2" ry="2" />
<text  x="70.76" y="543.5" ></text>
</g>
<g >
<title>encoding/gob.decString (2 samples, 0.10%)</title><rect x="194.8" y="181" width="1.2" height="15.0" fill="rgb(208,166,9)" rx="2" ry="2" />
<text  x="197.83" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.05%)</title><rect x="185.0" y="325" width="0.6" height="15.0" fill="rgb(225,130,7)" rx="2" ry="2" />
<text  x="188.01" y="335.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (4 samples, 0.20%)</title><rect x="72.4" y="485" width="2.3" height="15.0" fill="rgb(247,119,29)" rx="2" ry="2" />
<text  x="75.38" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="180.4" y="293" width="0.6" height="15.0" fill="rgb(215,145,50)" rx="2" ry="2" />
<text  x="183.39" y="303.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="447.2" y="453" width="0.6" height="15.0" fill="rgb(206,9,54)" rx="2" ry="2" />
<text  x="450.23" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="15.8" y="501" width="0.6" height="15.0" fill="rgb(223,91,26)" rx="2" ry="2" />
<text  x="18.78" y="511.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="150.9" y="245" width="0.6" height="15.0" fill="rgb(251,55,9)" rx="2" ry="2" />
<text  x="153.93" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.05%)</title><rect x="351.4" y="325" width="0.5" height="15.0" fill="rgb(214,123,2)" rx="2" ry="2" />
<text  x="354.35" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.05%)</title><rect x="98.4" y="373" width="0.5" height="15.0" fill="rgb(248,120,47)" rx="2" ry="2" />
<text  x="101.37" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="186.2" y="309" width="1.1" height="15.0" fill="rgb(240,160,36)" rx="2" ry="2" />
<text  x="189.16" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.Register (2 samples, 0.10%)</title><rect x="141.1" y="453" width="1.2" height="15.0" fill="rgb(214,128,3)" rx="2" ry="2" />
<text  x="144.11" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (35 samples, 1.71%)</title><rect x="267.6" y="421" width="20.2" height="15.0" fill="rgb(253,190,28)" rx="2" ry="2" />
<text  x="270.60" y="431.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.05%)</title><rect x="209.3" y="421" width="0.5" height="15.0" fill="rgb(243,64,16)" rx="2" ry="2" />
<text  x="212.27" y="431.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (77 samples, 3.77%)</title><rect x="18.1" y="405" width="44.5" height="15.0" fill="rgb(225,91,11)" rx="2" ry="2" />
<text  x="21.09" y="415.5" >net...</text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="198.9" y="293" width="0.5" height="15.0" fill="rgb(215,49,35)" rx="2" ry="2" />
<text  x="201.87" y="303.5" ></text>
</g>
<g >
<title>syscall.syscall (34 samples, 1.66%)</title><rect x="268.2" y="373" width="19.6" height="15.0" fill="rgb(238,39,1)" rx="2" ry="2" />
<text  x="271.18" y="383.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="646.5" y="517" width="0.6" height="15.0" fill="rgb(242,118,6)" rx="2" ry="2" />
<text  x="649.50" y="527.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.05%)</title><rect x="70.1" y="485" width="0.5" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="73.07" y="495.5" ></text>
</g>
<g >
<title>runtime.mapiternext (3 samples, 0.15%)</title><rect x="351.9" y="405" width="1.8" height="15.0" fill="rgb(226,78,40)" rx="2" ry="2" />
<text  x="354.93" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (3 samples, 0.15%)</title><rect x="97.8" y="485" width="1.7" height="15.0" fill="rgb(245,187,27)" rx="2" ry="2" />
<text  x="100.79" y="495.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.05%)</title><rect x="402.8" y="357" width="0.5" height="15.0" fill="rgb(224,123,22)" rx="2" ry="2" />
<text  x="405.76" y="367.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.05%)</title><rect x="113.4" y="165" width="0.6" height="15.0" fill="rgb(228,145,52)" rx="2" ry="2" />
<text  x="116.39" y="175.5" ></text>
</g>
<g >
<title>reflect.Value.Index (1 samples, 0.05%)</title><rect x="114.0" y="213" width="0.5" height="15.0" fill="rgb(247,56,0)" rx="2" ry="2" />
<text  x="116.96" y="223.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.05%)</title><rect x="153.2" y="213" width="0.6" height="15.0" fill="rgb(219,6,41)" rx="2" ry="2" />
<text  x="156.24" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.15%)</title><rect x="651.7" y="453" width="1.7" height="15.0" fill="rgb(222,127,32)" rx="2" ry="2" />
<text  x="654.69" y="463.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (2 samples, 0.10%)</title><rect x="101.3" y="437" width="1.1" height="15.0" fill="rgb(224,165,33)" rx="2" ry="2" />
<text  x="104.26" y="447.5" ></text>
</g>
<g >
<title>runtime.stackcacherelease (25 samples, 1.22%)</title><rect x="1166.3" y="389" width="14.5" height="15.0" fill="rgb(241,189,41)" rx="2" ry="2" />
<text  x="1169.32" y="399.5" ></text>
</g>
<g >
<title>runtime.aeshash32 (1 samples, 0.05%)</title><rect x="152.1" y="261" width="0.6" height="15.0" fill="rgb(240,128,53)" rx="2" ry="2" />
<text  x="155.09" y="271.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="181.5" y="293" width="0.6" height="15.0" fill="rgb(224,21,28)" rx="2" ry="2" />
<text  x="184.54" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.05%)</title><rect x="762.6" y="469" width="0.6" height="15.0" fill="rgb(228,190,9)" rx="2" ry="2" />
<text  x="765.59" y="479.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encode (13 samples, 0.64%)</title><rect x="109.3" y="309" width="7.6" height="15.0" fill="rgb(207,185,27)" rx="2" ry="2" />
<text  x="112.34" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.05%)</title><rect x="300.5" y="245" width="0.6" height="15.0" fill="rgb(228,13,2)" rx="2" ry="2" />
<text  x="303.52" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (420 samples, 20.56%)</title><rect x="404.5" y="549" width="242.6" height="15.0" fill="rgb(224,40,4)" rx="2" ry="2" />
<text  x="407.49" y="559.5" >runtime.exitsyscall0</text>
</g>
<g >
<title>net/http.Header.clone (8 samples, 0.39%)</title><rect x="349.6" y="437" width="4.6" height="15.0" fill="rgb(253,35,7)" rx="2" ry="2" />
<text  x="352.62" y="447.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.05%)</title><rect x="1183.1" y="453" width="0.5" height="15.0" fill="rgb(216,59,37)" rx="2" ry="2" />
<text  x="1186.07" y="463.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.10%)</title><rect x="293.6" y="261" width="1.1" height="15.0" fill="rgb(220,2,26)" rx="2" ry="2" />
<text  x="296.59" y="271.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.05%)</title><rect x="118.0" y="245" width="0.6" height="15.0" fill="rgb(239,206,44)" rx="2" ry="2" />
<text  x="121.01" y="255.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeValue (85 samples, 4.16%)</title><rect x="144.0" y="389" width="49.1" height="15.0" fill="rgb(237,33,41)" rx="2" ry="2" />
<text  x="147.00" y="399.5" >enco..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="178.1" y="245" width="0.6" height="15.0" fill="rgb(231,4,33)" rx="2" ry="2" />
<text  x="181.08" y="255.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*Entry).write (72 samples, 3.52%)</title><rect x="293.0" y="389" width="41.6" height="15.0" fill="rgb(241,36,22)" rx="2" ry="2" />
<text  x="296.02" y="399.5" >git..</text>
</g>
<g >
<title>runtime.growWork (1 samples, 0.05%)</title><rect x="208.1" y="373" width="0.6" height="15.0" fill="rgb(236,162,48)" rx="2" ry="2" />
<text  x="211.11" y="383.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.05%)</title><rect x="157.9" y="85" width="0.5" height="15.0" fill="rgb(235,172,31)" rx="2" ry="2" />
<text  x="160.86" y="95.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.20%)</title><rect x="1186.0" y="501" width="2.3" height="15.0" fill="rgb(211,163,51)" rx="2" ry="2" />
<text  x="1188.96" y="511.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (24 samples, 1.17%)</title><rect x="357.1" y="533" width="13.9" height="15.0" fill="rgb(213,179,31)" rx="2" ry="2" />
<text  x="360.13" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="343.3" y="357" width="0.5" height="15.0" fill="rgb(246,97,14)" rx="2" ry="2" />
<text  x="346.26" y="367.5" ></text>
</g>
<g >
<title>reflect.Value.Field (1 samples, 0.05%)</title><rect x="129.6" y="261" width="0.5" height="15.0" fill="rgb(205,46,10)" rx="2" ry="2" />
<text  x="132.56" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="205.8" y="357" width="0.6" height="15.0" fill="rgb(229,111,30)" rx="2" ry="2" />
<text  x="208.80" y="367.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.05%)</title><rect x="157.9" y="53" width="0.5" height="15.0" fill="rgb(249,199,4)" rx="2" ry="2" />
<text  x="160.86" y="63.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="341.0" y="357" width="0.5" height="15.0" fill="rgb(234,64,13)" rx="2" ry="2" />
<text  x="343.95" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).readMessage (1 samples, 0.05%)</title><rect x="194.2" y="325" width="0.6" height="15.0" fill="rgb(231,179,28)" rx="2" ry="2" />
<text  x="197.25" y="335.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.10%)</title><rect x="1184.2" y="469" width="1.2" height="15.0" fill="rgb(229,69,53)" rx="2" ry="2" />
<text  x="1187.22" y="479.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="1183.6" y="469" width="0.6" height="15.0" fill="rgb(227,163,20)" rx="2" ry="2" />
<text  x="1186.65" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.05%)</title><rect x="145.2" y="85" width="0.5" height="15.0" fill="rgb(237,107,28)" rx="2" ry="2" />
<text  x="148.15" y="95.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.05%)</title><rect x="334.0" y="245" width="0.6" height="15.0" fill="rgb(247,107,35)" rx="2" ry="2" />
<text  x="337.02" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.05%)</title><rect x="205.2" y="293" width="0.6" height="15.0" fill="rgb(227,192,10)" rx="2" ry="2" />
<text  x="208.22" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.decAlloc (2 samples, 0.10%)</title><rect x="145.2" y="277" width="1.1" height="15.0" fill="rgb(252,87,50)" rx="2" ry="2" />
<text  x="148.15" y="287.5" ></text>
</g>
<g >
<title>net/http.Header.Del (1 samples, 0.05%)</title><rect x="16.9" y="485" width="0.6" height="15.0" fill="rgb(228,73,16)" rx="2" ry="2" />
<text  x="19.93" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func4 (7 samples, 0.34%)</title><rect x="194.8" y="293" width="4.1" height="15.0" fill="rgb(222,21,48)" rx="2" ry="2" />
<text  x="197.83" y="303.5" ></text>
</g>
<g >
<title>fmt.(*buffer).WriteString (1 samples, 0.05%)</title><rect x="298.8" y="245" width="0.6" height="15.0" fill="rgb(227,221,39)" rx="2" ry="2" />
<text  x="301.79" y="255.5" ></text>
</g>
<g >
<title>runtime.bgsweep (2 samples, 0.10%)</title><rect x="380.8" y="565" width="1.2" height="15.0" fill="rgb(225,118,32)" rx="2" ry="2" />
<text  x="383.81" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.05%)</title><rect x="300.5" y="85" width="0.6" height="15.0" fill="rgb(220,54,3)" rx="2" ry="2" />
<text  x="303.52" y="95.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).EncodeValue (54 samples, 2.64%)</title><rect x="108.2" y="437" width="31.2" height="15.0" fill="rgb(246,141,22)" rx="2" ry="2" />
<text  x="111.19" y="447.5" >en..</text>
</g>
<g >
<title>runtime.duffcopy (2 samples, 0.10%)</title><rect x="190.2" y="325" width="1.2" height="15.0" fill="rgb(229,52,22)" rx="2" ry="2" />
<text  x="193.21" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="382.0" y="517" width="0.5" height="15.0" fill="rgb(236,72,52)" rx="2" ry="2" />
<text  x="384.96" y="527.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="196.6" y="133" width="0.5" height="15.0" fill="rgb(209,182,11)" rx="2" ry="2" />
<text  x="199.56" y="143.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="154.4" y="117" width="0.6" height="15.0" fill="rgb(242,162,51)" rx="2" ry="2" />
<text  x="157.40" y="127.5" ></text>
</g>
<g >
<title>net/http.newBufioWriterSize (2 samples, 0.10%)</title><rect x="15.2" y="533" width="1.2" height="15.0" fill="rgb(252,222,30)" rx="2" ry="2" />
<text  x="18.20" y="543.5" ></text>
</g>
<g >
<title>runtime.osyield (10 samples, 0.49%)</title><rect x="788.0" y="469" width="5.8" height="15.0" fill="rgb(237,223,47)" rx="2" ry="2" />
<text  x="791.00" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="297.1" y="293" width="0.5" height="15.0" fill="rgb(220,24,14)" rx="2" ry="2" />
<text  x="300.06" y="303.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="204.1" y="309" width="0.5" height="15.0" fill="rgb(209,153,31)" rx="2" ry="2" />
<text  x="207.07" y="319.5" ></text>
</g>
<g >
<title>runtime.adjustframe (4 samples, 0.20%)</title><rect x="391.2" y="389" width="2.3" height="15.0" fill="rgb(205,91,2)" rx="2" ry="2" />
<text  x="394.20" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.05%)</title><rect x="267.6" y="389" width="0.6" height="15.0" fill="rgb(250,175,42)" rx="2" ry="2" />
<text  x="270.60" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.05%)</title><rect x="207.0" y="181" width="0.5" height="15.0" fill="rgb(218,217,14)" rx="2" ry="2" />
<text  x="209.96" y="191.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.10%)</title><rect x="144.0" y="229" width="1.2" height="15.0" fill="rgb(231,28,32)" rx="2" ry="2" />
<text  x="147.00" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="109.3" y="53" width="0.6" height="15.0" fill="rgb(242,156,3)" rx="2" ry="2" />
<text  x="112.34" y="63.5" ></text>
</g>
<g >
<title>encoding/gob.encString (1 samples, 0.05%)</title><rect x="129.0" y="277" width="0.6" height="15.0" fill="rgb(231,196,24)" rx="2" ry="2" />
<text  x="131.98" y="287.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func4 (10 samples, 0.49%)</title><rect x="109.3" y="277" width="5.8" height="15.0" fill="rgb(207,159,13)" rx="2" ry="2" />
<text  x="112.34" y="287.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.10%)</title><rect x="121.5" y="309" width="1.1" height="15.0" fill="rgb(207,197,52)" rx="2" ry="2" />
<text  x="124.47" y="319.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.10%)</title><rect x="142.8" y="357" width="1.2" height="15.0" fill="rgb(252,126,22)" rx="2" ry="2" />
<text  x="145.84" y="367.5" ></text>
</g>
<g >
<title>runtime.notewakeup (603 samples, 29.52%)</title><rect x="793.8" y="485" width="348.3" height="15.0" fill="rgb(251,44,2)" rx="2" ry="2" />
<text  x="796.78" y="495.5" >runtime.notewakeup</text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="447.2" y="437" width="0.6" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="450.23" y="447.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="774.1" y="469" width="0.6" height="15.0" fill="rgb(230,57,25)" rx="2" ry="2" />
<text  x="777.14" y="479.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="409.7" y="517" width="0.6" height="15.0" fill="rgb(221,141,35)" rx="2" ry="2" />
<text  x="412.69" y="527.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.05%)</title><rect x="388.3" y="357" width="0.6" height="15.0" fill="rgb(225,1,41)" rx="2" ry="2" />
<text  x="391.32" y="367.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.05%)</title><rect x="211.6" y="229" width="0.6" height="15.0" fill="rgb(252,126,1)" rx="2" ry="2" />
<text  x="214.58" y="239.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.05%)</title><rect x="300.5" y="117" width="0.6" height="15.0" fill="rgb(239,182,51)" rx="2" ry="2" />
<text  x="303.52" y="127.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.20%)</title><rect x="1186.0" y="533" width="2.3" height="15.0" fill="rgb(242,196,34)" rx="2" ry="2" />
<text  x="1188.96" y="543.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (2 samples, 0.10%)</title><rect x="100.1" y="517" width="1.2" height="15.0" fill="rgb(238,203,22)" rx="2" ry="2" />
<text  x="103.10" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.05%)</title><rect x="207.0" y="197" width="0.5" height="15.0" fill="rgb(232,223,3)" rx="2" ry="2" />
<text  x="209.96" y="207.5" ></text>
</g>
<g >
<title>syscall.Read (79 samples, 3.87%)</title><rect x="215.0" y="373" width="45.7" height="15.0" fill="rgb(222,165,20)" rx="2" ry="2" />
<text  x="218.04" y="383.5" >sysc..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="197.1" y="149" width="0.6" height="15.0" fill="rgb(213,73,18)" rx="2" ry="2" />
<text  x="200.14" y="159.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (1 samples, 0.05%)</title><rect x="293.0" y="341" width="0.6" height="15.0" fill="rgb(213,115,44)" rx="2" ry="2" />
<text  x="296.02" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.10%)</title><rect x="293.6" y="277" width="1.1" height="15.0" fill="rgb(209,190,42)" rx="2" ry="2" />
<text  x="296.59" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.10%)</title><rect x="386.0" y="421" width="1.2" height="15.0" fill="rgb(254,191,2)" rx="2" ry="2" />
<text  x="389.01" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="62.6" y="485" width="0.5" height="15.0" fill="rgb(218,44,46)" rx="2" ry="2" />
<text  x="65.56" y="495.5" ></text>
</g>
<g >
<title>runtime.convT2E (1 samples, 0.05%)</title><rect x="142.3" y="453" width="0.5" height="15.0" fill="rgb(229,108,15)" rx="2" ry="2" />
<text  x="145.27" y="463.5" ></text>
</g>
<g >
<title>strings.indexFunc (1 samples, 0.05%)</title><rect x="344.4" y="405" width="0.6" height="15.0" fill="rgb(246,119,14)" rx="2" ry="2" />
<text  x="347.42" y="415.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (1 samples, 0.05%)</title><rect x="382.0" y="469" width="0.5" height="15.0" fill="rgb(217,30,6)" rx="2" ry="2" />
<text  x="384.96" y="479.5" ></text>
</g>
<g >
<title>runtime.scanstack (41 samples, 2.01%)</title><rect x="1157.1" y="453" width="23.7" height="15.0" fill="rgb(221,97,52)" rx="2" ry="2" />
<text  x="1160.08" y="463.5" >r..</text>
</g>
<g >
<title>encoding/gob.(*encoderState).encodeUint (1 samples, 0.05%)</title><rect x="126.7" y="229" width="0.5" height="15.0" fill="rgb(239,36,34)" rx="2" ry="2" />
<text  x="129.67" y="239.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.05%)</title><rect x="211.6" y="277" width="0.6" height="15.0" fill="rgb(208,116,8)" rx="2" ry="2" />
<text  x="214.58" y="287.5" ></text>
</g>
<g >
<title>net/http.Header.Set (3 samples, 0.15%)</title><rect x="101.3" y="469" width="1.7" height="15.0" fill="rgb(235,222,16)" rx="2" ry="2" />
<text  x="104.26" y="479.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.05%)</title><rect x="211.6" y="213" width="0.6" height="15.0" fill="rgb(212,132,32)" rx="2" ry="2" />
<text  x="214.58" y="223.5" ></text>
</g>
<g >
<title>runtime.runqgrab (14 samples, 0.69%)</title><rect x="723.9" y="485" width="8.1" height="15.0" fill="rgb(210,86,15)" rx="2" ry="2" />
<text  x="726.89" y="495.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.05%)</title><rect x="261.2" y="325" width="0.6" height="15.0" fill="rgb(246,39,54)" rx="2" ry="2" />
<text  x="264.25" y="335.5" ></text>
</g>
<g >
<title>sync.runtime_canSpin (1 samples, 0.05%)</title><rect x="339.2" y="357" width="0.6" height="15.0" fill="rgb(232,17,43)" rx="2" ry="2" />
<text  x="342.22" y="367.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.05%)</title><rect x="73.0" y="421" width="0.5" height="15.0" fill="rgb(253,184,5)" rx="2" ry="2" />
<text  x="75.96" y="431.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (3 samples, 0.15%)</title><rect x="1184.2" y="533" width="1.8" height="15.0" fill="rgb(254,3,26)" rx="2" ry="2" />
<text  x="1187.22" y="543.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (1 samples, 0.05%)</title><rect x="178.1" y="261" width="0.6" height="15.0" fill="rgb(242,146,7)" rx="2" ry="2" />
<text  x="181.08" y="271.5" ></text>
</g>
<g >
<title>runtime.adjustpointers (1 samples, 0.05%)</title><rect x="163.1" y="101" width="0.5" height="15.0" fill="rgb(221,20,54)" rx="2" ry="2" />
<text  x="166.06" y="111.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (3 samples, 0.15%)</title><rect x="153.2" y="261" width="1.8" height="15.0" fill="rgb(254,143,4)" rx="2" ry="2" />
<text  x="156.24" y="271.5" ></text>
</g>
<g >
<title>reflect.(*structType).FieldByName (23 samples, 1.13%)</title><rect x="158.4" y="229" width="13.3" height="15.0" fill="rgb(225,119,52)" rx="2" ry="2" />
<text  x="161.44" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="210.4" y="405" width="0.6" height="15.0" fill="rgb(237,213,29)" rx="2" ry="2" />
<text  x="213.42" y="415.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.05%)</title><rect x="763.2" y="501" width="0.5" height="15.0" fill="rgb(238,206,48)" rx="2" ry="2" />
<text  x="766.17" y="511.5" ></text>
</g>
<g >
<title>context.removeChild (4 samples, 0.20%)</title><rect x="10.6" y="517" width="2.3" height="15.0" fill="rgb(211,164,22)" rx="2" ry="2" />
<text  x="13.58" y="527.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.10%)</title><rect x="445.5" y="501" width="1.2" height="15.0" fill="rgb(248,160,40)" rx="2" ry="2" />
<text  x="448.50" y="511.5" ></text>
</g>
<g >
<title>runtime.lock (16 samples, 0.78%)</title><rect x="1157.1" y="373" width="9.2" height="15.0" fill="rgb(245,201,5)" rx="2" ry="2" />
<text  x="1160.08" y="383.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.05%)</title><rect x="203.5" y="277" width="0.6" height="15.0" fill="rgb(219,82,7)" rx="2" ry="2" />
<text  x="206.49" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="142.8" y="309" width="0.6" height="15.0" fill="rgb(216,93,48)" rx="2" ry="2" />
<text  x="145.84" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (78 samples, 3.82%)</title><rect x="17.5" y="469" width="45.1" height="15.0" fill="rgb(234,5,37)" rx="2" ry="2" />
<text  x="20.51" y="479.5" >bufi..</text>
</g>
<g >
<title>net/textproto.(*Reader).closeDot (1 samples, 0.05%)</title><rect x="63.1" y="469" width="0.6" height="15.0" fill="rgb(235,41,4)" rx="2" ry="2" />
<text  x="66.14" y="479.5" ></text>
</g>
<g >
<title>runtime.semawakeup (4 samples, 0.20%)</title><rect x="1186.0" y="453" width="2.3" height="15.0" fill="rgb(239,222,48)" rx="2" ry="2" />
<text  x="1188.96" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="261.2" y="309" width="0.6" height="15.0" fill="rgb(206,182,9)" rx="2" ry="2" />
<text  x="264.25" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.05%)</title><rect x="204.1" y="229" width="0.5" height="15.0" fill="rgb(229,206,25)" rx="2" ry="2" />
<text  x="207.07" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="197.7" y="149" width="0.6" height="15.0" fill="rgb(246,35,45)" rx="2" ry="2" />
<text  x="200.71" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="341.0" y="325" width="0.5" height="15.0" fill="rgb(243,102,17)" rx="2" ry="2" />
<text  x="343.95" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="201.2" y="261" width="0.6" height="15.0" fill="rgb(230,76,10)" rx="2" ry="2" />
<text  x="204.18" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.15%)</title><rect x="774.7" y="421" width="1.8" height="15.0" fill="rgb(239,18,9)" rx="2" ry="2" />
<text  x="777.72" y="431.5" ></text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.05%)</title><rect x="200.6" y="197" width="0.6" height="15.0" fill="rgb(211,44,0)" rx="2" ry="2" />
<text  x="203.60" y="207.5" ></text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.05%)</title><rect x="10.6" y="453" width="0.6" height="15.0" fill="rgb(236,194,23)" rx="2" ry="2" />
<text  x="13.58" y="463.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*TextFormatter).Format (11 samples, 0.54%)</title><rect x="294.7" y="373" width="6.4" height="15.0" fill="rgb(213,150,51)" rx="2" ry="2" />
<text  x="297.75" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.05%)</title><rect x="300.5" y="261" width="0.6" height="15.0" fill="rgb(247,78,42)" rx="2" ry="2" />
<text  x="303.52" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.05%)</title><rect x="205.2" y="229" width="0.6" height="15.0" fill="rgb(254,201,39)" rx="2" ry="2" />
<text  x="208.22" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="289.0" y="437" width="0.5" height="15.0" fill="rgb(245,164,21)" rx="2" ry="2" />
<text  x="291.97" y="447.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.05%)</title><rect x="70.1" y="453" width="0.5" height="15.0" fill="rgb(225,128,15)" rx="2" ry="2" />
<text  x="73.07" y="463.5" ></text>
</g>
<g >
<title>runtime.scanstack (28 samples, 1.37%)</title><rect x="383.7" y="453" width="16.2" height="15.0" fill="rgb(227,106,29)" rx="2" ry="2" />
<text  x="386.70" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func5 (25 samples, 1.22%)</title><rect x="108.8" y="389" width="14.4" height="15.0" fill="rgb(236,38,0)" rx="2" ry="2" />
<text  x="111.77" y="399.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (6 samples, 0.29%)</title><rect x="647.1" y="533" width="3.4" height="15.0" fill="rgb(225,189,44)" rx="2" ry="2" />
<text  x="650.07" y="543.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.05%)</title><rect x="16.9" y="453" width="0.6" height="15.0" fill="rgb(222,41,4)" rx="2" ry="2" />
<text  x="19.93" y="463.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.05%)</title><rect x="155.6" y="165" width="0.5" height="15.0" fill="rgb(210,4,16)" rx="2" ry="2" />
<text  x="158.55" y="175.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast32 (1 samples, 0.05%)</title><rect x="204.6" y="325" width="0.6" height="15.0" fill="rgb(213,68,18)" rx="2" ry="2" />
<text  x="207.65" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (1 samples, 0.05%)</title><rect x="199.4" y="341" width="0.6" height="15.0" fill="rgb(237,196,35)" rx="2" ry="2" />
<text  x="202.45" y="351.5" ></text>
</g>
<g >
<title>runtime.fastrand (2 samples, 0.10%)</title><rect x="191.4" y="341" width="1.1" height="15.0" fill="rgb(208,44,29)" rx="2" ry="2" />
<text  x="194.36" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (33 samples, 1.62%)</title><rect x="382.5" y="533" width="19.1" height="15.0" fill="rgb(239,124,41)" rx="2" ry="2" />
<text  x="385.54" y="543.5" ></text>
</g>
<g >
<title>runtime.sysmon (1 samples, 0.05%)</title><rect x="780.5" y="533" width="0.6" height="15.0" fill="rgb(231,34,38)" rx="2" ry="2" />
<text  x="783.49" y="543.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.10%)</title><rect x="68.9" y="533" width="1.2" height="15.0" fill="rgb(222,106,52)" rx="2" ry="2" />
<text  x="71.91" y="543.5" ></text>
</g>
<g >
<title>runtime.mapdelete (4 samples, 0.20%)</title><rect x="10.6" y="501" width="2.3" height="15.0" fill="rgb(252,148,33)" rx="2" ry="2" />
<text  x="13.58" y="511.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.20%)</title><rect x="1186.0" y="485" width="2.3" height="15.0" fill="rgb(212,96,41)" rx="2" ry="2" />
<text  x="1188.96" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.decAlloc (1 samples, 0.05%)</title><rect x="148.6" y="357" width="0.6" height="15.0" fill="rgb(254,210,35)" rx="2" ry="2" />
<text  x="151.62" y="367.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.10%)</title><rect x="68.9" y="517" width="1.2" height="15.0" fill="rgb(207,44,14)" rx="2" ry="2" />
<text  x="71.91" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="350.8" y="325" width="0.6" height="15.0" fill="rgb(234,116,31)" rx="2" ry="2" />
<text  x="353.77" y="335.5" ></text>
</g>
<g >
<title>runtime.lock (24 samples, 1.17%)</title><rect x="1166.3" y="373" width="13.9" height="15.0" fill="rgb(237,191,37)" rx="2" ry="2" />
<text  x="1169.32" y="383.5" ></text>
</g>
<g >
<title>reflect.Indirect (1 samples, 0.05%)</title><rect x="132.4" y="357" width="0.6" height="15.0" fill="rgb(216,55,36)" rx="2" ry="2" />
<text  x="135.45" y="367.5" ></text>
</g>
<g >
<title>encoding/gob.userType (3 samples, 0.15%)</title><rect x="182.7" y="325" width="1.7" height="15.0" fill="rgb(239,73,1)" rx="2" ry="2" />
<text  x="185.70" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Writer).WriteString (4 samples, 0.20%)</title><rect x="74.7" y="469" width="2.3" height="15.0" fill="rgb(229,57,41)" rx="2" ry="2" />
<text  x="77.69" y="479.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="200.6" y="261" width="0.6" height="15.0" fill="rgb(221,201,34)" rx="2" ry="2" />
<text  x="203.60" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="193.7" y="373" width="0.5" height="15.0" fill="rgb(222,145,35)" rx="2" ry="2" />
<text  x="196.67" y="383.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.05%)</title><rect x="412.0" y="469" width="0.6" height="15.0" fill="rgb(235,216,4)" rx="2" ry="2" />
<text  x="415.00" y="479.5" ></text>
</g>
<g >
<title>runtime.mcall (622 samples, 30.45%)</title><rect x="404.5" y="565" width="359.2" height="15.0" fill="rgb(221,61,23)" rx="2" ry="2" />
<text  x="407.49" y="575.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.systemstack (708 samples, 34.65%)</title><rect x="781.1" y="549" width="408.9" height="15.0" fill="rgb(231,137,40)" rx="2" ry="2" />
<text  x="784.07" y="559.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.gomcache (1 samples, 0.05%)</title><rect x="177.5" y="197" width="0.6" height="15.0" fill="rgb(240,48,27)" rx="2" ry="2" />
<text  x="180.50" y="207.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.05%)</title><rect x="334.6" y="325" width="0.6" height="15.0" fill="rgb(227,129,14)" rx="2" ry="2" />
<text  x="337.60" y="335.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.05%)</title><rect x="299.4" y="309" width="0.5" height="15.0" fill="rgb(236,224,0)" rx="2" ry="2" />
<text  x="302.37" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (8 samples, 0.39%)</title><rect x="109.3" y="197" width="4.7" height="15.0" fill="rgb(207,5,50)" rx="2" ry="2" />
<text  x="112.34" y="207.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.05%)</title><rect x="292.4" y="325" width="0.6" height="15.0" fill="rgb(228,118,31)" rx="2" ry="2" />
<text  x="295.44" y="335.5" ></text>
</g>
<g >
<title>runtime.usleep (9 samples, 0.44%)</title><rect x="404.5" y="501" width="5.2" height="15.0" fill="rgb(217,123,9)" rx="2" ry="2" />
<text  x="407.49" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.05%)</title><rect x="184.4" y="245" width="0.6" height="15.0" fill="rgb(232,107,34)" rx="2" ry="2" />
<text  x="187.43" y="255.5" ></text>
</g>
<g >
<title>runtime.concatstring3 (2 samples, 0.10%)</title><rect x="201.8" y="293" width="1.1" height="15.0" fill="rgb(240,218,30)" rx="2" ry="2" />
<text  x="204.76" y="303.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.05%)</title><rect x="194.2" y="309" width="0.6" height="15.0" fill="rgb(243,61,46)" rx="2" ry="2" />
<text  x="197.25" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (14 samples, 0.69%)</title><rect x="437.4" y="469" width="8.1" height="15.0" fill="rgb(239,51,6)" rx="2" ry="2" />
<text  x="440.41" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="197.7" y="165" width="0.6" height="15.0" fill="rgb(209,55,51)" rx="2" ry="2" />
<text  x="200.71" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="14.6" y="501" width="0.6" height="15.0" fill="rgb(218,169,20)" rx="2" ry="2" />
<text  x="17.62" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="109.9" y="149" width="0.6" height="15.0" fill="rgb(228,66,42)" rx="2" ry="2" />
<text  x="112.92" y="159.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.05%)</title><rect x="432.2" y="501" width="0.6" height="15.0" fill="rgb(224,213,47)" rx="2" ry="2" />
<text  x="435.21" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="179.2" y="181" width="0.6" height="15.0" fill="rgb(226,209,30)" rx="2" ry="2" />
<text  x="182.23" y="191.5" ></text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.05%)</title><rect x="157.9" y="213" width="0.5" height="15.0" fill="rgb(219,101,6)" rx="2" ry="2" />
<text  x="160.86" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.15%)</title><rect x="1186.0" y="437" width="1.7" height="15.0" fill="rgb(226,73,39)" rx="2" ry="2" />
<text  x="1188.96" y="447.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.05%)</title><rect x="412.0" y="501" width="0.6" height="15.0" fill="rgb(209,160,48)" rx="2" ry="2" />
<text  x="415.00" y="511.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (8 samples, 0.39%)</title><rect x="334.6" y="341" width="4.6" height="15.0" fill="rgb(207,102,17)" rx="2" ry="2" />
<text  x="337.60" y="351.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (2 samples, 0.10%)</title><rect x="189.1" y="309" width="1.1" height="15.0" fill="rgb(225,148,17)" rx="2" ry="2" />
<text  x="192.05" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="145.2" y="213" width="0.5" height="15.0" fill="rgb(213,155,18)" rx="2" ry="2" />
<text  x="148.15" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="109.3" y="117" width="0.6" height="15.0" fill="rgb(213,216,2)" rx="2" ry="2" />
<text  x="112.34" y="127.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.10%)</title><rect x="341.5" y="373" width="1.2" height="15.0" fill="rgb(246,74,22)" rx="2" ry="2" />
<text  x="344.53" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="142.8" y="261" width="0.6" height="15.0" fill="rgb(205,212,7)" rx="2" ry="2" />
<text  x="145.84" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.encString (2 samples, 0.10%)</title><rect x="126.7" y="245" width="1.1" height="15.0" fill="rgb(227,52,53)" rx="2" ry="2" />
<text  x="129.67" y="255.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.05%)</title><rect x="402.2" y="373" width="0.6" height="15.0" fill="rgb(246,176,18)" rx="2" ry="2" />
<text  x="405.18" y="383.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.05%)</title><rect x="375.6" y="533" width="0.6" height="15.0" fill="rgb(249,22,37)" rx="2" ry="2" />
<text  x="378.61" y="543.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.05%)</title><rect x="156.1" y="229" width="0.6" height="15.0" fill="rgb(215,167,12)" rx="2" ry="2" />
<text  x="159.13" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="334.0" y="261" width="0.6" height="15.0" fill="rgb(237,155,35)" rx="2" ry="2" />
<text  x="337.02" y="271.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Unlock (1 samples, 0.05%)</title><rect x="339.8" y="389" width="0.6" height="15.0" fill="rgb(249,194,7)" rx="2" ry="2" />
<text  x="342.80" y="399.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.05%)</title><rect x="650.0" y="517" width="0.5" height="15.0" fill="rgb(220,18,10)" rx="2" ry="2" />
<text  x="652.96" y="527.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="412.0" y="453" width="0.6" height="15.0" fill="rgb(233,0,4)" rx="2" ry="2" />
<text  x="415.00" y="463.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast32 (2 samples, 0.10%)</title><rect x="193.1" y="389" width="1.1" height="15.0" fill="rgb(209,221,50)" rx="2" ry="2" />
<text  x="196.09" y="399.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="152.7" y="245" width="0.5" height="15.0" fill="rgb(215,119,33)" rx="2" ry="2" />
<text  x="155.66" y="255.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.05%)</title><rect x="116.3" y="277" width="0.6" height="15.0" fill="rgb(218,27,49)" rx="2" ry="2" />
<text  x="119.28" y="287.5" ></text>
</g>
<g >
<title>strings.TrimLeftFunc (1 samples, 0.05%)</title><rect x="344.4" y="421" width="0.6" height="15.0" fill="rgb(222,20,46)" rx="2" ry="2" />
<text  x="347.42" y="431.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.05%)</title><rect x="196.6" y="85" width="0.5" height="15.0" fill="rgb(213,86,48)" rx="2" ry="2" />
<text  x="199.56" y="95.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeArrayHelper (6 samples, 0.29%)</title><rect x="144.0" y="293" width="3.5" height="15.0" fill="rgb(232,43,24)" rx="2" ry="2" />
<text  x="147.00" y="303.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (2 samples, 0.10%)</title><rect x="120.3" y="293" width="1.2" height="15.0" fill="rgb(248,28,43)" rx="2" ry="2" />
<text  x="123.32" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.10%)</title><rect x="197.7" y="181" width="1.2" height="15.0" fill="rgb(250,35,40)" rx="2" ry="2" />
<text  x="200.71" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.05%)</title><rect x="340.4" y="309" width="0.6" height="15.0" fill="rgb(244,63,27)" rx="2" ry="2" />
<text  x="343.38" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (7 samples, 0.34%)</title><rect x="391.2" y="405" width="4.0" height="15.0" fill="rgb(221,178,19)" rx="2" ry="2" />
<text  x="394.20" y="415.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.24%)</title><rect x="412.6" y="485" width="2.9" height="15.0" fill="rgb(236,168,1)" rx="2" ry="2" />
<text  x="415.57" y="495.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.05%)</title><rect x="446.7" y="453" width="0.5" height="15.0" fill="rgb(235,75,5)" rx="2" ry="2" />
<text  x="449.65" y="463.5" ></text>
</g>
<g >
<title>syscall.read (76 samples, 3.72%)</title><rect x="18.7" y="357" width="43.9" height="15.0" fill="rgb(213,180,21)" rx="2" ry="2" />
<text  x="21.66" y="367.5" >sysc..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="349.6" y="389" width="0.6" height="15.0" fill="rgb(223,52,26)" rx="2" ry="2" />
<text  x="352.62" y="399.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="116.3" y="293" width="0.6" height="15.0" fill="rgb(237,17,0)" rx="2" ry="2" />
<text  x="119.28" y="303.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (3 samples, 0.15%)</title><rect x="70.1" y="549" width="1.7" height="15.0" fill="rgb(237,204,5)" rx="2" ry="2" />
<text  x="73.07" y="559.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.05%)</title><rect x="1189.4" y="501" width="0.6" height="15.0" fill="rgb(220,159,35)" rx="2" ry="2" />
<text  x="1192.42" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (1 samples, 0.05%)</title><rect x="200.6" y="309" width="0.6" height="15.0" fill="rgb(215,27,7)" rx="2" ry="2" />
<text  x="203.60" y="319.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeInterface (25 samples, 1.22%)</title><rect x="108.8" y="373" width="14.4" height="15.0" fill="rgb(246,86,15)" rx="2" ry="2" />
<text  x="111.77" y="383.5" ></text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.05%)</title><rect x="343.8" y="437" width="0.6" height="15.0" fill="rgb(210,151,29)" rx="2" ry="2" />
<text  x="346.84" y="447.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.10%)</title><rect x="388.9" y="389" width="1.1" height="15.0" fill="rgb(218,43,48)" rx="2" ry="2" />
<text  x="391.89" y="399.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.Infoln (92 samples, 4.50%)</title><rect x="290.1" y="485" width="53.2" height="15.0" fill="rgb(249,174,43)" rx="2" ry="2" />
<text  x="293.13" y="495.5" >githu..</text>
</g>
<g >
<title>runtime.stackfree (4 samples, 0.20%)</title><rect x="778.2" y="517" width="2.3" height="15.0" fill="rgb(253,103,20)" rx="2" ry="2" />
<text  x="781.18" y="527.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.05%)</title><rect x="137.1" y="373" width="0.5" height="15.0" fill="rgb(231,55,43)" rx="2" ry="2" />
<text  x="140.07" y="383.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (8 samples, 0.39%)</title><rect x="376.2" y="565" width="4.6" height="15.0" fill="rgb(245,16,48)" rx="2" ry="2" />
<text  x="379.19" y="575.5" ></text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.10%)</title><rect x="263.0" y="341" width="1.1" height="15.0" fill="rgb(248,65,53)" rx="2" ry="2" />
<text  x="265.98" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="140.5" y="405" width="0.6" height="15.0" fill="rgb(215,15,27)" rx="2" ry="2" />
<text  x="143.53" y="415.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeStruct (20 samples, 0.98%)</title><rect x="194.2" y="405" width="11.6" height="15.0" fill="rgb(206,192,52)" rx="2" ry="2" />
<text  x="197.25" y="415.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor (39 samples, 1.91%)</title><rect x="153.2" y="293" width="22.6" height="15.0" fill="rgb(244,40,3)" rx="2" ry="2" />
<text  x="156.24" y="303.5" >e..</text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="155.6" y="213" width="0.5" height="15.0" fill="rgb(235,168,48)" rx="2" ry="2" />
<text  x="158.55" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.10%)</title><rect x="785.1" y="533" width="1.2" height="15.0" fill="rgb(240,52,10)" rx="2" ry="2" />
<text  x="788.12" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="154.4" y="197" width="0.6" height="15.0" fill="rgb(226,11,41)" rx="2" ry="2" />
<text  x="157.40" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.10%)</title><rect x="140.0" y="437" width="1.1" height="15.0" fill="rgb(219,158,6)" rx="2" ry="2" />
<text  x="142.96" y="447.5" ></text>
</g>
<g >
<title>runtime.netpollgoready (1 samples, 0.05%)</title><rect x="98.4" y="437" width="0.5" height="15.0" fill="rgb(247,142,36)" rx="2" ry="2" />
<text  x="101.37" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="109.3" y="37" width="0.6" height="15.0" fill="rgb(224,210,36)" rx="2" ry="2" />
<text  x="112.34" y="47.5" ></text>
</g>
<g >
<title>runtime.gcDrain (45 samples, 2.20%)</title><rect x="1157.1" y="517" width="26.0" height="15.0" fill="rgb(205,220,30)" rx="2" ry="2" />
<text  x="1160.08" y="527.5" >r..</text>
</g>
<g >
<title>runtime.adjustframe (3 samples, 0.15%)</title><rect x="160.2" y="101" width="1.7" height="15.0" fill="rgb(226,49,21)" rx="2" ry="2" />
<text  x="163.17" y="111.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="295.3" y="309" width="0.6" height="15.0" fill="rgb(230,25,1)" rx="2" ry="2" />
<text  x="298.33" y="319.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.10%)</title><rect x="1183.1" y="517" width="1.1" height="15.0" fill="rgb(232,83,51)" rx="2" ry="2" />
<text  x="1186.07" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.34%)</title><rect x="371.6" y="517" width="4.0" height="15.0" fill="rgb(242,47,47)" rx="2" ry="2" />
<text  x="374.57" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="124.4" y="293" width="0.5" height="15.0" fill="rgb(228,25,0)" rx="2" ry="2" />
<text  x="127.36" y="303.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.05%)</title><rect x="388.3" y="389" width="0.6" height="15.0" fill="rgb(229,99,38)" rx="2" ry="2" />
<text  x="391.32" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="127.8" y="261" width="0.6" height="15.0" fill="rgb(242,149,14)" rx="2" ry="2" />
<text  x="130.83" y="271.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.05%)</title><rect x="267.0" y="293" width="0.6" height="15.0" fill="rgb(232,195,51)" rx="2" ry="2" />
<text  x="270.02" y="303.5" ></text>
</g>
<g >
<title>runtime.step (5 samples, 0.24%)</title><rect x="164.2" y="53" width="2.9" height="15.0" fill="rgb(238,214,5)" rx="2" ry="2" />
<text  x="167.21" y="63.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.05%)</title><rect x="211.6" y="197" width="0.6" height="15.0" fill="rgb(249,80,24)" rx="2" ry="2" />
<text  x="214.58" y="207.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.10%)</title><rect x="213.9" y="373" width="1.1" height="15.0" fill="rgb(248,59,11)" rx="2" ry="2" />
<text  x="216.89" y="383.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="129.0" y="229" width="0.6" height="15.0" fill="rgb(245,81,43)" rx="2" ry="2" />
<text  x="131.98" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.05%)</title><rect x="780.5" y="517" width="0.6" height="15.0" fill="rgb(250,85,33)" rx="2" ry="2" />
<text  x="783.49" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.05%)</title><rect x="205.2" y="261" width="0.6" height="15.0" fill="rgb(229,97,8)" rx="2" ry="2" />
<text  x="208.22" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="102.4" y="421" width="0.6" height="15.0" fill="rgb(209,99,24)" rx="2" ry="2" />
<text  x="105.41" y="431.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="263.6" y="245" width="0.5" height="15.0" fill="rgb(239,176,7)" rx="2" ry="2" />
<text  x="266.56" y="255.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).redirectToPathSlash (1 samples, 0.05%)</title><rect x="100.7" y="501" width="0.6" height="15.0" fill="rgb(225,165,42)" rx="2" ry="2" />
<text  x="103.68" y="511.5" ></text>
</g>
<g >
<title>runtime.newproc1 (2 samples, 0.10%)</title><rect x="70.6" y="485" width="1.2" height="15.0" fill="rgb(230,79,31)" rx="2" ry="2" />
<text  x="73.65" y="495.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="205.8" y="341" width="0.6" height="15.0" fill="rgb(231,152,5)" rx="2" ry="2" />
<text  x="208.80" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="182.1" y="277" width="0.6" height="15.0" fill="rgb(211,5,23)" rx="2" ry="2" />
<text  x="185.12" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="340.4" y="325" width="0.6" height="15.0" fill="rgb(208,25,19)" rx="2" ry="2" />
<text  x="343.38" y="335.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.05%)</title><rect x="341.0" y="373" width="0.5" height="15.0" fill="rgb(254,191,17)" rx="2" ry="2" />
<text  x="343.95" y="383.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.05%)</title><rect x="259.5" y="325" width="0.6" height="15.0" fill="rgb(215,154,52)" rx="2" ry="2" />
<text  x="262.52" y="335.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Read (1 samples, 0.05%)</title><rect x="194.2" y="277" width="0.6" height="15.0" fill="rgb(207,172,52)" rx="2" ry="2" />
<text  x="197.25" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.15%)</title><rect x="651.7" y="485" width="1.7" height="15.0" fill="rgb(228,46,8)" rx="2" ry="2" />
<text  x="654.69" y="495.5" ></text>
</g>
<g >
<title>runtime.usleep (10 samples, 0.49%)</title><rect x="788.0" y="453" width="5.8" height="15.0" fill="rgb(230,41,28)" rx="2" ry="2" />
<text  x="791.00" y="463.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="1147.8" y="357" width="0.6" height="15.0" fill="rgb(250,59,16)" rx="2" ry="2" />
<text  x="1150.84" y="367.5" ></text>
</g>
<g >
<title>runtime.osyield (16 samples, 0.78%)</title><rect x="1157.1" y="357" width="9.2" height="15.0" fill="rgb(215,124,8)" rx="2" ry="2" />
<text  x="1160.08" y="367.5" ></text>
</g>
<g >
<title>syscall.syscall (1 samples, 0.05%)</title><rect x="402.2" y="357" width="0.6" height="15.0" fill="rgb(205,27,37)" rx="2" ry="2" />
<text  x="405.18" y="367.5" ></text>
</g>
<g >
<title>bufio.NewWriterSize (1 samples, 0.05%)</title><rect x="15.8" y="517" width="0.6" height="15.0" fill="rgb(215,0,7)" rx="2" ry="2" />
<text  x="18.78" y="527.5" ></text>
</g>
<g >
<title>encoding/gob.validUserType (1 samples, 0.05%)</title><rect x="149.8" y="309" width="0.6" height="15.0" fill="rgb(226,8,20)" rx="2" ry="2" />
<text  x="152.77" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (41 samples, 2.01%)</title><rect x="1157.1" y="485" width="23.7" height="15.0" fill="rgb(243,182,25)" rx="2" ry="2" />
<text  x="1160.08" y="495.5" >r..</text>
</g>
<g >
<title>internal/poll.(*FD).Read (76 samples, 3.72%)</title><rect x="18.7" y="389" width="43.9" height="15.0" fill="rgb(207,66,47)" rx="2" ry="2" />
<text  x="21.66" y="399.5" >inte..</text>
</g>
<g >
<title>encoding/gob.(*Encoder).sendType (26 samples, 1.27%)</title><rect x="123.8" y="405" width="15.0" height="15.0" fill="rgb(254,189,3)" rx="2" ry="2" />
<text  x="126.78" y="415.5" ></text>
</g>
<g >
<title>strings.TrimSpace (2 samples, 0.10%)</title><rect x="344.4" y="453" width="1.2" height="15.0" fill="rgb(246,148,19)" rx="2" ry="2" />
<text  x="347.42" y="463.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.FieldMap.resolve (1 samples, 0.05%)</title><rect x="299.9" y="341" width="0.6" height="15.0" fill="rgb(236,98,17)" rx="2" ry="2" />
<text  x="302.95" y="351.5" ></text>
</g>
<g >
<title>runtime.copystack (41 samples, 2.01%)</title><rect x="1157.1" y="421" width="23.7" height="15.0" fill="rgb(241,152,28)" rx="2" ry="2" />
<text  x="1160.08" y="431.5" >r..</text>
</g>
<g >
<title>encoding/gob.(*Decoder).newDecoderState (1 samples, 0.05%)</title><rect x="147.5" y="325" width="0.5" height="15.0" fill="rgb(247,159,8)" rx="2" ry="2" />
<text  x="150.46" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.10%)</title><rect x="211.0" y="357" width="1.2" height="15.0" fill="rgb(217,139,24)" rx="2" ry="2" />
<text  x="214.00" y="367.5" ></text>
</g>
<g >
<title>runtime.osyield (24 samples, 1.17%)</title><rect x="1166.3" y="357" width="13.9" height="15.0" fill="rgb(211,168,54)" rx="2" ry="2" />
<text  x="1169.32" y="367.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.05%)</title><rect x="263.0" y="261" width="0.6" height="15.0" fill="rgb(221,33,4)" rx="2" ry="2" />
<text  x="265.98" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (26 samples, 1.27%)</title><rect x="108.8" y="405" width="15.0" height="15.0" fill="rgb(220,199,29)" rx="2" ry="2" />
<text  x="111.77" y="415.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.05%)</title><rect x="140.5" y="357" width="0.6" height="15.0" fill="rgb(252,128,40)" rx="2" ry="2" />
<text  x="143.53" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="289.5" y="453" width="0.6" height="15.0" fill="rgb(227,61,41)" rx="2" ry="2" />
<text  x="292.55" y="463.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func4 (3 samples, 0.15%)</title><rect x="126.1" y="277" width="1.7" height="15.0" fill="rgb(237,106,46)" rx="2" ry="2" />
<text  x="129.09" y="287.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (2 samples, 0.10%)</title><rect x="12.9" y="549" width="1.1" height="15.0" fill="rgb(207,17,12)" rx="2" ry="2" />
<text  x="15.89" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.05%)</title><rect x="351.4" y="309" width="0.5" height="15.0" fill="rgb(251,162,23)" rx="2" ry="2" />
<text  x="354.35" y="319.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.05%)</title><rect x="124.4" y="261" width="0.5" height="15.0" fill="rgb(212,79,12)" rx="2" ry="2" />
<text  x="127.36" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="198.9" y="261" width="0.5" height="15.0" fill="rgb(246,69,7)" rx="2" ry="2" />
<text  x="201.87" y="271.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeInterface (20 samples, 0.98%)</title><rect x="194.2" y="373" width="11.6" height="15.0" fill="rgb(246,139,20)" rx="2" ry="2" />
<text  x="197.25" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.10%)</title><rect x="186.2" y="325" width="1.1" height="15.0" fill="rgb(231,161,29)" rx="2" ry="2" />
<text  x="189.16" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.getTypeInfo (1 samples, 0.05%)</title><rect x="115.7" y="277" width="0.6" height="15.0" fill="rgb(219,101,40)" rx="2" ry="2" />
<text  x="118.70" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="136.5" y="341" width="0.6" height="15.0" fill="rgb(250,154,41)" rx="2" ry="2" />
<text  x="139.49" y="351.5" ></text>
</g>
<g >
<title>runtime.main (5 samples, 0.24%)</title><rect x="401.6" y="565" width="2.9" height="15.0" fill="rgb(216,97,15)" rx="2" ry="2" />
<text  x="404.60" y="575.5" ></text>
</g>
<g >
<title>reflect.flag.mustBe (1 samples, 0.05%)</title><rect x="131.3" y="325" width="0.6" height="15.0" fill="rgb(248,200,12)" rx="2" ry="2" />
<text  x="134.29" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (3 samples, 0.15%)</title><rect x="205.8" y="389" width="1.7" height="15.0" fill="rgb(234,216,40)" rx="2" ry="2" />
<text  x="208.80" y="399.5" ></text>
</g>
<g >
<title>runtime.stackalloc (3 samples, 0.15%)</title><rect x="398.1" y="405" width="1.8" height="15.0" fill="rgb(254,71,18)" rx="2" ry="2" />
<text  x="401.14" y="415.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="115.7" y="213" width="0.6" height="15.0" fill="rgb(246,60,30)" rx="2" ry="2" />
<text  x="118.70" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="127.8" y="229" width="0.6" height="15.0" fill="rgb(244,218,5)" rx="2" ry="2" />
<text  x="130.83" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="202.3" y="229" width="0.6" height="15.0" fill="rgb(206,51,18)" rx="2" ry="2" />
<text  x="205.33" y="239.5" ></text>
</g>
<g >
<title>runtime.aeshash32 (1 samples, 0.05%)</title><rect x="192.5" y="325" width="0.6" height="15.0" fill="rgb(246,116,46)" rx="2" ry="2" />
<text  x="195.52" y="335.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.05%)</title><rect x="263.0" y="245" width="0.6" height="15.0" fill="rgb(233,125,14)" rx="2" ry="2" />
<text  x="265.98" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.05%)</title><rect x="382.0" y="485" width="0.5" height="15.0" fill="rgb(252,72,19)" rx="2" ry="2" />
<text  x="384.96" y="495.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.05%)</title><rect x="339.8" y="293" width="0.6" height="15.0" fill="rgb(235,42,14)" rx="2" ry="2" />
<text  x="342.80" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (58 samples, 2.84%)</title><rect x="301.1" y="341" width="33.5" height="15.0" fill="rgb(237,19,13)" rx="2" ry="2" />
<text  x="304.10" y="351.5" >in..</text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.05%)</title><rect x="388.3" y="373" width="0.6" height="15.0" fill="rgb(244,159,7)" rx="2" ry="2" />
<text  x="391.32" y="383.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (2 samples, 0.10%)</title><rect x="356.0" y="549" width="1.1" height="15.0" fill="rgb(208,81,28)" rx="2" ry="2" />
<text  x="358.97" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (10 samples, 0.49%)</title><rect x="261.8" y="357" width="5.8" height="15.0" fill="rgb(232,31,9)" rx="2" ry="2" />
<text  x="264.83" y="367.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="176.3" y="229" width="0.6" height="15.0" fill="rgb(239,91,42)" rx="2" ry="2" />
<text  x="179.34" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.10%)</title><rect x="65.4" y="517" width="1.2" height="15.0" fill="rgb(254,115,7)" rx="2" ry="2" />
<text  x="68.45" y="527.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.29%)</title><rect x="103.6" y="389" width="3.4" height="15.0" fill="rgb(228,38,6)" rx="2" ry="2" />
<text  x="106.57" y="399.5" ></text>
</g>
<g >
<title>runtime.markroot (29 samples, 1.42%)</title><rect x="383.1" y="501" width="16.8" height="15.0" fill="rgb(247,151,32)" rx="2" ry="2" />
<text  x="386.12" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="179.2" y="197" width="0.6" height="15.0" fill="rgb(242,195,41)" rx="2" ry="2" />
<text  x="182.23" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.05%)</title><rect x="153.8" y="181" width="0.6" height="15.0" fill="rgb(231,196,6)" rx="2" ry="2" />
<text  x="156.82" y="191.5" ></text>
</g>
<g >
<title>fmt.Fprintf (5 samples, 0.24%)</title><rect x="296.5" y="341" width="2.9" height="15.0" fill="rgb(215,226,24)" rx="2" ry="2" />
<text  x="299.48" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (1 samples, 0.05%)</title><rect x="288.4" y="453" width="0.6" height="15.0" fill="rgb(243,116,36)" rx="2" ry="2" />
<text  x="291.39" y="463.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (1 samples, 0.05%)</title><rect x="291.9" y="309" width="0.5" height="15.0" fill="rgb(206,72,19)" rx="2" ry="2" />
<text  x="294.86" y="319.5" ></text>
</g>
<g >
<title>runtime.stopm (344 samples, 16.84%)</title><rect x="447.8" y="533" width="198.7" height="15.0" fill="rgb(227,139,14)" rx="2" ry="2" />
<text  x="450.81" y="543.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="178.1" y="229" width="0.6" height="15.0" fill="rgb(250,7,27)" rx="2" ry="2" />
<text  x="181.08" y="239.5" ></text>
</g>
<g >
<title>os.(*File).write (58 samples, 2.84%)</title><rect x="301.1" y="357" width="33.5" height="15.0" fill="rgb(245,18,33)" rx="2" ry="2" />
<text  x="304.10" y="367.5" >os..</text>
</g>
<g >
<title>encoding/gob.(*encoderState).encodeUint (1 samples, 0.05%)</title><rect x="119.7" y="293" width="0.6" height="15.0" fill="rgb(209,10,10)" rx="2" ry="2" />
<text  x="122.74" y="303.5" ></text>
</g>
<g >
<title>runtime.gosched_m (6 samples, 0.29%)</title><rect x="647.1" y="549" width="3.4" height="15.0" fill="rgb(232,94,22)" rx="2" ry="2" />
<text  x="650.07" y="559.5" ></text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="141.1" y="421" width="0.6" height="15.0" fill="rgb(219,126,27)" rx="2" ry="2" />
<text  x="144.11" y="431.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func3 (7 samples, 0.34%)</title><rect x="194.8" y="261" width="4.1" height="15.0" fill="rgb(221,112,48)" rx="2" ry="2" />
<text  x="197.83" y="271.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.05%)</title><rect x="149.8" y="245" width="0.6" height="15.0" fill="rgb(226,8,39)" rx="2" ry="2" />
<text  x="152.77" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign (3 samples, 0.15%)</title><rect x="207.5" y="389" width="1.8" height="15.0" fill="rgb(246,172,24)" rx="2" ry="2" />
<text  x="210.53" y="399.5" ></text>
</g>
<g >
<title>reflect.New (2 samples, 0.10%)</title><rect x="145.2" y="261" width="1.1" height="15.0" fill="rgb(218,99,20)" rx="2" ry="2" />
<text  x="148.15" y="271.5" ></text>
</g>
<g >
<title>runtime.stackpoolfree (1 samples, 0.05%)</title><rect x="382.0" y="421" width="0.5" height="15.0" fill="rgb(241,159,44)" rx="2" ry="2" />
<text  x="384.96" y="431.5" ></text>
</g>
<g >
<title>syscall.read (78 samples, 3.82%)</title><rect x="215.6" y="357" width="45.1" height="15.0" fill="rgb(206,10,45)" rx="2" ry="2" />
<text  x="218.62" y="367.5" >sysc..</text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="343.8" y="389" width="0.6" height="15.0" fill="rgb(234,2,9)" rx="2" ry="2" />
<text  x="346.84" y="399.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.05%)</title><rect x="339.8" y="245" width="0.6" height="15.0" fill="rgb(215,78,3)" rx="2" ry="2" />
<text  x="342.80" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.20%)</title><rect x="647.7" y="485" width="2.3" height="15.0" fill="rgb(211,174,45)" rx="2" ry="2" />
<text  x="650.65" y="495.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.10%)</title><rect x="1184.2" y="453" width="1.2" height="15.0" fill="rgb(248,115,43)" rx="2" ry="2" />
<text  x="1187.22" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="204.1" y="261" width="0.5" height="15.0" fill="rgb(249,183,19)" rx="2" ry="2" />
<text  x="207.07" y="271.5" ></text>
</g>
<g >
<title>runtime.aeshash32 (1 samples, 0.05%)</title><rect x="179.8" y="277" width="0.6" height="15.0" fill="rgb(217,29,35)" rx="2" ry="2" />
<text  x="182.81" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (6 samples, 0.29%)</title><rect x="103.6" y="405" width="3.4" height="15.0" fill="rgb(226,199,48)" rx="2" ry="2" />
<text  x="106.57" y="415.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.10%)</title><rect x="341.5" y="341" width="1.2" height="15.0" fill="rgb(218,135,9)" rx="2" ry="2" />
<text  x="344.53" y="351.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.05%)</title><rect x="388.9" y="373" width="0.6" height="15.0" fill="rgb(220,126,23)" rx="2" ry="2" />
<text  x="391.89" y="383.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.10%)</title><rect x="1188.3" y="533" width="1.1" height="15.0" fill="rgb(240,93,8)" rx="2" ry="2" />
<text  x="1191.27" y="543.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="763.2" y="437" width="0.5" height="15.0" fill="rgb(236,104,28)" rx="2" ry="2" />
<text  x="766.17" y="447.5" ></text>
</g>
<g >
<title>runtime.newdefer.func1 (1 samples, 0.05%)</title><rect x="341.0" y="341" width="0.5" height="15.0" fill="rgb(249,36,12)" rx="2" ry="2" />
<text  x="343.95" y="351.5" ></text>
</g>
<g >
<title>syscall.write (58 samples, 2.84%)</title><rect x="301.1" y="309" width="33.5" height="15.0" fill="rgb(225,102,43)" rx="2" ry="2" />
<text  x="304.10" y="319.5" >sy..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="197.7" y="101" width="0.6" height="15.0" fill="rgb(206,135,31)" rx="2" ry="2" />
<text  x="200.71" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="207.0" y="325" width="0.5" height="15.0" fill="rgb(222,79,26)" rx="2" ry="2" />
<text  x="209.96" y="335.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (5 samples, 0.24%)</title><rect x="296.5" y="325" width="2.9" height="15.0" fill="rgb(225,21,48)" rx="2" ry="2" />
<text  x="299.48" y="335.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="115.7" y="229" width="0.6" height="15.0" fill="rgb(207,36,10)" rx="2" ry="2" />
<text  x="118.70" y="239.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.10%)</title><rect x="168.3" y="85" width="1.1" height="15.0" fill="rgb(219,110,49)" rx="2" ry="2" />
<text  x="171.26" y="95.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func5 (20 samples, 0.98%)</title><rect x="194.2" y="389" width="11.6" height="15.0" fill="rgb(241,166,32)" rx="2" ry="2" />
<text  x="197.25" y="399.5" ></text>
</g>
<g >
<title>runtime.semawakeup (603 samples, 29.52%)</title><rect x="793.8" y="469" width="348.3" height="15.0" fill="rgb(229,89,40)" rx="2" ry="2" />
<text  x="796.78" y="479.5" >runtime.semawakeup</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="157.9" y="37" width="0.5" height="15.0" fill="rgb(206,8,21)" rx="2" ry="2" />
<text  x="160.86" y="47.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.05%)</title><rect x="300.5" y="277" width="0.6" height="15.0" fill="rgb(254,109,26)" rx="2" ry="2" />
<text  x="303.52" y="287.5" ></text>
</g>
<g >
<title>runtime.interequal (1 samples, 0.05%)</title><rect x="10.6" y="485" width="0.6" height="15.0" fill="rgb(208,4,44)" rx="2" ry="2" />
<text  x="13.58" y="495.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Field (3 samples, 0.15%)</title><rect x="135.3" y="373" width="1.8" height="15.0" fill="rgb(224,167,39)" rx="2" ry="2" />
<text  x="138.34" y="383.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="119.2" y="213" width="0.5" height="15.0" fill="rgb(250,217,27)" rx="2" ry="2" />
<text  x="122.16" y="223.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="13.5" y="533" width="0.5" height="15.0" fill="rgb(243,157,44)" rx="2" ry="2" />
<text  x="16.47" y="543.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="130.7" y="309" width="0.6" height="15.0" fill="rgb(251,125,4)" rx="2" ry="2" />
<text  x="133.71" y="319.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.05%)</title><rect x="1185.4" y="501" width="0.6" height="15.0" fill="rgb(242,107,6)" rx="2" ry="2" />
<text  x="1188.38" y="511.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.05%)</title><rect x="98.4" y="389" width="0.5" height="15.0" fill="rgb(238,186,53)" rx="2" ry="2" />
<text  x="101.37" y="399.5" ></text>
</g>
<g >
<title>runtime.memequal64 (1 samples, 0.05%)</title><rect x="183.9" y="229" width="0.5" height="15.0" fill="rgb(240,103,38)" rx="2" ry="2" />
<text  x="186.85" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.05%)</title><rect x="131.9" y="341" width="0.5" height="15.0" fill="rgb(205,146,37)" rx="2" ry="2" />
<text  x="134.87" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (19 samples, 0.93%)</title><rect x="763.7" y="485" width="11.0" height="15.0" fill="rgb(241,17,17)" rx="2" ry="2" />
<text  x="766.74" y="495.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.05%)</title><rect x="339.8" y="341" width="0.6" height="15.0" fill="rgb(218,80,27)" rx="2" ry="2" />
<text  x="342.80" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.05%)</title><rect x="200.6" y="245" width="0.6" height="15.0" fill="rgb(226,21,11)" rx="2" ry="2" />
<text  x="203.60" y="255.5" ></text>
</g>
<g >
<title>runtime.scang (26 samples, 1.27%)</title><rect x="1142.1" y="453" width="15.0" height="15.0" fill="rgb(208,61,44)" rx="2" ry="2" />
<text  x="1145.06" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="179.2" y="229" width="0.6" height="15.0" fill="rgb(232,78,46)" rx="2" ry="2" />
<text  x="182.23" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (65 samples, 3.18%)</title><rect x="410.3" y="533" width="37.5" height="15.0" fill="rgb(223,183,5)" rx="2" ry="2" />
<text  x="413.26" y="543.5" >run..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="207.0" y="261" width="0.5" height="15.0" fill="rgb(250,77,19)" rx="2" ry="2" />
<text  x="209.96" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.34%)</title><rect x="654.0" y="469" width="4.0" height="15.0" fill="rgb(229,227,6)" rx="2" ry="2" />
<text  x="657.00" y="479.5" ></text>
</g>
<g >
<title>net/http.readRequest (87 samples, 4.26%)</title><rect x="16.4" y="533" width="50.2" height="15.0" fill="rgb(233,131,26)" rx="2" ry="2" />
<text  x="19.35" y="543.5" >net/h..</text>
</g>
<g >
<title>runtime.concatstrings (2 samples, 0.10%)</title><rect x="187.3" y="309" width="1.2" height="15.0" fill="rgb(220,160,26)" rx="2" ry="2" />
<text  x="190.32" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="124.4" y="277" width="0.5" height="15.0" fill="rgb(221,139,8)" rx="2" ry="2" />
<text  x="127.36" y="287.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.05%)</title><rect x="98.4" y="357" width="0.5" height="15.0" fill="rgb(234,123,33)" rx="2" ry="2" />
<text  x="101.37" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="205.2" y="277" width="0.6" height="15.0" fill="rgb(230,161,40)" rx="2" ry="2" />
<text  x="208.22" y="287.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decOpFor.func4 (8 samples, 0.39%)</title><rect x="144.0" y="357" width="4.6" height="15.0" fill="rgb(236,178,31)" rx="2" ry="2" />
<text  x="147.00" y="367.5" ></text>
</g>
<g >
<title>runtime.usleep (16 samples, 0.78%)</title><rect x="1157.1" y="341" width="9.2" height="15.0" fill="rgb(229,120,23)" rx="2" ry="2" />
<text  x="1160.08" y="351.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.05%)</title><rect x="171.1" y="101" width="0.6" height="15.0" fill="rgb(237,161,47)" rx="2" ry="2" />
<text  x="174.15" y="111.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.(*MutexWrap).Lock (9 samples, 0.44%)</title><rect x="334.6" y="389" width="5.2" height="15.0" fill="rgb(228,138,29)" rx="2" ry="2" />
<text  x="337.60" y="399.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (2 samples, 0.10%)</title><rect x="196.6" y="181" width="1.1" height="15.0" fill="rgb(211,207,33)" rx="2" ry="2" />
<text  x="199.56" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.34%)</title><rect x="433.4" y="469" width="4.0" height="15.0" fill="rgb(221,9,48)" rx="2" ry="2" />
<text  x="436.37" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.10%)</title><rect x="70.6" y="517" width="1.2" height="15.0" fill="rgb(212,226,29)" rx="2" ry="2" />
<text  x="73.65" y="527.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.10%)</title><rect x="211.0" y="389" width="1.2" height="15.0" fill="rgb(243,46,35)" rx="2" ry="2" />
<text  x="214.00" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (4 samples, 0.20%)</title><rect x="346.7" y="453" width="2.3" height="15.0" fill="rgb(223,3,27)" rx="2" ry="2" />
<text  x="349.73" y="463.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="403.9" y="421" width="0.6" height="15.0" fill="rgb(235,28,13)" rx="2" ry="2" />
<text  x="406.91" y="431.5" ></text>
</g>
<g >
<title>syscall.syscall (21 samples, 1.03%)</title><rect x="358.9" y="469" width="12.1" height="15.0" fill="rgb(213,208,30)" rx="2" ry="2" />
<text  x="361.86" y="479.5" ></text>
</g>
<g >
<title>github.com/sirupsen/logrus.init.0.func1 (1 samples, 0.05%)</title><rect x="340.4" y="357" width="0.6" height="15.0" fill="rgb(215,41,12)" rx="2" ry="2" />
<text  x="343.38" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (22 samples, 1.08%)</title><rect x="159.0" y="181" width="12.7" height="15.0" fill="rgb(225,51,30)" rx="2" ry="2" />
<text  x="162.02" y="191.5" ></text>
</g>
<g >
<title>runtime.stackfree (25 samples, 1.22%)</title><rect x="1166.3" y="405" width="14.5" height="15.0" fill="rgb(238,207,10)" rx="2" ry="2" />
<text  x="1169.32" y="415.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.05%)</title><rect x="351.4" y="293" width="0.5" height="15.0" fill="rgb(223,35,42)" rx="2" ry="2" />
<text  x="354.35" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (6 samples, 0.29%)</title><rect x="103.6" y="421" width="3.4" height="15.0" fill="rgb(205,145,24)" rx="2" ry="2" />
<text  x="106.57" y="431.5" ></text>
</g>
<g >
<title>reflect.Value.NumField (1 samples, 0.05%)</title><rect x="108.8" y="325" width="0.5" height="15.0" fill="rgb(245,40,19)" rx="2" ry="2" />
<text  x="111.77" y="335.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="102.4" y="405" width="0.6" height="15.0" fill="rgb(219,133,27)" rx="2" ry="2" />
<text  x="105.41" y="415.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (3 samples, 0.15%)</title><rect x="97.8" y="501" width="1.7" height="15.0" fill="rgb(251,99,23)" rx="2" ry="2" />
<text  x="100.79" y="511.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.05%)</title><rect x="1156.5" y="325" width="0.6" height="15.0" fill="rgb(232,120,46)" rx="2" ry="2" />
<text  x="1159.50" y="335.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (4 samples, 0.20%)</title><rect x="10.6" y="533" width="2.3" height="15.0" fill="rgb(215,9,53)" rx="2" ry="2" />
<text  x="13.58" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.10%)</title><rect x="211.0" y="405" width="1.2" height="15.0" fill="rgb(241,178,22)" rx="2" ry="2" />
<text  x="214.00" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (23 samples, 1.13%)</title><rect x="158.4" y="197" width="13.3" height="15.0" fill="rgb(240,218,17)" rx="2" ry="2" />
<text  x="161.44" y="207.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.05%)</title><rect x="123.2" y="389" width="0.6" height="15.0" fill="rgb(238,213,6)" rx="2" ry="2" />
<text  x="126.21" y="399.5" ></text>
</g>
<g >
<title>runtime.park_m (196 samples, 9.59%)</title><rect x="650.5" y="549" width="113.2" height="15.0" fill="rgb(229,89,27)" rx="2" ry="2" />
<text  x="653.54" y="559.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="131.9" y="325" width="0.5" height="15.0" fill="rgb(250,71,5)" rx="2" ry="2" />
<text  x="134.87" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (1 samples, 0.05%)</title><rect x="132.4" y="341" width="0.6" height="15.0" fill="rgb(247,79,15)" rx="2" ry="2" />
<text  x="135.45" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="209.8" y="405" width="0.6" height="15.0" fill="rgb(224,101,40)" rx="2" ry="2" />
<text  x="212.84" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="71.2" y="469" width="0.6" height="15.0" fill="rgb(216,177,54)" rx="2" ry="2" />
<text  x="74.22" y="479.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="185.6" y="309" width="0.6" height="15.0" fill="rgb(220,47,23)" rx="2" ry="2" />
<text  x="188.58" y="319.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (1 samples, 0.05%)</title><rect x="291.9" y="325" width="0.5" height="15.0" fill="rgb(231,176,28)" rx="2" ry="2" />
<text  x="294.86" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (11 samples, 0.54%)</title><rect x="261.2" y="437" width="6.4" height="15.0" fill="rgb(250,104,26)" rx="2" ry="2" />
<text  x="264.25" y="447.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.05%)</title><rect x="204.1" y="277" width="0.5" height="15.0" fill="rgb(244,160,37)" rx="2" ry="2" />
<text  x="207.07" y="287.5" ></text>
</g>
<g >
<title>reflect.flag.mustBe (1 samples, 0.05%)</title><rect x="115.1" y="261" width="0.6" height="15.0" fill="rgb(228,37,26)" rx="2" ry="2" />
<text  x="118.12" y="271.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1 samples, 0.05%)</title><rect x="297.6" y="277" width="0.6" height="15.0" fill="rgb(211,207,0)" rx="2" ry="2" />
<text  x="300.64" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.05%)</title><rect x="70.1" y="501" width="0.5" height="15.0" fill="rgb(214,167,10)" rx="2" ry="2" />
<text  x="73.07" y="511.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.05%)</title><rect x="371.6" y="389" width="0.5" height="15.0" fill="rgb(217,166,36)" rx="2" ry="2" />
<text  x="374.57" y="399.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 0.15%)</title><rect x="288.4" y="485" width="1.7" height="15.0" fill="rgb(225,116,30)" rx="2" ry="2" />
<text  x="291.39" y="495.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.05%)</title><rect x="149.8" y="293" width="0.6" height="15.0" fill="rgb(216,58,34)" rx="2" ry="2" />
<text  x="152.77" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.encOpFor.func4 (8 samples, 0.39%)</title><rect x="109.3" y="213" width="4.7" height="15.0" fill="rgb(248,199,23)" rx="2" ry="2" />
<text  x="112.34" y="223.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.05%)</title><rect x="183.9" y="245" width="0.5" height="15.0" fill="rgb(211,29,39)" rx="2" ry="2" />
<text  x="186.85" y="255.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (1 samples, 0.05%)</title><rect x="342.1" y="325" width="0.6" height="15.0" fill="rgb(227,157,4)" rx="2" ry="2" />
<text  x="345.11" y="335.5" ></text>
</g>
<g >
<title>runtime.gentraceback (12 samples, 0.59%)</title><rect x="383.7" y="437" width="6.9" height="15.0" fill="rgb(212,53,9)" rx="2" ry="2" />
<text  x="386.70" y="447.5" ></text>
</g>
<g >
<title>encoding/gob.lookupTypeInfo (1 samples, 0.05%)</title><rect x="115.7" y="261" width="0.6" height="15.0" fill="rgb(250,218,8)" rx="2" ry="2" />
<text  x="118.70" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="186.7" y="293" width="0.6" height="15.0" fill="rgb(245,41,8)" rx="2" ry="2" />
<text  x="189.74" y="303.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeStruct (10 samples, 0.49%)</title><rect x="109.3" y="261" width="5.8" height="15.0" fill="rgb(208,16,36)" rx="2" ry="2" />
<text  x="112.34" y="271.5" ></text>
</g>
<g >
<title>runtime.injectglist (3 samples, 0.15%)</title><rect x="651.7" y="501" width="1.7" height="15.0" fill="rgb(207,121,44)" rx="2" ry="2" />
<text  x="654.69" y="511.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.05%)</title><rect x="1183.1" y="501" width="0.5" height="15.0" fill="rgb(251,13,13)" rx="2" ry="2" />
<text  x="1186.07" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeSlice (7 samples, 0.34%)</title><rect x="194.8" y="245" width="4.1" height="15.0" fill="rgb(218,50,42)" rx="2" ry="2" />
<text  x="197.83" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="292.4" y="357" width="0.6" height="15.0" fill="rgb(242,111,37)" rx="2" ry="2" />
<text  x="295.44" y="367.5" ></text>
</g>
<g >
<title>EntryTask/rpc/client.RpcClient.Call (321 samples, 15.71%)</title><rect x="103.0" y="485" width="185.4" height="15.0" fill="rgb(225,18,41)" rx="2" ry="2" />
<text  x="105.99" y="495.5" >EntryTask/rpc/client.Rpc..</text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.05%)</title><rect x="124.4" y="197" width="0.5" height="15.0" fill="rgb(233,209,54)" rx="2" ry="2" />
<text  x="127.36" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="197.7" y="133" width="0.6" height="15.0" fill="rgb(215,23,34)" rx="2" ry="2" />
<text  x="200.71" y="143.5" ></text>
</g>
<g >
<title>runtime.mapassign (1 samples, 0.05%)</title><rect x="185.6" y="325" width="0.6" height="15.0" fill="rgb(245,118,5)" rx="2" ry="2" />
<text  x="188.58" y="335.5" ></text>
</g>
<g >
<title>runtime.adjustpointers (1 samples, 0.05%)</title><rect x="161.3" y="85" width="0.6" height="15.0" fill="rgb(207,73,43)" rx="2" ry="2" />
<text  x="164.33" y="95.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.10%)</title><rect x="446.7" y="517" width="1.1" height="15.0" fill="rgb(247,52,50)" rx="2" ry="2" />
<text  x="449.65" y="527.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).compileDec (31 samples, 1.52%)</title><rect x="155.6" y="261" width="17.9" height="15.0" fill="rgb(232,88,30)" rx="2" ry="2" />
<text  x="158.55" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.05%)</title><rect x="382.0" y="549" width="0.5" height="15.0" fill="rgb(226,117,13)" rx="2" ry="2" />
<text  x="384.96" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="145.2" y="197" width="0.5" height="15.0" fill="rgb(214,38,36)" rx="2" ry="2" />
<text  x="148.15" y="207.5" ></text>
</g>
<g >
<title>encoding/gob.(*decBuffer).Size (2 samples, 0.10%)</title><rect x="142.8" y="373" width="1.2" height="15.0" fill="rgb(246,20,49)" rx="2" ry="2" />
<text  x="145.84" y="383.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.10%)</title><rect x="785.1" y="485" width="1.2" height="15.0" fill="rgb(244,215,15)" rx="2" ry="2" />
<text  x="788.12" y="495.5" ></text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.10%)</title><rect x="211.0" y="341" width="1.2" height="15.0" fill="rgb(237,70,40)" rx="2" ry="2" />
<text  x="214.00" y="351.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.24%)</title><rect x="164.2" y="69" width="2.9" height="15.0" fill="rgb(207,97,17)" rx="2" ry="2" />
<text  x="167.21" y="79.5" ></text>
</g>
<g >
<title>encoding/gob.(*Encoder).encodeArray (9 samples, 0.44%)</title><rect x="109.3" y="229" width="5.2" height="15.0" fill="rgb(207,227,43)" rx="2" ry="2" />
<text  x="112.34" y="239.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.10%)</title><rect x="386.0" y="389" width="1.2" height="15.0" fill="rgb(225,106,40)" rx="2" ry="2" />
<text  x="389.01" y="399.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (56 samples, 2.74%)</title><rect x="150.4" y="325" width="32.3" height="15.0" fill="rgb(222,76,48)" rx="2" ry="2" />
<text  x="153.35" y="335.5" >en..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="197.7" y="117" width="0.6" height="15.0" fill="rgb(212,194,52)" rx="2" ry="2" />
<text  x="200.71" y="127.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (43 samples, 2.10%)</title><rect x="72.4" y="533" width="24.8" height="15.0" fill="rgb(223,186,21)" rx="2" ry="2" />
<text  x="75.38" y="543.5" >b..</text>
</g>
<g >
<title>encoding/gob.(*Decoder).decodeArrayHelper (5 samples, 0.24%)</title><rect x="194.8" y="229" width="2.9" height="15.0" fill="rgb(250,61,34)" rx="2" ry="2" />
<text  x="197.83" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="154.4" y="165" width="0.6" height="15.0" fill="rgb(225,104,25)" rx="2" ry="2" />
<text  x="157.40" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="143.4" y="325" width="0.6" height="15.0" fill="rgb(248,52,24)" rx="2" ry="2" />
<text  x="146.42" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="289.0" y="405" width="0.5" height="15.0" fill="rgb(223,171,17)" rx="2" ry="2" />
<text  x="291.97" y="415.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (1 samples, 0.05%)</title><rect x="63.1" y="501" width="0.6" height="15.0" fill="rgb(244,193,40)" rx="2" ry="2" />
<text  x="66.14" y="511.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).recvType (87 samples, 4.26%)</title><rect x="144.0" y="405" width="50.2" height="15.0" fill="rgb(237,99,38)" rx="2" ry="2" />
<text  x="147.00" y="415.5" >encod..</text>
</g>
<g >
<title>encoding/gob.getEncEngine (1 samples, 0.05%)</title><rect x="115.7" y="293" width="0.6" height="15.0" fill="rgb(238,144,13)" rx="2" ry="2" />
<text  x="118.70" y="303.5" ></text>
</g>
<g >
<title>syscall.SetNonblock (1 samples, 0.05%)</title><rect x="402.8" y="389" width="0.5" height="15.0" fill="rgb(246,169,28)" rx="2" ry="2" />
<text  x="405.76" y="399.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.05%)</title><rect x="645.3" y="485" width="0.6" height="15.0" fill="rgb(207,199,15)" rx="2" ry="2" />
<text  x="648.34" y="495.5" ></text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="122.6" y="325" width="0.6" height="15.0" fill="rgb(251,99,51)" rx="2" ry="2" />
<text  x="125.63" y="335.5" ></text>
</g>
<g >
<title>encoding/gob.(*Decoder).getDecEnginePtr (76 samples, 3.72%)</title><rect x="149.2" y="373" width="43.9" height="15.0" fill="rgb(237,50,15)" rx="2" ry="2" />
<text  x="152.20" y="383.5" >enco..</text>
</g>
<g >
<title>EntryTask/rpc/network.Read (94 samples, 4.60%)</title><rect x="213.3" y="469" width="54.3" height="15.0" fill="rgb(231,6,5)" rx="2" ry="2" />
<text  x="216.31" y="479.5" >Entry..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="343.3" y="437" width="0.5" height="15.0" fill="rgb(231,217,28)" rx="2" ry="2" />
<text  x="346.26" y="447.5" ></text>
</g>
<g >
<title>encoding/gob.userType (1 samples, 0.05%)</title><rect x="198.9" y="309" width="0.5" height="15.0" fill="rgb(240,215,40)" rx="2" ry="2" />
<text  x="201.87" y="319.5" ></text>
</g>
<g >
<title>runtime.newarray (2 samples, 0.10%)</title><rect x="197.7" y="197" width="1.2" height="15.0" fill="rgb(221,91,32)" rx="2" ry="2" />
<text  x="200.71" y="207.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.05%)</title><rect x="295.3" y="341" width="0.6" height="15.0" fill="rgb(228,73,10)" rx="2" ry="2" />
<text  x="298.33" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="182.1" y="293" width="0.6" height="15.0" fill="rgb(210,54,12)" rx="2" ry="2" />
<text  x="185.12" y="303.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.05%)</title><rect x="64.3" y="501" width="0.6" height="15.0" fill="rgb(231,116,39)" rx="2" ry="2" />
<text  x="67.29" y="511.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.20%)</title><rect x="1180.8" y="485" width="2.3" height="15.0" fill="rgb(250,110,36)" rx="2" ry="2" />
<text  x="1183.76" y="495.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (3 samples, 0.15%)</title><rect x="97.8" y="517" width="1.7" height="15.0" fill="rgb(249,123,40)" rx="2" ry="2" />
<text  x="100.79" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="68.3" y="501" width="0.6" height="15.0" fill="rgb(239,50,19)" rx="2" ry="2" />
<text  x="71.34" y="511.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.05%)</title><rect x="15.8" y="437" width="0.6" height="15.0" fill="rgb(236,28,22)" rx="2" ry="2" />
<text  x="18.78" y="447.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (9 samples, 0.44%)</title><rect x="334.6" y="373" width="5.2" height="15.0" fill="rgb(250,215,48)" rx="2" ry="2" />
<text  x="337.60" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (26 samples, 1.27%)</title><rect x="1142.1" y="501" width="15.0" height="15.0" fill="rgb(236,73,8)" rx="2" ry="2" />
<text  x="1145.06" y="511.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (11 samples, 0.54%)</title><rect x="1142.1" y="373" width="6.3" height="15.0" fill="rgb(214,225,48)" rx="2" ry="2" />
<text  x="1145.06" y="383.5" ></text>
</g>
</g>
</svg>
