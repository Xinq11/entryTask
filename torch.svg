<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>runtime.semawakeup (2 samples, 0.01%)</title><rect x="1187.7" y="309" width="0.1" height="15.0" fill="rgb(248,117,1)" rx="2" ry="2" />
<text  x="1190.69" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (5,130 samples, 32.44%)</title><rect x="804.9" y="325" width="382.8" height="15.0" fill="rgb(235,112,44)" rx="2" ry="2" />
<text  x="807.88" y="335.5" >runtime.notewakeup</text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.01%)</title><rect x="328.0" y="229" width="0.2" height="15.0" fill="rgb(226,36,6)" rx="2" ry="2" />
<text  x="331.04" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1,341 samples, 8.48%)</title><rect x="13.7" y="229" width="100.0" height="15.0" fill="rgb(213,70,25)" rx="2" ry="2" />
<text  x="16.66" y="239.5" >internal/pol..</text>
</g>
<g >
<title>sync/atomic.(*Value).Store (4 samples, 0.03%)</title><rect x="230.3" y="389" width="0.3" height="15.0" fill="rgb(221,13,43)" rx="2" ry="2" />
<text  x="233.28" y="399.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).shouldRedirectRLocked (9 samples, 0.06%)</title><rect x="227.1" y="325" width="0.6" height="15.0" fill="rgb(231,118,19)" rx="2" ry="2" />
<text  x="230.08" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (1,347 samples, 8.52%)</title><rect x="13.7" y="309" width="100.5" height="15.0" fill="rgb(219,185,46)" rx="2" ry="2" />
<text  x="16.66" y="319.5" >bufio.(*Read..</text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.01%)</title><rect x="328.0" y="213" width="0.2" height="15.0" fill="rgb(224,224,4)" rx="2" ry="2" />
<text  x="331.04" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.Set (4 samples, 0.03%)</title><rect x="229.9" y="325" width="0.3" height="15.0" fill="rgb(208,207,5)" rx="2" ry="2" />
<text  x="232.91" y="335.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.01%)</title><rect x="328.0" y="197" width="0.2" height="15.0" fill="rgb(233,62,35)" rx="2" ry="2" />
<text  x="331.04" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (2 samples, 0.01%)</title><rect x="225.4" y="293" width="0.2" height="15.0" fill="rgb(232,76,14)" rx="2" ry="2" />
<text  x="228.43" y="303.5" ></text>
</g>
<g >
<title>net/http.(*response).WriteHeader (9 samples, 0.06%)</title><rect x="229.2" y="293" width="0.7" height="15.0" fill="rgb(222,190,29)" rx="2" ry="2" />
<text  x="232.24" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.01%)</title><rect x="229.9" y="149" width="0.2" height="15.0" fill="rgb(246,132,17)" rx="2" ry="2" />
<text  x="232.91" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (10 samples, 0.06%)</title><rect x="333.9" y="341" width="0.8" height="15.0" fill="rgb(248,174,2)" rx="2" ry="2" />
<text  x="336.93" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="113.4" y="149" width="0.2" height="15.0" fill="rgb(249,15,54)" rx="2" ry="2" />
<text  x="116.35" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="12.8" y="277" width="0.1" height="15.0" fill="rgb(242,16,23)" rx="2" ry="2" />
<text  x="15.76" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="798.2" y="325" width="0.1" height="15.0" fill="rgb(224,3,45)" rx="2" ry="2" />
<text  x="801.16" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (4 samples, 0.03%)</title><rect x="1110.9" y="293" width="0.3" height="15.0" fill="rgb(229,45,21)" rx="2" ry="2" />
<text  x="1113.90" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Write (1,372 samples, 8.68%)</title><rect x="122.5" y="341" width="102.3" height="15.0" fill="rgb(207,180,46)" rx="2" ry="2" />
<text  x="125.46" y="351.5" >net.(*conn)...</text>
</g>
<g >
<title>runtime.semawakeup (5,130 samples, 32.44%)</title><rect x="804.9" y="309" width="382.8" height="15.0" fill="rgb(238,94,9)" rx="2" ry="2" />
<text  x="807.88" y="319.5" >runtime.semawakeup</text>
</g>
<g >
<title>sync.(*Pool).Get (2 samples, 0.01%)</title><rect x="12.9" y="341" width="0.2" height="15.0" fill="rgb(253,208,31)" rx="2" ry="2" />
<text  x="15.91" y="351.5" ></text>
</g>
<g >
<title>time.now (6 samples, 0.04%)</title><rect x="119.3" y="357" width="0.5" height="15.0" fill="rgb(248,133,17)" rx="2" ry="2" />
<text  x="122.32" y="367.5" ></text>
</g>
<g >
<title>runtime.gcDrain (3 samples, 0.02%)</title><rect x="1187.9" y="357" width="0.2" height="15.0" fill="rgb(232,87,16)" rx="2" ry="2" />
<text  x="1190.91" y="367.5" ></text>
</g>
<g >
<title>runtime.notesleep (25 samples, 0.16%)</title><rect x="336.0" y="325" width="1.9" height="15.0" fill="rgb(245,204,3)" rx="2" ry="2" />
<text  x="339.02" y="335.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.01%)</title><rect x="231.2" y="325" width="0.1" height="15.0" fill="rgb(220,61,20)" rx="2" ry="2" />
<text  x="234.18" y="335.5" ></text>
</g>
<g >
<title>runtime.save (2 samples, 0.01%)</title><rect x="113.2" y="149" width="0.2" height="15.0" fill="rgb(240,152,7)" rx="2" ry="2" />
<text  x="116.20" y="159.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (2,956 samples, 18.69%)</title><rect x="10.0" y="405" width="220.6" height="15.0" fill="rgb(244,95,35)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.03%)</title><rect x="114.4" y="293" width="0.3" height="15.0" fill="rgb(208,9,26)" rx="2" ry="2" />
<text  x="117.40" y="303.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (3 samples, 0.02%)</title><rect x="229.9" y="293" width="0.2" height="15.0" fill="rgb(238,36,34)" rx="2" ry="2" />
<text  x="232.91" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.02%)</title><rect x="796.4" y="373" width="0.3" height="15.0" fill="rgb(222,178,20)" rx="2" ry="2" />
<text  x="799.44" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.04%)</title><rect x="114.2" y="325" width="0.5" height="15.0" fill="rgb(229,79,12)" rx="2" ry="2" />
<text  x="117.25" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1,341 samples, 8.48%)</title><rect x="13.7" y="245" width="100.0" height="15.0" fill="rgb(207,68,41)" rx="2" ry="2" />
<text  x="16.66" y="255.5" >net.(*netFD)..</text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="113.4" y="69" width="0.2" height="15.0" fill="rgb(236,157,21)" rx="2" ry="2" />
<text  x="116.35" y="79.5" ></text>
</g>
<g >
<title>syscall.read (1,338 samples, 8.46%)</title><rect x="13.9" y="197" width="99.8" height="15.0" fill="rgb(254,41,19)" rx="2" ry="2" />
<text  x="16.88" y="207.5" >syscall.read</text>
</g>
<g >
<title>runtime.deferreturn (4 samples, 0.03%)</title><rect x="10.6" y="325" width="0.3" height="15.0" fill="rgb(233,208,24)" rx="2" ry="2" />
<text  x="13.60" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (1,268 samples, 8.02%)</title><rect x="230.7" y="373" width="94.7" height="15.0" fill="rgb(253,113,38)" rx="2" ry="2" />
<text  x="233.73" y="383.5" >net.(*netFD..</text>
</g>
<g >
<title>context.(*cancelCtx).Done (2 samples, 0.01%)</title><rect x="11.4" y="341" width="0.2" height="15.0" fill="rgb(243,71,0)" rx="2" ry="2" />
<text  x="14.42" y="351.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (3 samples, 0.02%)</title><rect x="227.2" y="277" width="0.2" height="15.0" fill="rgb(218,134,29)" rx="2" ry="2" />
<text  x="230.23" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.03%)</title><rect x="116.0" y="309" width="0.3" height="15.0" fill="rgb(245,61,46)" rx="2" ry="2" />
<text  x="119.04" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.01%)</title><rect x="325.4" y="309" width="0.2" height="15.0" fill="rgb(209,161,11)" rx="2" ry="2" />
<text  x="328.43" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (6 samples, 0.04%)</title><rect x="327.8" y="277" width="0.5" height="15.0" fill="rgb(235,67,47)" rx="2" ry="2" />
<text  x="330.82" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (5,216 samples, 32.99%)</title><rect x="798.6" y="373" width="389.2" height="15.0" fill="rgb(253,162,4)" rx="2" ry="2" />
<text  x="801.61" y="383.5" >runtime.entersyscallblock_handoff</text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.03%)</title><rect x="335.0" y="325" width="0.3" height="15.0" fill="rgb(252,167,38)" rx="2" ry="2" />
<text  x="337.98" y="335.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (20 samples, 0.13%)</title><rect x="327.6" y="405" width="1.5" height="15.0" fill="rgb(210,0,42)" rx="2" ry="2" />
<text  x="330.59" y="415.5" ></text>
</g>
<g >
<title>runtime.unlock (5 samples, 0.03%)</title><rect x="335.5" y="341" width="0.4" height="15.0" fill="rgb(206,215,2)" rx="2" ry="2" />
<text  x="338.50" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.02%)</title><rect x="325.4" y="373" width="0.2" height="15.0" fill="rgb(253,212,48)" rx="2" ry="2" />
<text  x="328.35" y="383.5" ></text>
</g>
<g >
<title>syscall.write (1,363 samples, 8.62%)</title><rect x="123.1" y="277" width="101.7" height="15.0" fill="rgb(225,122,0)" rx="2" ry="2" />
<text  x="126.13" y="287.5" >syscall.write</text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (29 samples, 0.18%)</title><rect x="228.1" y="357" width="2.2" height="15.0" fill="rgb(218,64,0)" rx="2" ry="2" />
<text  x="231.12" y="367.5" ></text>
</g>
<g >
<title>runtime.memequal (3 samples, 0.02%)</title><rect x="227.5" y="293" width="0.2" height="15.0" fill="rgb(207,146,46)" rx="2" ry="2" />
<text  x="230.52" y="303.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.02%)</title><rect x="114.5" y="229" width="0.2" height="15.0" fill="rgb(210,2,31)" rx="2" ry="2" />
<text  x="117.47" y="239.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (16 samples, 0.10%)</title><rect x="225.2" y="357" width="1.2" height="15.0" fill="rgb(208,91,7)" rx="2" ry="2" />
<text  x="228.21" y="367.5" ></text>
</g>
<g >
<title>runtime.mapassign (2 samples, 0.01%)</title><rect x="11.6" y="341" width="0.1" height="15.0" fill="rgb(245,114,20)" rx="2" ry="2" />
<text  x="14.57" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.01%)</title><rect x="1187.7" y="325" width="0.1" height="15.0" fill="rgb(230,154,43)" rx="2" ry="2" />
<text  x="1190.69" y="335.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.01%)</title><rect x="224.5" y="181" width="0.2" height="15.0" fill="rgb(246,162,41)" rx="2" ry="2" />
<text  x="227.54" y="191.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (2 samples, 0.01%)</title><rect x="228.3" y="229" width="0.2" height="15.0" fill="rgb(238,37,27)" rx="2" ry="2" />
<text  x="231.34" y="239.5" ></text>
</g>
<g >
<title>runtime.runqget (2 samples, 0.01%)</title><rect x="338.0" y="357" width="0.1" height="15.0" fill="rgb(227,127,18)" rx="2" ry="2" />
<text  x="340.96" y="367.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (1,347 samples, 8.52%)</title><rect x="13.7" y="325" width="100.5" height="15.0" fill="rgb(211,38,50)" rx="2" ry="2" />
<text  x="16.66" y="335.5" >bufio.(*Read..</text>
</g>
<g >
<title>time.now (6 samples, 0.04%)</title><rect x="121.9" y="309" width="0.5" height="15.0" fill="rgb(244,178,31)" rx="2" ry="2" />
<text  x="124.93" y="319.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (2 samples, 0.01%)</title><rect x="227.3" y="229" width="0.1" height="15.0" fill="rgb(223,48,3)" rx="2" ry="2" />
<text  x="230.30" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (5 samples, 0.03%)</title><rect x="119.4" y="341" width="0.4" height="15.0" fill="rgb(244,201,48)" rx="2" ry="2" />
<text  x="122.40" y="351.5" ></text>
</g>
<g >
<title>path.Clean (3 samples, 0.02%)</title><rect x="227.7" y="325" width="0.3" height="15.0" fill="rgb(218,15,32)" rx="2" ry="2" />
<text  x="230.75" y="335.5" ></text>
</g>
<g >
<title>runtime.notetsleep (13 samples, 0.08%)</title><rect x="1188.1" y="341" width="1.0" height="15.0" fill="rgb(236,196,38)" rx="2" ry="2" />
<text  x="1191.13" y="351.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (4 samples, 0.03%)</title><rect x="116.0" y="341" width="0.3" height="15.0" fill="rgb(217,36,22)" rx="2" ry="2" />
<text  x="119.04" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.01%)</title><rect x="1187.7" y="293" width="0.1" height="15.0" fill="rgb(216,80,1)" rx="2" ry="2" />
<text  x="1190.69" y="303.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (6 samples, 0.04%)</title><rect x="327.8" y="325" width="0.5" height="15.0" fill="rgb(222,195,29)" rx="2" ry="2" />
<text  x="330.82" y="335.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1,272 samples, 8.04%)</title><rect x="230.7" y="389" width="94.9" height="15.0" fill="rgb(223,68,32)" rx="2" ry="2" />
<text  x="233.66" y="399.5" >net.(*conn)..</text>
</g>
<g >
<title>net/http.(*response).Write (11 samples, 0.07%)</title><rect x="229.1" y="325" width="0.8" height="15.0" fill="rgb(219,13,41)" rx="2" ry="2" />
<text  x="232.09" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="229.9" y="165" width="0.2" height="15.0" fill="rgb(207,219,30)" rx="2" ry="2" />
<text  x="232.91" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrain (20 samples, 0.13%)</title><rect x="327.6" y="357" width="1.5" height="15.0" fill="rgb(241,152,34)" rx="2" ry="2" />
<text  x="330.59" y="367.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (25 samples, 0.16%)</title><rect x="224.8" y="373" width="1.9" height="15.0" fill="rgb(249,92,30)" rx="2" ry="2" />
<text  x="227.84" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (1,267 samples, 8.01%)</title><rect x="230.8" y="357" width="94.6" height="15.0" fill="rgb(250,78,16)" rx="2" ry="2" />
<text  x="233.81" y="367.5" >internal/po..</text>
</g>
<g >
<title>net/textproto.MIMEHeader.Set (4 samples, 0.03%)</title><rect x="229.9" y="309" width="0.3" height="15.0" fill="rgb(254,138,15)" rx="2" ry="2" />
<text  x="232.91" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1,369 samples, 8.66%)</title><rect x="122.7" y="309" width="102.1" height="15.0" fill="rgb(249,113,42)" rx="2" ry="2" />
<text  x="125.68" y="319.5" >internal/pol..</text>
</g>
<g >
<title>runtime._System (9 samples, 0.06%)</title><rect x="325.8" y="405" width="0.7" height="15.0" fill="rgb(216,69,36)" rx="2" ry="2" />
<text  x="328.80" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.01%)</title><rect x="229.9" y="181" width="0.2" height="15.0" fill="rgb(205,189,25)" rx="2" ry="2" />
<text  x="232.91" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (3 samples, 0.02%)</title><rect x="1187.9" y="373" width="0.2" height="15.0" fill="rgb(213,174,45)" rx="2" ry="2" />
<text  x="1190.91" y="383.5" ></text>
</g>
<g >
<title>runtime.deferreturn (3 samples, 0.02%)</title><rect x="226.0" y="293" width="0.3" height="15.0" fill="rgb(207,16,21)" rx="2" ry="2" />
<text  x="229.03" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (6,263 samples, 39.61%)</title><rect x="329.3" y="389" width="467.4" height="15.0" fill="rgb(251,16,44)" rx="2" ry="2" />
<text  x="332.31" y="399.5" >runtime.exitsyscall0</text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (3 samples, 0.02%)</title><rect x="225.6" y="293" width="0.2" height="15.0" fill="rgb(246,85,18)" rx="2" ry="2" />
<text  x="228.58" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (7 samples, 0.04%)</title><rect x="10.4" y="373" width="0.5" height="15.0" fill="rgb(241,76,30)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.01%)</title><rect x="119.6" y="325" width="0.2" height="15.0" fill="rgb(243,116,6)" rx="2" ry="2" />
<text  x="122.62" y="335.5" ></text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.02%)</title><rect x="797.7" y="341" width="0.2" height="15.0" fill="rgb(227,159,16)" rx="2" ry="2" />
<text  x="800.71" y="351.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (2 samples, 0.01%)</title><rect x="10.2" y="389" width="0.2" height="15.0" fill="rgb(242,28,51)" rx="2" ry="2" />
<text  x="13.22" y="399.5" ></text>
</g>
<g >
<title>runtime.mapiternext (3 samples, 0.02%)</title><rect x="118.1" y="357" width="0.3" height="15.0" fill="rgb(221,164,28)" rx="2" ry="2" />
<text  x="121.13" y="367.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).redirectToPathSlash (10 samples, 0.06%)</title><rect x="227.0" y="341" width="0.7" height="15.0" fill="rgb(218,186,30)" rx="2" ry="2" />
<text  x="230.00" y="351.5" ></text>
</g>
<g >
<title>sync.(*Cond).Broadcast (3 samples, 0.02%)</title><rect x="325.6" y="389" width="0.2" height="15.0" fill="rgb(222,118,42)" rx="2" ry="2" />
<text  x="328.58" y="399.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (4 samples, 0.03%)</title><rect x="12.0" y="325" width="0.3" height="15.0" fill="rgb(245,100,43)" rx="2" ry="2" />
<text  x="15.01" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="115.7" y="309" width="0.1" height="15.0" fill="rgb(250,50,35)" rx="2" ry="2" />
<text  x="118.66" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot (6 samples, 0.04%)</title><rect x="327.8" y="341" width="0.5" height="15.0" fill="rgb(232,45,37)" rx="2" ry="2" />
<text  x="330.82" y="351.5" ></text>
</g>
<g >
<title>runtime.osyield (61 samples, 0.39%)</title><rect x="329.4" y="357" width="4.5" height="15.0" fill="rgb(223,12,1)" rx="2" ry="2" />
<text  x="332.38" y="367.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (5 samples, 0.03%)</title><rect x="119.8" y="325" width="0.4" height="15.0" fill="rgb(213,13,17)" rx="2" ry="2" />
<text  x="122.84" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (5 samples, 0.03%)</title><rect x="118.4" y="373" width="0.3" height="15.0" fill="rgb(246,204,30)" rx="2" ry="2" />
<text  x="121.35" y="383.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (3 samples, 0.02%)</title><rect x="114.8" y="325" width="0.3" height="15.0" fill="rgb(218,173,33)" rx="2" ry="2" />
<text  x="117.84" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (13 samples, 0.08%)</title><rect x="1188.1" y="293" width="1.0" height="15.0" fill="rgb(254,151,2)" rx="2" ry="2" />
<text  x="1191.13" y="303.5" ></text>
</g>
<g >
<title>net/textproto.NewReader (3 samples, 0.02%)</title><rect x="12.7" y="341" width="0.2" height="15.0" fill="rgb(246,38,53)" rx="2" ry="2" />
<text  x="15.69" y="351.5" ></text>
</g>
<g >
<title>runtime.newproc1 (3 samples, 0.02%)</title><rect x="120.2" y="325" width="0.2" height="15.0" fill="rgb(225,172,16)" rx="2" ry="2" />
<text  x="123.22" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (6 samples, 0.04%)</title><rect x="119.8" y="357" width="0.4" height="15.0" fill="rgb(215,114,4)" rx="2" ry="2" />
<text  x="122.77" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.01%)</title><rect x="118.4" y="277" width="0.1" height="15.0" fill="rgb(218,14,8)" rx="2" ry="2" />
<text  x="121.35" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (4 samples, 0.03%)</title><rect x="118.4" y="309" width="0.2" height="15.0" fill="rgb(252,164,18)" rx="2" ry="2" />
<text  x="121.35" y="319.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (2 samples, 0.01%)</title><rect x="10.9" y="389" width="0.1" height="15.0" fill="rgb(244,26,30)" rx="2" ry="2" />
<text  x="13.90" y="399.5" ></text>
</g>
<g >
<title>net/http.shouldClose (2 samples, 0.01%)</title><rect x="13.5" y="357" width="0.2" height="15.0" fill="rgb(224,116,19)" rx="2" ry="2" />
<text  x="16.51" y="367.5" ></text>
</g>
<g >
<title>bytes.IndexByte (3 samples, 0.02%)</title><rect x="115.2" y="325" width="0.2" height="15.0" fill="rgb(240,134,34)" rx="2" ry="2" />
<text  x="118.22" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (13 samples, 0.08%)</title><rect x="225.4" y="341" width="1.0" height="15.0" fill="rgb(248,20,5)" rx="2" ry="2" />
<text  x="228.43" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="115.9" y="325" width="0.1" height="15.0" fill="rgb(216,171,3)" rx="2" ry="2" />
<text  x="118.89" y="335.5" ></text>
</g>
<g >
<title>net/http.(*headerSorter).Len (2 samples, 0.01%)</title><rect x="121.4" y="261" width="0.2" height="15.0" fill="rgb(235,183,54)" rx="2" ry="2" />
<text  x="124.41" y="271.5" ></text>
</g>
<g >
<title>net/http.parseRequestLine (3 samples, 0.02%)</title><rect x="13.1" y="357" width="0.2" height="15.0" fill="rgb(216,38,39)" rx="2" ry="2" />
<text  x="16.06" y="367.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (6 samples, 0.04%)</title><rect x="119.8" y="373" width="0.4" height="15.0" fill="rgb(209,31,45)" rx="2" ry="2" />
<text  x="122.77" y="383.5" ></text>
</g>
<g >
<title>net.(*netFD).SetReadDeadline (4 samples, 0.03%)</title><rect x="12.0" y="357" width="0.3" height="15.0" fill="rgb(229,37,49)" rx="2" ry="2" />
<text  x="15.01" y="367.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (15 samples, 0.09%)</title><rect x="326.5" y="405" width="1.1" height="15.0" fill="rgb(215,162,42)" rx="2" ry="2" />
<text  x="329.47" y="415.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (4 samples, 0.03%)</title><rect x="324.9" y="293" width="0.3" height="15.0" fill="rgb(234,190,2)" rx="2" ry="2" />
<text  x="327.91" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Read (1,341 samples, 8.48%)</title><rect x="13.7" y="261" width="100.0" height="15.0" fill="rgb(215,185,47)" rx="2" ry="2" />
<text  x="16.66" y="271.5" >net.(*conn)...</text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="229.9" y="261" width="0.2" height="15.0" fill="rgb(228,56,7)" rx="2" ry="2" />
<text  x="232.91" y="271.5" ></text>
</g>
<g >
<title>runtime.newstack (5 samples, 0.03%)</title><rect x="798.2" y="389" width="0.3" height="15.0" fill="rgb(234,177,21)" rx="2" ry="2" />
<text  x="801.16" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="229.4" y="245" width="0.1" height="15.0" fill="rgb(246,135,15)" rx="2" ry="2" />
<text  x="232.39" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.01%)</title><rect x="325.4" y="293" width="0.2" height="15.0" fill="rgb(219,102,26)" rx="2" ry="2" />
<text  x="328.43" y="303.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.03%)</title><rect x="797.4" y="341" width="0.3" height="15.0" fill="rgb(246,72,15)" rx="2" ry="2" />
<text  x="800.41" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (10 samples, 0.06%)</title><rect x="117.0" y="341" width="0.8" height="15.0" fill="rgb(230,224,15)" rx="2" ry="2" />
<text  x="120.01" y="351.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.01%)</title><rect x="1189.8" y="325" width="0.1" height="15.0" fill="rgb(212,21,5)" rx="2" ry="2" />
<text  x="1192.78" y="335.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (2 samples, 0.01%)</title><rect x="226.7" y="357" width="0.2" height="15.0" fill="rgb(221,216,25)" rx="2" ry="2" />
<text  x="229.70" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.01%)</title><rect x="335.5" y="309" width="0.2" height="15.0" fill="rgb(244,61,48)" rx="2" ry="2" />
<text  x="338.50" y="319.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (10 samples, 0.06%)</title><rect x="120.9" y="309" width="0.7" height="15.0" fill="rgb(251,76,26)" rx="2" ry="2" />
<text  x="123.89" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.03%)</title><rect x="118.4" y="357" width="0.3" height="15.0" fill="rgb(213,182,11)" rx="2" ry="2" />
<text  x="121.35" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (25 samples, 0.16%)</title><rect x="336.0" y="293" width="1.9" height="15.0" fill="rgb(224,150,6)" rx="2" ry="2" />
<text  x="339.02" y="303.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (11 samples, 0.07%)</title><rect x="118.9" y="389" width="0.9" height="15.0" fill="rgb(228,205,36)" rx="2" ry="2" />
<text  x="121.95" y="399.5" ></text>
</g>
<g >
<title>net/http.readTransfer (2 samples, 0.01%)</title><rect x="13.4" y="357" width="0.1" height="15.0" fill="rgb(220,105,4)" rx="2" ry="2" />
<text  x="16.36" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.01%)</title><rect x="229.9" y="229" width="0.2" height="15.0" fill="rgb(206,28,54)" rx="2" ry="2" />
<text  x="232.91" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.03%)</title><rect x="797.0" y="309" width="0.4" height="15.0" fill="rgb(235,130,24)" rx="2" ry="2" />
<text  x="800.04" y="319.5" ></text>
</g>
<g >
<title>runtime.walltime (3 samples, 0.02%)</title><rect x="118.7" y="341" width="0.2" height="15.0" fill="rgb(248,198,44)" rx="2" ry="2" />
<text  x="121.72" y="351.5" ></text>
</g>
<g >
<title>runtime.handoffp (3 samples, 0.02%)</title><rect x="113.4" y="117" width="0.2" height="15.0" fill="rgb(206,110,42)" rx="2" ry="2" />
<text  x="116.35" y="127.5" ></text>
</g>
<g >
<title>runtime.kevent (4 samples, 0.03%)</title><rect x="797.4" y="325" width="0.3" height="15.0" fill="rgb(253,174,24)" rx="2" ry="2" />
<text  x="800.41" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.01%)</title><rect x="325.4" y="341" width="0.2" height="15.0" fill="rgb(219,156,36)" rx="2" ry="2" />
<text  x="328.43" y="351.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (8 samples, 0.05%)</title><rect x="114.2" y="341" width="0.6" height="15.0" fill="rgb(218,11,33)" rx="2" ry="2" />
<text  x="117.17" y="351.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.02%)</title><rect x="113.4" y="85" width="0.2" height="15.0" fill="rgb(243,228,12)" rx="2" ry="2" />
<text  x="116.35" y="95.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (5 samples, 0.03%)</title><rect x="113.8" y="277" width="0.4" height="15.0" fill="rgb(214,156,17)" rx="2" ry="2" />
<text  x="116.80" y="287.5" ></text>
</g>
<g >
<title>runtime.goexit0 (3 samples, 0.02%)</title><rect x="796.7" y="389" width="0.2" height="15.0" fill="rgb(251,167,45)" rx="2" ry="2" />
<text  x="799.67" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (4 samples, 0.03%)</title><rect x="12.0" y="341" width="0.3" height="15.0" fill="rgb(214,13,24)" rx="2" ry="2" />
<text  x="15.01" y="351.5" ></text>
</g>
<g >
<title>runtime.concatstrings (5 samples, 0.03%)</title><rect x="227.1" y="293" width="0.3" height="15.0" fill="rgb(239,116,0)" rx="2" ry="2" />
<text  x="230.08" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.01%)</title><rect x="327.8" y="261" width="0.2" height="15.0" fill="rgb(235,110,11)" rx="2" ry="2" />
<text  x="330.82" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.03%)</title><rect x="224.4" y="229" width="0.3" height="15.0" fill="rgb(241,196,6)" rx="2" ry="2" />
<text  x="227.39" y="239.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (1,355 samples, 8.57%)</title><rect x="13.7" y="357" width="101.1" height="15.0" fill="rgb(246,25,11)" rx="2" ry="2" />
<text  x="16.66" y="367.5" >net/textprot..</text>
</g>
<g >
<title>runtime.lock (83 samples, 0.52%)</title><rect x="798.7" y="325" width="6.2" height="15.0" fill="rgb(212,164,39)" rx="2" ry="2" />
<text  x="801.68" y="335.5" ></text>
</g>
<g >
<title>runtime.semasleep (6,137 samples, 38.81%)</title><rect x="338.4" y="341" width="458.0" height="15.0" fill="rgb(231,115,40)" rx="2" ry="2" />
<text  x="341.41" y="351.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.scanframeworker (4 samples, 0.03%)</title><rect x="328.0" y="245" width="0.3" height="15.0" fill="rgb(246,50,51)" rx="2" ry="2" />
<text  x="330.96" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirep (2 samples, 0.01%)</title><rect x="338.1" y="357" width="0.2" height="15.0" fill="rgb(232,208,7)" rx="2" ry="2" />
<text  x="341.11" y="367.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader.func1 (2 samples, 0.01%)</title><rect x="120.7" y="325" width="0.2" height="15.0" fill="rgb(213,18,50)" rx="2" ry="2" />
<text  x="123.74" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.01%)</title><rect x="115.7" y="325" width="0.1" height="15.0" fill="rgb(221,110,12)" rx="2" ry="2" />
<text  x="118.66" y="335.5" ></text>
</g>
<g >
<title>sort.Sort (3 samples, 0.02%)</title><rect x="121.3" y="277" width="0.3" height="15.0" fill="rgb(231,27,49)" rx="2" ry="2" />
<text  x="124.34" y="287.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (4 samples, 0.03%)</title><rect x="230.3" y="373" width="0.3" height="15.0" fill="rgb(239,29,45)" rx="2" ry="2" />
<text  x="233.28" y="383.5" ></text>
</g>
<g >
<title>net/http.tcpKeepAliveListener.Accept (2 samples, 0.01%)</title><rect x="329.2" y="325" width="0.1" height="15.0" fill="rgb(228,66,45)" rx="2" ry="2" />
<text  x="332.16" y="335.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (8 samples, 0.05%)</title><rect x="116.3" y="357" width="0.6" height="15.0" fill="rgb(237,152,39)" rx="2" ry="2" />
<text  x="119.34" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="796.2" y="325" width="0.2" height="15.0" fill="rgb(250,134,21)" rx="2" ry="2" />
<text  x="799.22" y="335.5" ></text>
</g>
<g >
<title>context.WithCancel (10 samples, 0.06%)</title><rect x="11.1" y="373" width="0.8" height="15.0" fill="rgb(225,155,25)" rx="2" ry="2" />
<text  x="14.12" y="383.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (1,397 samples, 8.83%)</title><rect x="120.6" y="373" width="104.2" height="15.0" fill="rgb(207,199,24)" rx="2" ry="2" />
<text  x="123.59" y="383.5" >bufio.(*Writ..</text>
</g>
<g >
<title>runtime.systemstack (5,244 samples, 33.16%)</title><rect x="798.6" y="389" width="391.3" height="15.0" fill="rgb(236,145,53)" rx="2" ry="2" />
<text  x="801.61" y="399.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (7 samples, 0.04%)</title><rect x="1189.2" y="373" width="0.5" height="15.0" fill="rgb(233,183,26)" rx="2" ry="2" />
<text  x="1192.18" y="383.5" ></text>
</g>
<g >
<title>runtime.semasleep (6 samples, 0.04%)</title><rect x="1189.2" y="309" width="0.4" height="15.0" fill="rgb(229,218,24)" rx="2" ry="2" />
<text  x="1192.18" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="325.4" y="357" width="0.2" height="15.0" fill="rgb(217,60,28)" rx="2" ry="2" />
<text  x="328.43" y="367.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (7 samples, 0.04%)</title><rect x="10.4" y="341" width="0.5" height="15.0" fill="rgb(238,148,34)" rx="2" ry="2" />
<text  x="13.37" y="351.5" ></text>
</g>
<g >
<title>runtime.mstart (5,245 samples, 33.17%)</title><rect x="798.5" y="405" width="391.4" height="15.0" fill="rgb(249,214,21)" rx="2" ry="2" />
<text  x="801.53" y="415.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.02%)</title><rect x="117.4" y="325" width="0.2" height="15.0" fill="rgb(212,133,40)" rx="2" ry="2" />
<text  x="120.38" y="335.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="796.7" y="373" width="0.2" height="15.0" fill="rgb(226,195,39)" rx="2" ry="2" />
<text  x="799.74" y="383.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.01%)</title><rect x="113.4" y="37" width="0.1" height="15.0" fill="rgb(236,180,18)" rx="2" ry="2" />
<text  x="116.35" y="47.5" ></text>
</g>
<g >
<title>encoding/json.typeEncoder (2 samples, 0.01%)</title><rect x="228.3" y="213" width="0.2" height="15.0" fill="rgb(216,163,14)" rx="2" ry="2" />
<text  x="231.34" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (61 samples, 0.39%)</title><rect x="329.4" y="341" width="4.5" height="15.0" fill="rgb(232,78,14)" rx="2" ry="2" />
<text  x="332.38" y="351.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (6,135 samples, 38.80%)</title><rect x="338.4" y="325" width="457.8" height="15.0" fill="rgb(232,206,40)" rx="2" ry="2" />
<text  x="341.41" y="335.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.mapiterinit (4 samples, 0.03%)</title><rect x="118.1" y="373" width="0.3" height="15.0" fill="rgb(244,83,14)" rx="2" ry="2" />
<text  x="121.05" y="383.5" ></text>
</g>
<g >
<title>net/url.unescape (2 samples, 0.01%)</title><rect x="116.6" y="309" width="0.2" height="15.0" fill="rgb(226,167,28)" rx="2" ry="2" />
<text  x="119.64" y="319.5" ></text>
</g>
<g >
<title>runtime.mcall (8 samples, 0.05%)</title><rect x="325.8" y="389" width="0.6" height="15.0" fill="rgb(237,215,8)" rx="2" ry="2" />
<text  x="328.80" y="399.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.01%)</title><rect x="12.8" y="229" width="0.1" height="15.0" fill="rgb(235,16,30)" rx="2" ry="2" />
<text  x="15.76" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="114.5" y="213" width="0.2" height="15.0" fill="rgb(247,153,16)" rx="2" ry="2" />
<text  x="117.55" y="223.5" ></text>
</g>
<g >
<title>runtime.findrunnable (13 samples, 0.08%)</title><rect x="334.9" y="357" width="1.0" height="15.0" fill="rgb(249,8,30)" rx="2" ry="2" />
<text  x="337.90" y="367.5" ></text>
</g>
<g >
<title>runtime.return0 (2 samples, 0.01%)</title><rect x="230.9" y="325" width="0.1" height="15.0" fill="rgb(236,180,4)" rx="2" ry="2" />
<text  x="233.88" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (2 samples, 0.01%)</title><rect x="228.3" y="245" width="0.2" height="15.0" fill="rgb(232,93,6)" rx="2" ry="2" />
<text  x="231.34" y="255.5" ></text>
</g>
<g >
<title>net/http.readRequest (1,409 samples, 8.91%)</title><rect x="12.6" y="373" width="105.2" height="15.0" fill="rgb(229,64,3)" rx="2" ry="2" />
<text  x="15.61" y="383.5" >net/http.rea..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (4 samples, 0.03%)</title><rect x="118.4" y="341" width="0.2" height="15.0" fill="rgb(229,93,41)" rx="2" ry="2" />
<text  x="121.35" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.01%)</title><rect x="228.3" y="181" width="0.2" height="15.0" fill="rgb(243,148,31)" rx="2" ry="2" />
<text  x="231.34" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (11 samples, 0.07%)</title><rect x="228.1" y="309" width="0.8" height="15.0" fill="rgb(236,110,0)" rx="2" ry="2" />
<text  x="231.12" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (25 samples, 0.16%)</title><rect x="336.0" y="309" width="1.9" height="15.0" fill="rgb(223,200,7)" rx="2" ry="2" />
<text  x="339.02" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (16 samples, 0.10%)</title><rect x="803.7" y="309" width="1.2" height="15.0" fill="rgb(219,15,36)" rx="2" ry="2" />
<text  x="806.68" y="319.5" ></text>
</g>
<g >
<title>runtime.forEachP (13 samples, 0.08%)</title><rect x="1188.1" y="357" width="1.0" height="15.0" fill="rgb(220,151,42)" rx="2" ry="2" />
<text  x="1191.13" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.01%)</title><rect x="229.9" y="197" width="0.2" height="15.0" fill="rgb(246,229,39)" rx="2" ry="2" />
<text  x="232.91" y="207.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.02%)</title><rect x="118.7" y="357" width="0.2" height="15.0" fill="rgb(213,17,12)" rx="2" ry="2" />
<text  x="121.72" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (7 samples, 0.04%)</title><rect x="10.4" y="357" width="0.5" height="15.0" fill="rgb(236,26,14)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="325.1" y="277" width="0.1" height="15.0" fill="rgb(207,35,10)" rx="2" ry="2" />
<text  x="328.05" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="798.4" y="341" width="0.1" height="15.0" fill="rgb(246,125,8)" rx="2" ry="2" />
<text  x="801.38" y="351.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (2 samples, 0.01%)</title><rect x="1187.9" y="341" width="0.2" height="15.0" fill="rgb(232,162,8)" rx="2" ry="2" />
<text  x="1190.91" y="351.5" ></text>
</g>
<g >
<title>internal/x/net/http/httpguts.HeaderValuesContainsToken (2 samples, 0.01%)</title><rect x="13.5" y="341" width="0.2" height="15.0" fill="rgb(205,152,5)" rx="2" ry="2" />
<text  x="16.51" y="351.5" ></text>
</g>
<g >
<title>net/http.ListenAndServe (2 samples, 0.01%)</title><rect x="329.2" y="373" width="0.1" height="15.0" fill="rgb(229,60,30)" rx="2" ry="2" />
<text  x="332.16" y="383.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (6 samples, 0.04%)</title><rect x="1189.2" y="293" width="0.4" height="15.0" fill="rgb(205,21,35)" rx="2" ry="2" />
<text  x="1192.18" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (16 samples, 0.10%)</title><rect x="803.7" y="293" width="1.2" height="15.0" fill="rgb(210,63,28)" rx="2" ry="2" />
<text  x="806.68" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (4 samples, 0.03%)</title><rect x="114.4" y="261" width="0.3" height="15.0" fill="rgb(250,116,53)" rx="2" ry="2" />
<text  x="117.40" y="271.5" ></text>
</g>
<g >
<title>strings.Index (3 samples, 0.02%)</title><rect x="13.1" y="341" width="0.2" height="15.0" fill="rgb(235,155,7)" rx="2" ry="2" />
<text  x="16.06" y="351.5" ></text>
</g>
<g >
<title>runtime.semasleep (13 samples, 0.08%)</title><rect x="1188.1" y="309" width="1.0" height="15.0" fill="rgb(223,160,36)" rx="2" ry="2" />
<text  x="1191.13" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (10 samples, 0.06%)</title><rect x="117.0" y="357" width="0.8" height="15.0" fill="rgb(237,113,47)" rx="2" ry="2" />
<text  x="120.01" y="367.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1,347 samples, 8.52%)</title><rect x="13.7" y="341" width="100.5" height="15.0" fill="rgb(228,202,14)" rx="2" ry="2" />
<text  x="16.66" y="351.5" >net/textprot..</text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.01%)</title><rect x="113.4" y="53" width="0.1" height="15.0" fill="rgb(207,194,26)" rx="2" ry="2" />
<text  x="116.35" y="63.5" ></text>
</g>
<g >
<title>EntryTask/internal/controller.GetUserInfoHandler (29 samples, 0.18%)</title><rect x="228.1" y="341" width="2.2" height="15.0" fill="rgb(247,208,4)" rx="2" ry="2" />
<text  x="231.12" y="351.5" ></text>
</g>
<g >
<title>runtime.schedule (46 samples, 0.29%)</title><rect x="334.7" y="373" width="3.4" height="15.0" fill="rgb(233,157,53)" rx="2" ry="2" />
<text  x="337.68" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.01%)</title><rect x="229.9" y="133" width="0.2" height="15.0" fill="rgb(206,204,27)" rx="2" ry="2" />
<text  x="232.91" y="143.5" ></text>
</g>
<g >
<title>runtime.forEachP (7 samples, 0.04%)</title><rect x="1189.2" y="357" width="0.5" height="15.0" fill="rgb(219,90,31)" rx="2" ry="2" />
<text  x="1192.18" y="367.5" ></text>
</g>
<g >
<title>time.Now (6 samples, 0.04%)</title><rect x="119.3" y="373" width="0.5" height="15.0" fill="rgb(226,23,35)" rx="2" ry="2" />
<text  x="122.32" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (3 samples, 0.02%)</title><rect x="115.8" y="341" width="0.2" height="15.0" fill="rgb(254,208,36)" rx="2" ry="2" />
<text  x="118.81" y="351.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.03%)</title><rect x="797.0" y="341" width="0.4" height="15.0" fill="rgb(249,177,30)" rx="2" ry="2" />
<text  x="800.04" y="351.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (2 samples, 0.01%)</title><rect x="325.1" y="261" width="0.1" height="15.0" fill="rgb(208,80,10)" rx="2" ry="2" />
<text  x="328.05" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (67 samples, 0.42%)</title><rect x="798.7" y="293" width="5.0" height="15.0" fill="rgb(232,17,30)" rx="2" ry="2" />
<text  x="801.68" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (1,371 samples, 8.67%)</title><rect x="122.5" y="325" width="102.3" height="15.0" fill="rgb(206,196,40)" rx="2" ry="2" />
<text  x="125.53" y="335.5" >net.(*netFD)..</text>
</g>
<g >
<title>syscall.syscall (1,337 samples, 8.46%)</title><rect x="14.0" y="181" width="99.7" height="15.0" fill="rgb(227,164,24)" rx="2" ry="2" />
<text  x="16.95" y="191.5" >syscall.sysc..</text>
</g>
<g >
<title>net/http.(*conn).readRequest (1,446 samples, 9.14%)</title><rect x="11.0" y="389" width="107.9" height="15.0" fill="rgb(221,178,36)" rx="2" ry="2" />
<text  x="14.04" y="399.5" >net/http.(*co..</text>
</g>
<g >
<title>path.(*lazybuf).append (2 samples, 0.01%)</title><rect x="227.8" y="309" width="0.2" height="15.0" fill="rgb(206,16,3)" rx="2" ry="2" />
<text  x="230.82" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.01%)</title><rect x="229.9" y="213" width="0.2" height="15.0" fill="rgb(222,194,4)" rx="2" ry="2" />
<text  x="232.91" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="328.8" y="325" width="0.1" height="15.0" fill="rgb(250,11,43)" rx="2" ry="2" />
<text  x="331.79" y="335.5" ></text>
</g>
<g >
<title>bytes.IndexByte (5 samples, 0.03%)</title><rect x="113.8" y="293" width="0.4" height="15.0" fill="rgb(248,198,25)" rx="2" ry="2" />
<text  x="116.80" y="303.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (5 samples, 0.03%)</title><rect x="798.2" y="357" width="0.3" height="15.0" fill="rgb(223,67,0)" rx="2" ry="2" />
<text  x="801.16" y="367.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="335.7" y="309" width="0.2" height="15.0" fill="rgb(235,49,5)" rx="2" ry="2" />
<text  x="338.65" y="319.5" ></text>
</g>
<g >
<title>net/http.(*response).write (11 samples, 0.07%)</title><rect x="229.1" y="309" width="0.8" height="15.0" fill="rgb(210,117,25)" rx="2" ry="2" />
<text  x="232.09" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.01%)</title><rect x="229.9" y="245" width="0.2" height="15.0" fill="rgb(206,149,2)" rx="2" ry="2" />
<text  x="232.91" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1,025 samples, 6.48%)</title><rect x="1111.2" y="293" width="76.5" height="15.0" fill="rgb(225,72,51)" rx="2" ry="2" />
<text  x="1114.20" y="303.5" >runtime...</text>
</g>
<g >
<title>encoding/json.interfaceEncoder (2 samples, 0.01%)</title><rect x="228.3" y="261" width="0.2" height="15.0" fill="rgb(220,185,5)" rx="2" ry="2" />
<text  x="231.34" y="271.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (1,426 samples, 9.02%)</title><rect x="120.4" y="389" width="106.5" height="15.0" fill="rgb(246,166,43)" rx="2" ry="2" />
<text  x="123.44" y="399.5" >net/http.(*re..</text>
</g>
<g >
<title>runtime.findrunnable (12 samples, 0.08%)</title><rect x="797.0" y="357" width="0.9" height="15.0" fill="rgb(221,7,11)" rx="2" ry="2" />
<text  x="800.04" y="367.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (3 samples, 0.02%)</title><rect x="115.2" y="309" width="0.2" height="15.0" fill="rgb(223,168,5)" rx="2" ry="2" />
<text  x="118.22" y="319.5" ></text>
</g>
<g >
<title>runtime.scang (6 samples, 0.04%)</title><rect x="327.8" y="309" width="0.5" height="15.0" fill="rgb(235,35,20)" rx="2" ry="2" />
<text  x="330.82" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="117.8" y="357" width="0.2" height="15.0" fill="rgb(251,20,41)" rx="2" ry="2" />
<text  x="120.75" y="367.5" ></text>
</g>
<g >
<title>runtime.startm (5,215 samples, 32.98%)</title><rect x="798.7" y="341" width="389.1" height="15.0" fill="rgb(234,187,0)" rx="2" ry="2" />
<text  x="801.68" y="351.5" >runtime.startm</text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="338.3" y="357" width="0.1" height="15.0" fill="rgb(220,109,9)" rx="2" ry="2" />
<text  x="341.26" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.02%)</title><rect x="12.7" y="325" width="0.2" height="15.0" fill="rgb(210,115,11)" rx="2" ry="2" />
<text  x="15.69" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.02%)</title><rect x="12.7" y="293" width="0.2" height="15.0" fill="rgb(208,108,30)" rx="2" ry="2" />
<text  x="15.69" y="303.5" ></text>
</g>
<g >
<title>runtime.deferreturn (4 samples, 0.03%)</title><rect x="231.0" y="341" width="0.3" height="15.0" fill="rgb(220,177,7)" rx="2" ry="2" />
<text  x="234.03" y="351.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (2 samples, 0.01%)</title><rect x="228.3" y="197" width="0.2" height="15.0" fill="rgb(252,194,29)" rx="2" ry="2" />
<text  x="231.34" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (2 samples, 0.01%)</title><rect x="115.5" y="325" width="0.2" height="15.0" fill="rgb(226,209,28)" rx="2" ry="2" />
<text  x="118.52" y="335.5" ></text>
</g>
<g >
<title>net/http.putBufioWriter (2 samples, 0.01%)</title><rect x="226.7" y="373" width="0.2" height="15.0" fill="rgb(222,227,47)" rx="2" ry="2" />
<text  x="229.70" y="383.5" ></text>
</g>
<g >
<title>syscall.syscall (1,260 samples, 7.97%)</title><rect x="231.3" y="309" width="94.1" height="15.0" fill="rgb(247,49,29)" rx="2" ry="2" />
<text  x="234.33" y="319.5" >syscall.sys..</text>
</g>
<g >
<title>net/url.parse (7 samples, 0.04%)</title><rect x="116.4" y="341" width="0.5" height="15.0" fill="rgb(249,166,11)" rx="2" ry="2" />
<text  x="119.41" y="351.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.02%)</title><rect x="113.4" y="101" width="0.2" height="15.0" fill="rgb(235,69,49)" rx="2" ry="2" />
<text  x="116.35" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="227.2" y="245" width="0.2" height="15.0" fill="rgb(214,180,43)" rx="2" ry="2" />
<text  x="230.23" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (6,137 samples, 38.81%)</title><rect x="338.4" y="357" width="458.0" height="15.0" fill="rgb(215,80,41)" rx="2" ry="2" />
<text  x="341.41" y="367.5" >runtime.notesleep</text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.03%)</title><rect x="116.0" y="325" width="0.3" height="15.0" fill="rgb(213,94,38)" rx="2" ry="2" />
<text  x="119.04" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (1,342 samples, 8.49%)</title><rect x="13.7" y="293" width="100.1" height="15.0" fill="rgb(206,228,52)" rx="2" ry="2" />
<text  x="16.66" y="303.5" >bufio.(*Read..</text>
</g>
<g >
<title>time.Time.Sub (2 samples, 0.01%)</title><rect x="226.3" y="277" width="0.1" height="15.0" fill="rgb(212,140,52)" rx="2" ry="2" />
<text  x="229.25" y="287.5" ></text>
</g>
<g >
<title>encoding/json.valueEncoder (3 samples, 0.02%)</title><rect x="228.6" y="277" width="0.3" height="15.0" fill="rgb(227,110,3)" rx="2" ry="2" />
<text  x="231.64" y="287.5" ></text>
</g>
<g >
<title>net/http.Header.clone (8 samples, 0.05%)</title><rect x="229.3" y="277" width="0.6" height="15.0" fill="rgb(246,199,35)" rx="2" ry="2" />
<text  x="232.31" y="287.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (2 samples, 0.01%)</title><rect x="119.6" y="309" width="0.2" height="15.0" fill="rgb(249,23,13)" rx="2" ry="2" />
<text  x="122.62" y="319.5" ></text>
</g>
<g >
<title>syscall.Write (1,363 samples, 8.62%)</title><rect x="123.1" y="293" width="101.7" height="15.0" fill="rgb(247,162,8)" rx="2" ry="2" />
<text  x="126.13" y="303.5" >syscall.Write</text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (4 samples, 0.03%)</title><rect x="224.4" y="213" width="0.3" height="15.0" fill="rgb(231,211,40)" rx="2" ry="2" />
<text  x="227.39" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.01%)</title><rect x="1189.8" y="341" width="0.1" height="15.0" fill="rgb(249,189,23)" rx="2" ry="2" />
<text  x="1192.78" y="351.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (4 samples, 0.03%)</title><rect x="114.4" y="277" width="0.3" height="15.0" fill="rgb(223,140,31)" rx="2" ry="2" />
<text  x="117.40" y="287.5" ></text>
</g>
<g >
<title>runtime.stopm (25 samples, 0.16%)</title><rect x="336.0" y="341" width="1.9" height="15.0" fill="rgb(242,156,23)" rx="2" ry="2" />
<text  x="339.02" y="351.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).closeDot (2 samples, 0.01%)</title><rect x="114.9" y="309" width="0.2" height="15.0" fill="rgb(215,132,43)" rx="2" ry="2" />
<text  x="117.92" y="319.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (3 samples, 0.02%)</title><rect x="113.4" y="133" width="0.2" height="15.0" fill="rgb(217,40,11)" rx="2" ry="2" />
<text  x="116.35" y="143.5" ></text>
</g>
<g >
<title>encoding/json.stringEncoder (2 samples, 0.01%)</title><rect x="228.5" y="261" width="0.1" height="15.0" fill="rgb(251,7,52)" rx="2" ry="2" />
<text  x="231.49" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="338.3" y="325" width="0.1" height="15.0" fill="rgb(231,215,32)" rx="2" ry="2" />
<text  x="341.26" y="335.5" ></text>
</g>
<g >
<title>net/http.(*connReader).Read (1,342 samples, 8.49%)</title><rect x="13.7" y="277" width="100.1" height="15.0" fill="rgb(214,183,7)" rx="2" ry="2" />
<text  x="16.66" y="287.5" >net/http.(*c..</text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (2 samples, 0.01%)</title><rect x="10.4" y="325" width="0.1" height="15.0" fill="rgb(250,101,2)" rx="2" ry="2" />
<text  x="13.37" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (13 samples, 0.08%)</title><rect x="225.4" y="325" width="1.0" height="15.0" fill="rgb(210,139,14)" rx="2" ry="2" />
<text  x="228.43" y="335.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (45 samples, 0.28%)</title><rect x="226.9" y="373" width="3.4" height="15.0" fill="rgb(212,23,14)" rx="2" ry="2" />
<text  x="229.93" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.01%)</title><rect x="325.4" y="277" width="0.2" height="15.0" fill="rgb(254,174,34)" rx="2" ry="2" />
<text  x="328.43" y="287.5" ></text>
</g>
<g >
<title>syscall.syscall (1,363 samples, 8.62%)</title><rect x="123.1" y="261" width="101.7" height="15.0" fill="rgb(250,71,46)" rx="2" ry="2" />
<text  x="126.13" y="271.5" >syscall.sysc..</text>
</g>
<g >
<title>syscall.read (1,260 samples, 7.97%)</title><rect x="231.3" y="325" width="94.1" height="15.0" fill="rgb(207,182,18)" rx="2" ry="2" />
<text  x="234.33" y="335.5" >syscall.read</text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.01%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(238,1,41)" rx="2" ry="2" />
<text  x="1192.78" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (20 samples, 0.13%)</title><rect x="327.6" y="389" width="1.5" height="15.0" fill="rgb(248,141,54)" rx="2" ry="2" />
<text  x="330.59" y="399.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.01%)</title><rect x="1189.8" y="373" width="0.1" height="15.0" fill="rgb(253,80,2)" rx="2" ry="2" />
<text  x="1192.78" y="383.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 0.01%)</title><rect x="229.5" y="261" width="0.2" height="15.0" fill="rgb(219,92,20)" rx="2" ry="2" />
<text  x="232.54" y="271.5" ></text>
</g>
<g >
<title>main.main (2 samples, 0.01%)</title><rect x="329.2" y="389" width="0.1" height="15.0" fill="rgb(247,90,2)" rx="2" ry="2" />
<text  x="332.16" y="399.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.03%)</title><rect x="335.0" y="341" width="0.4" height="15.0" fill="rgb(226,156,20)" rx="2" ry="2" />
<text  x="337.98" y="351.5" ></text>
</g>
<g >
<title>runtime.makechan (3 samples, 0.02%)</title><rect x="117.8" y="373" width="0.2" height="15.0" fill="rgb(213,190,43)" rx="2" ry="2" />
<text  x="120.75" y="383.5" ></text>
</g>
<g >
<title>runtime.main (2 samples, 0.01%)</title><rect x="329.2" y="405" width="0.1" height="15.0" fill="rgb(222,91,35)" rx="2" ry="2" />
<text  x="332.16" y="415.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (45 samples, 0.28%)</title><rect x="226.9" y="389" width="3.4" height="15.0" fill="rgb(236,7,30)" rx="2" ry="2" />
<text  x="229.93" y="399.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.01%)</title><rect x="226.1" y="277" width="0.2" height="15.0" fill="rgb(226,83,48)" rx="2" ry="2" />
<text  x="229.11" y="287.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="328.9" y="325" width="0.2" height="15.0" fill="rgb(220,35,37)" rx="2" ry="2" />
<text  x="331.94" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (11 samples, 0.07%)</title><rect x="328.3" y="341" width="0.8" height="15.0" fill="rgb(236,133,27)" rx="2" ry="2" />
<text  x="331.26" y="351.5" ></text>
</g>
<g >
<title>runtime.mcall (6,283 samples, 39.73%)</title><rect x="329.3" y="405" width="468.9" height="15.0" fill="rgb(231,22,34)" rx="2" ry="2" />
<text  x="332.31" y="415.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.01%)</title><rect x="338.3" y="341" width="0.1" height="15.0" fill="rgb(238,149,19)" rx="2" ry="2" />
<text  x="341.26" y="351.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.01%)</title><rect x="798.2" y="309" width="0.1" height="15.0" fill="rgb(247,100,45)" rx="2" ry="2" />
<text  x="801.16" y="319.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (13 samples, 0.08%)</title><rect x="225.4" y="309" width="1.0" height="15.0" fill="rgb(253,137,13)" rx="2" ry="2" />
<text  x="228.43" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.01%)</title><rect x="796.4" y="341" width="0.2" height="15.0" fill="rgb(226,92,38)" rx="2" ry="2" />
<text  x="799.44" y="351.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.01%)</title><rect x="229.4" y="261" width="0.1" height="15.0" fill="rgb(219,157,52)" rx="2" ry="2" />
<text  x="232.39" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.01%)</title><rect x="118.4" y="293" width="0.1" height="15.0" fill="rgb(221,79,50)" rx="2" ry="2" />
<text  x="121.35" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (9 samples, 0.06%)</title><rect x="228.2" y="293" width="0.7" height="15.0" fill="rgb(217,223,24)" rx="2" ry="2" />
<text  x="231.20" y="303.5" ></text>
</g>
<g >
<title>runtime.deferproc (3 samples, 0.02%)</title><rect x="225.8" y="293" width="0.2" height="15.0" fill="rgb(247,213,52)" rx="2" ry="2" />
<text  x="228.81" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (7 samples, 0.04%)</title><rect x="10.4" y="389" width="0.5" height="15.0" fill="rgb(236,84,22)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>runtime.handoffp (5,216 samples, 32.99%)</title><rect x="798.6" y="357" width="389.2" height="15.0" fill="rgb(226,155,52)" rx="2" ry="2" />
<text  x="801.61" y="367.5" >runtime.handoffp</text>
</g>
<g >
<title>runtime.notetsleep_internal (6 samples, 0.04%)</title><rect x="1189.2" y="325" width="0.4" height="15.0" fill="rgb(227,105,22)" rx="2" ry="2" />
<text  x="1192.18" y="335.5" ></text>
</g>
<g >
<title>runtime.rawstring (3 samples, 0.02%)</title><rect x="227.2" y="261" width="0.2" height="15.0" fill="rgb(245,131,42)" rx="2" ry="2" />
<text  x="230.23" y="271.5" ></text>
</g>
<g >
<title>runtime.newproc (3 samples, 0.02%)</title><rect x="120.2" y="373" width="0.2" height="15.0" fill="rgb(241,165,15)" rx="2" ry="2" />
<text  x="123.22" y="383.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (13 samples, 0.08%)</title><rect x="1188.1" y="325" width="1.0" height="15.0" fill="rgb(254,130,29)" rx="2" ry="2" />
<text  x="1191.13" y="335.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (3 samples, 0.02%)</title><rect x="121.1" y="277" width="0.2" height="15.0" fill="rgb(248,104,28)" rx="2" ry="2" />
<text  x="124.11" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.01%)</title><rect x="117.1" y="325" width="0.1" height="15.0" fill="rgb(229,67,42)" rx="2" ry="2" />
<text  x="120.08" y="335.5" ></text>
</g>
<g >
<title>runtime.makemap (2 samples, 0.01%)</title><rect x="115.7" y="341" width="0.1" height="15.0" fill="rgb(226,45,53)" rx="2" ry="2" />
<text  x="118.66" y="351.5" ></text>
</g>
<g >
<title>time.Until (2 samples, 0.01%)</title><rect x="226.3" y="293" width="0.1" height="15.0" fill="rgb(210,183,22)" rx="2" ry="2" />
<text  x="229.25" y="303.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (20 samples, 0.13%)</title><rect x="327.6" y="373" width="1.5" height="15.0" fill="rgb(251,62,11)" rx="2" ry="2" />
<text  x="330.59" y="383.5" ></text>
</g>
<g >
<title>internal/x/net/http/httpguts.ValidHeaderFieldName (2 samples, 0.01%)</title><rect x="11.9" y="373" width="0.1" height="15.0" fill="rgb(248,189,42)" rx="2" ry="2" />
<text  x="14.87" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.01%)</title><rect x="224.7" y="245" width="0.1" height="15.0" fill="rgb(232,104,33)" rx="2" ry="2" />
<text  x="227.69" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (4 samples, 0.03%)</title><rect x="224.4" y="245" width="0.3" height="15.0" fill="rgb(233,93,49)" rx="2" ry="2" />
<text  x="227.39" y="255.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (6 samples, 0.04%)</title><rect x="228.2" y="277" width="0.4" height="15.0" fill="rgb(238,15,3)" rx="2" ry="2" />
<text  x="231.20" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (67 samples, 0.42%)</title><rect x="798.7" y="309" width="5.0" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="801.68" y="319.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).Handler (16 samples, 0.10%)</title><rect x="226.9" y="357" width="1.2" height="15.0" fill="rgb(232,70,48)" rx="2" ry="2" />
<text  x="229.93" y="367.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.03%)</title><rect x="335.0" y="309" width="0.3" height="15.0" fill="rgb(244,147,47)" rx="2" ry="2" />
<text  x="337.98" y="319.5" ></text>
</g>
<g >
<title>net/http.newTextprotoReader (5 samples, 0.03%)</title><rect x="12.7" y="357" width="0.4" height="15.0" fill="rgb(238,87,47)" rx="2" ry="2" />
<text  x="15.69" y="367.5" ></text>
</g>
<g >
<title>runtime.handoffp (4 samples, 0.03%)</title><rect x="224.4" y="197" width="0.3" height="15.0" fill="rgb(246,162,54)" rx="2" ry="2" />
<text  x="227.39" y="207.5" ></text>
</g>
<g >
<title>time.Time.Equal (2 samples, 0.01%)</title><rect x="226.3" y="261" width="0.1" height="15.0" fill="rgb(238,73,35)" rx="2" ry="2" />
<text  x="229.25" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (5 samples, 0.03%)</title><rect x="335.5" y="325" width="0.4" height="15.0" fill="rgb(252,132,32)" rx="2" ry="2" />
<text  x="338.50" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.01%)</title><rect x="11.7" y="357" width="0.2" height="15.0" fill="rgb(250,123,24)" rx="2" ry="2" />
<text  x="14.72" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (4 samples, 0.03%)</title><rect x="227.4" y="309" width="0.3" height="15.0" fill="rgb(205,128,34)" rx="2" ry="2" />
<text  x="230.45" y="319.5" ></text>
</g>
<g >
<title>net.(*conn).SetReadDeadline (4 samples, 0.03%)</title><rect x="12.0" y="373" width="0.3" height="15.0" fill="rgb(211,31,9)" rx="2" ry="2" />
<text  x="15.01" y="383.5" ></text>
</g>
<g >
<title>runtime.deferreturn (3 samples, 0.02%)</title><rect x="122.9" y="293" width="0.2" height="15.0" fill="rgb(220,170,45)" rx="2" ry="2" />
<text  x="125.90" y="303.5" ></text>
</g>
<g >
<title>runtime.semasleep (10 samples, 0.06%)</title><rect x="333.9" y="357" width="0.8" height="15.0" fill="rgb(242,71,41)" rx="2" ry="2" />
<text  x="336.93" y="367.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.01%)</title><rect x="1189.8" y="357" width="0.1" height="15.0" fill="rgb(236,101,28)" rx="2" ry="2" />
<text  x="1192.78" y="367.5" ></text>
</g>
<g >
<title>runtime.scanstack (6 samples, 0.04%)</title><rect x="327.8" y="293" width="0.5" height="15.0" fill="rgb(215,46,36)" rx="2" ry="2" />
<text  x="330.82" y="303.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (1,373 samples, 8.68%)</title><rect x="122.4" y="357" width="102.4" height="15.0" fill="rgb(254,22,41)" rx="2" ry="2" />
<text  x="125.38" y="367.5" >net/http.che..</text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.03%)</title><rect x="114.4" y="245" width="0.3" height="15.0" fill="rgb(211,220,18)" rx="2" ry="2" />
<text  x="117.40" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.01%)</title><rect x="12.8" y="245" width="0.1" height="15.0" fill="rgb(206,155,37)" rx="2" ry="2" />
<text  x="15.76" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (6 samples, 0.04%)</title><rect x="114.2" y="309" width="0.5" height="15.0" fill="rgb(219,181,20)" rx="2" ry="2" />
<text  x="117.25" y="319.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).upcomingHeaderNewlines (4 samples, 0.03%)</title><rect x="115.1" y="341" width="0.3" height="15.0" fill="rgb(206,110,15)" rx="2" ry="2" />
<text  x="118.14" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.01%)</title><rect x="116.2" y="293" width="0.1" height="15.0" fill="rgb(226,65,26)" rx="2" ry="2" />
<text  x="119.19" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.02%)</title><rect x="798.2" y="341" width="0.2" height="15.0" fill="rgb(218,72,32)" rx="2" ry="2" />
<text  x="801.16" y="351.5" ></text>
</g>
<g >
<title>runtime.notetsleep (6 samples, 0.04%)</title><rect x="1189.2" y="341" width="0.4" height="15.0" fill="rgb(251,89,11)" rx="2" ry="2" />
<text  x="1192.18" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.02%)</title><rect x="12.7" y="309" width="0.2" height="15.0" fill="rgb(250,176,35)" rx="2" ry="2" />
<text  x="15.69" y="319.5" ></text>
</g>
<g >
<title>runtime.deferproc (2 samples, 0.01%)</title><rect x="230.9" y="341" width="0.1" height="15.0" fill="rgb(233,229,3)" rx="2" ry="2" />
<text  x="233.88" y="351.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (4 samples, 0.03%)</title><rect x="114.8" y="341" width="0.3" height="15.0" fill="rgb(230,127,51)" rx="2" ry="2" />
<text  x="117.84" y="351.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.01%)</title><rect x="123.0" y="277" width="0.1" height="15.0" fill="rgb(215,176,29)" rx="2" ry="2" />
<text  x="125.98" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (4,101 samples, 25.93%)</title><rect x="804.9" y="293" width="306.0" height="15.0" fill="rgb(251,184,51)" rx="2" ry="2" />
<text  x="807.88" y="303.5" >runtime.pthread_cond_signal</text>
</g>
<g >
<title>context.propagateCancel (7 samples, 0.04%)</title><rect x="11.2" y="357" width="0.5" height="15.0" fill="rgb(214,31,23)" rx="2" ry="2" />
<text  x="14.19" y="367.5" ></text>
</g>
<g >
<title>runtime.gcstopm (27 samples, 0.17%)</title><rect x="335.9" y="357" width="2.0" height="15.0" fill="rgb(213,171,6)" rx="2" ry="2" />
<text  x="338.87" y="367.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (12 samples, 0.08%)</title><rect x="228.1" y="325" width="0.9" height="15.0" fill="rgb(247,13,33)" rx="2" ry="2" />
<text  x="231.12" y="335.5" ></text>
</g>
<g >
<title>runtime.walltime (4 samples, 0.03%)</title><rect x="122.1" y="293" width="0.3" height="15.0" fill="rgb(226,89,40)" rx="2" ry="2" />
<text  x="125.08" y="303.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (5 samples, 0.03%)</title><rect x="798.2" y="373" width="0.3" height="15.0" fill="rgb(220,203,0)" rx="2" ry="2" />
<text  x="801.16" y="383.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (6 samples, 0.04%)</title><rect x="121.1" y="293" width="0.5" height="15.0" fill="rgb(254,116,47)" rx="2" ry="2" />
<text  x="124.11" y="303.5" ></text>
</g>
<g >
<title>net/http.(*Server).ListenAndServe (2 samples, 0.01%)</title><rect x="329.2" y="357" width="0.1" height="15.0" fill="rgb(224,28,29)" rx="2" ry="2" />
<text  x="332.16" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.02%)</title><rect x="120.2" y="357" width="0.2" height="15.0" fill="rgb(216,44,18)" rx="2" ry="2" />
<text  x="123.22" y="367.5" ></text>
</g>
<g >
<title>net/url.(*URL).setPath (4 samples, 0.03%)</title><rect x="116.5" y="325" width="0.3" height="15.0" fill="rgb(214,127,45)" rx="2" ry="2" />
<text  x="119.49" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.01%)</title><rect x="121.9" y="293" width="0.2" height="15.0" fill="rgb(253,55,29)" rx="2" ry="2" />
<text  x="124.93" y="303.5" ></text>
</g>
<g >
<title>all (15,813 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(217,26,32)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (21 samples, 0.13%)</title><rect x="114.8" y="357" width="1.5" height="15.0" fill="rgb(243,63,46)" rx="2" ry="2" />
<text  x="117.77" y="367.5" ></text>
</g>
<g >
<title>net/http.cleanPath (3 samples, 0.02%)</title><rect x="227.7" y="341" width="0.3" height="15.0" fill="rgb(205,57,0)" rx="2" ry="2" />
<text  x="230.75" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.01%)</title><rect x="118.4" y="261" width="0.1" height="15.0" fill="rgb(213,109,0)" rx="2" ry="2" />
<text  x="121.35" y="271.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (5 samples, 0.03%)</title><rect x="227.1" y="309" width="0.3" height="15.0" fill="rgb(227,200,34)" rx="2" ry="2" />
<text  x="230.08" y="319.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (3 samples, 0.02%)</title><rect x="226.5" y="357" width="0.2" height="15.0" fill="rgb(216,170,42)" rx="2" ry="2" />
<text  x="229.48" y="367.5" ></text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (3 samples, 0.02%)</title><rect x="115.4" y="341" width="0.3" height="15.0" fill="rgb(221,150,24)" rx="2" ry="2" />
<text  x="118.44" y="351.5" ></text>
</g>
<g >
<title>runtime.stopm (6,142 samples, 38.84%)</title><rect x="338.1" y="373" width="458.3" height="15.0" fill="rgb(211,11,52)" rx="2" ry="2" />
<text  x="341.11" y="383.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.01%)</title><rect x="225.9" y="277" width="0.1" height="15.0" fill="rgb(213,190,13)" rx="2" ry="2" />
<text  x="228.88" y="287.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (4 samples, 0.03%)</title><rect x="328.0" y="261" width="0.3" height="15.0" fill="rgb(214,72,39)" rx="2" ry="2" />
<text  x="330.96" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.03%)</title><rect x="797.0" y="325" width="0.4" height="15.0" fill="rgb(248,187,51)" rx="2" ry="2" />
<text  x="800.04" y="335.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (13 samples, 0.08%)</title><rect x="1188.1" y="373" width="1.0" height="15.0" fill="rgb(226,222,37)" rx="2" ry="2" />
<text  x="1191.13" y="383.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (3 samples, 0.02%)</title><rect x="120.2" y="341" width="0.2" height="15.0" fill="rgb(210,131,40)" rx="2" ry="2" />
<text  x="123.22" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.02%)</title><rect x="229.9" y="277" width="0.2" height="15.0" fill="rgb(243,133,1)" rx="2" ry="2" />
<text  x="232.91" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.02%)</title><rect x="797.7" y="309" width="0.2" height="15.0" fill="rgb(234,6,28)" rx="2" ry="2" />
<text  x="800.71" y="319.5" ></text>
</g>
<g >
<title>strings.ToLower (2 samples, 0.01%)</title><rect x="116.8" y="325" width="0.1" height="15.0" fill="rgb(214,5,53)" rx="2" ry="2" />
<text  x="119.78" y="335.5" ></text>
</g>
<g >
<title>syscall.Read (1,338 samples, 8.46%)</title><rect x="13.9" y="213" width="99.8" height="15.0" fill="rgb(206,126,20)" rx="2" ry="2" />
<text  x="16.88" y="223.5" >syscall.Read</text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (1,276 samples, 8.07%)</title><rect x="230.6" y="405" width="95.2" height="15.0" fill="rgb(206,54,22)" rx="2" ry="2" />
<text  x="233.58" y="415.5" >net/http.(*..</text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (2 samples, 0.01%)</title><rect x="325.7" y="373" width="0.1" height="15.0" fill="rgb(241,45,35)" rx="2" ry="2" />
<text  x="328.65" y="383.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.02%)</title><rect x="796.4" y="357" width="0.3" height="15.0" fill="rgb(205,101,27)" rx="2" ry="2" />
<text  x="799.44" y="367.5" ></text>
</g>
<g >
<title>net/http.Header.WriteSubset (10 samples, 0.06%)</title><rect x="120.9" y="325" width="0.7" height="15.0" fill="rgb(226,161,5)" rx="2" ry="2" />
<text  x="123.89" y="335.5" ></text>
</g>
<g >
<title>syscall.Read (1,260 samples, 7.97%)</title><rect x="231.3" y="341" width="94.1" height="15.0" fill="rgb(233,165,46)" rx="2" ry="2" />
<text  x="234.33" y="351.5" >syscall.Read</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.01%)</title><rect x="120.1" y="293" width="0.1" height="15.0" fill="rgb(230,158,32)" rx="2" ry="2" />
<text  x="123.07" y="303.5" ></text>
</g>
<g >
<title>net/http.(*Server).Serve (2 samples, 0.01%)</title><rect x="329.2" y="341" width="0.1" height="15.0" fill="rgb(205,78,48)" rx="2" ry="2" />
<text  x="332.16" y="351.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.01%)</title><rect x="120.1" y="309" width="0.1" height="15.0" fill="rgb(238,86,42)" rx="2" ry="2" />
<text  x="123.07" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.02%)</title><rect x="797.7" y="293" width="0.2" height="15.0" fill="rgb(253,221,23)" rx="2" ry="2" />
<text  x="800.71" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (72 samples, 0.46%)</title><rect x="329.3" y="373" width="5.4" height="15.0" fill="rgb(219,3,4)" rx="2" ry="2" />
<text  x="332.31" y="383.5" ></text>
</g>
<g >
<title>runtime.morestack (5 samples, 0.03%)</title><rect x="798.2" y="405" width="0.3" height="15.0" fill="rgb(207,215,21)" rx="2" ry="2" />
<text  x="801.16" y="415.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.01%)</title><rect x="12.8" y="261" width="0.1" height="15.0" fill="rgb(235,0,29)" rx="2" ry="2" />
<text  x="15.76" y="271.5" ></text>
</g>
<g >
<title>time.Now (6 samples, 0.04%)</title><rect x="121.9" y="325" width="0.5" height="15.0" fill="rgb(232,34,23)" rx="2" ry="2" />
<text  x="124.93" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.01%)</title><rect x="325.4" y="325" width="0.2" height="15.0" fill="rgb(221,138,15)" rx="2" ry="2" />
<text  x="328.43" y="335.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.02%)</title><rect x="797.7" y="325" width="0.2" height="15.0" fill="rgb(227,169,17)" rx="2" ry="2" />
<text  x="800.71" y="335.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (24 samples, 0.15%)</title><rect x="120.6" y="357" width="1.8" height="15.0" fill="rgb(218,205,45)" rx="2" ry="2" />
<text  x="123.59" y="367.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (5 samples, 0.03%)</title><rect x="113.2" y="165" width="0.4" height="15.0" fill="rgb(252,172,45)" rx="2" ry="2" />
<text  x="116.20" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.01%)</title><rect x="117.2" y="325" width="0.2" height="15.0" fill="rgb(208,204,54)" rx="2" ry="2" />
<text  x="120.23" y="335.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.02%)</title><rect x="118.7" y="373" width="0.2" height="15.0" fill="rgb(212,130,38)" rx="2" ry="2" />
<text  x="121.72" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (4 samples, 0.03%)</title><rect x="118.4" y="325" width="0.2" height="15.0" fill="rgb(240,102,19)" rx="2" ry="2" />
<text  x="121.35" y="335.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (24 samples, 0.15%)</title><rect x="120.6" y="341" width="1.8" height="15.0" fill="rgb(212,51,36)" rx="2" ry="2" />
<text  x="123.59" y="351.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (9 samples, 0.06%)</title><rect x="119.8" y="389" width="0.6" height="15.0" fill="rgb(210,2,12)" rx="2" ry="2" />
<text  x="122.77" y="399.5" ></text>
</g>
<g >
<title>runtime.park_m (16 samples, 0.10%)</title><rect x="797.0" y="389" width="1.2" height="15.0" fill="rgb(216,179,37)" rx="2" ry="2" />
<text  x="799.97" y="399.5" ></text>
</g>
<g >
<title>runtime.schedule (15 samples, 0.09%)</title><rect x="797.0" y="373" width="1.2" height="15.0" fill="rgb(212,97,26)" rx="2" ry="2" />
<text  x="800.04" y="383.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (6 samples, 0.04%)</title><rect x="119.8" y="341" width="0.4" height="15.0" fill="rgb(246,101,11)" rx="2" ry="2" />
<text  x="122.77" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.01%)</title><rect x="11.7" y="341" width="0.2" height="15.0" fill="rgb(252,68,48)" rx="2" ry="2" />
<text  x="14.72" y="351.5" ></text>
</g>
</g>
</svg>
